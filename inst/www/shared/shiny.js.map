{
  "version": 3,
  "sources": ["globals:jquery", "../../../srcts/src/initialize/disableForm.ts", "../../../srcts/src/initialize/history.ts", "../../../srcts/src/initialize/browser.ts", "../../../srcts/src/utils/browser.ts", "../../../srcts/src/utils/userAgent.ts", "../../../srcts/src/window/libraries.ts", "../../../srcts/src/shiny/index.ts", "../../../srcts/src/utils/index.ts", "../../../srcts/src/window/pixelRatio.ts", "../../../srcts/src/utils/object.ts", "../../../srcts/src/bindings/registry.ts", "../../../srcts/src/bindings/input/inputBinding.ts", "../../../srcts/src/bindings/input/checkbox.ts", "../../../srcts/src/bindings/input/checkboxgroup.ts", "../../../srcts/src/bindings/input/number.ts", "../../../srcts/src/bindings/input/text.ts", "../../../srcts/src/bindings/input/password.ts", "../../../srcts/src/bindings/input/textarea.ts", "../../../srcts/src/bindings/input/radio.ts", "../../../srcts/src/bindings/input/date.ts", "../../../srcts/src/bindings/input/slider.ts", "../../../srcts/src/bindings/input/daterange.ts", "../../../srcts/src/bindings/input/selectInput.ts", "../../../srcts/src/utils/eval.ts", "../../../srcts/src/shiny/initedMethods.ts", "../../../srcts/src/bindings/input/actionbutton.ts", "../../../srcts/src/bindings/input/tabinput.ts", "../../../srcts/src/bindings/input/fileinput.ts", "../../../srcts/src/file/fileProcessor.ts", "../../../srcts/src/events/inputChanged.ts", "../../../srcts/src/bindings/input/index.ts", "../../../srcts/src/bindings/output/text.ts", "../../../srcts/src/bindings/output/outputBinding.ts", "../../../srcts/src/bindings/output/downloadlink.ts", "../../../srcts/src/bindings/output/datatable.ts", "../../../srcts/src/time/debounce.ts", "../../../srcts/src/time/invoke.ts", "../../../srcts/src/time/throttle.ts", "../../../srcts/src/bindings/output/html.ts", "../../../srcts/src/shiny/render.ts", "../../../srcts/src/shiny/sendImageSize.ts", "../../../srcts/src/shiny/singletons.ts", "../../../srcts/src/bindings/output/image.ts", "../../../srcts/src/imageutils/createBrush.ts", "../../../srcts/src/imageutils/initCoordmap.ts", "../../../srcts/src/imageutils/initPanelScales.ts", "../../../srcts/src/imageutils/findbox.ts", "../../../srcts/src/imageutils/shiftToRange.ts", "../../../srcts/src/imageutils/createClickInfo.ts", "../../../srcts/src/imageutils/createHandlers.ts", "../../../srcts/src/imageutils/disableDrag.ts", "../../../srcts/src/bindings/output/index.ts", "../../../srcts/src/imageutils/resetBrush.ts", "../../../srcts/src/shiny/notifications.ts", "../../../srcts/src/shiny/modal.ts", "../../../srcts/src/shiny/reconnectDialog.ts", "../../../srcts/src/shiny/init.ts", "../../../srcts/src/inputPolicies/inputBatchSender.ts", "../../../srcts/src/inputPolicies/splitInputNameType.ts", "../../../srcts/src/inputPolicies/inputNoResendDecorator.ts", "../../../srcts/src/inputPolicies/inputEventDecorator.ts", "../../../srcts/src/inputPolicies/inputRateDecorator.ts", "../../../srcts/src/inputPolicies/inputDeferDecorator.ts", "../../../srcts/src/inputPolicies/inputValidateDecorator.ts", "../../../srcts/src/shiny/bind.ts", "../../../srcts/src/bindings/outputAdapter.ts", "../../../srcts/src/shiny/shinyapp.ts", "../../../srcts/src/utils/asyncQueue.ts", "../../../srcts/src/window/userAgent.ts", "../../../srcts/src/shiny/reactlog.ts", "../../../srcts/src/initialize/index.ts", "../../../srcts/src/index.ts"],
  "sourcesContent": ["module.exports = window.jQuery", "import $ from \"jquery\";\n\nfunction disableFormSubmission(): void {\n  // disable form submissions\n  $(document).on(\"submit\", \"form:not([action])\", function (e) {\n    e.preventDefault();\n  });\n}\n\nexport { disableFormSubmission };\n", "import $ from \"jquery\";\n\nfunction trackHistory(): void {\n  const origPushState = window.history.pushState;\n\n  window.history.pushState = function (...args) {\n    const result = origPushState.apply(this, args);\n\n    $(document).trigger(\"pushstate\");\n    return result;\n  };\n}\n\nexport { trackHistory };\n", "import $ from \"jquery\";\n\nimport { isIE, setIsQt, setIsIE, setIEVersion } from \"../utils/browser\";\nimport { userAgent } from \"../utils/userAgent\";\n\nfunction getIEVersion() {\n  const msie = userAgent.indexOf(\"MSIE \");\n\n  if (isIE() && msie > 0) {\n    // IE 10 or older => return version number\n    return parseInt(\n      userAgent.substring(msie + 5, userAgent.indexOf(\".\", msie)),\n      10\n    );\n  }\n  const trident = userAgent.indexOf(\"Trident/\");\n\n  if (trident > 0) {\n    // IE 11 => return version number\n    const rv = userAgent.indexOf(\"rv:\");\n\n    return parseInt(\n      userAgent.substring(rv + 3, userAgent.indexOf(\".\", rv)),\n      10\n    );\n  }\n  return -1;\n}\n\nfunction determineBrowserInfo(): void {\n  // For easy handling of Qt quirks using CSS\n\n  if (/\\bQt\\//.test(userAgent)) {\n    $(document.documentElement).addClass(\"qt\");\n    setIsQt(true);\n  } else {\n    setIsQt(false);\n  }\n\n  // For Qt on Mac. Note that the target string as of RStudio 1.4.173\n  // is \"QtWebEngine\" and does not have a trailing slash.\n  if (/\\bQt/.test(userAgent) && /\\bMacintosh/.test(userAgent)) {\n    $(document.documentElement).addClass(\"qtmac\");\n  }\n\n  // Enable special treatment for Qt 5 quirks on Linux\n  if (/\\bQt\\/5/.test(userAgent) && /Linux/.test(userAgent)) {\n    $(document.documentElement).addClass(\"qt5\");\n  }\n\n  // Detect IE and older (pre-Chromium) Edge\n  setIsIE(/MSIE|Trident|Edge/.test(userAgent));\n\n  setIEVersion(getIEVersion());\n}\n\nexport { determineBrowserInfo };\n", "let isQtVal = false;\nlet isIEVal = false;\nlet versionIE = -1;\n\nfunction setIsQt(isQt: boolean): void {\n  isQtVal = isQt;\n}\nfunction setIsIE(isIE: boolean): void {\n  isIEVal = isIE;\n}\nfunction setIEVersion(versionIE_: number): void {\n  versionIE = versionIE_;\n}\n\nfunction isQt(): boolean {\n  return isQtVal;\n}\nfunction isIE(): boolean {\n  return isIEVal;\n}\n\n// (Name existed before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction IEVersion(): number {\n  return versionIE;\n}\n\nexport { isQt, isIE, IEVersion, setIsQt, setIsIE, setIEVersion };\n", "type UserAgent = typeof window.navigator.userAgent;\n\nlet userAgent: UserAgent;\n\nfunction setUserAgent(userAgent_: UserAgent): void {\n  userAgent = userAgent_;\n}\n\nexport type { UserAgent };\nexport { userAgent, setUserAgent };\n", "import type { Shiny } from \"../shiny\";\n\nfunction windowShiny(): Shiny {\n  // Use `any` type as we know what we are doing is _dangerous_\n  // Immediately init shiny on the window\n  if (!(window as any)[\"Shiny\"]) {\n    (window as any)[\"Shiny\"] = {};\n  }\n  return (window as any)[\"Shiny\"];\n}\n\nexport { windowShiny };\n", "import $ from \"jquery\";\n\nimport { InputBinding, OutputBinding } from \"../bindings\";\nimport { resetBrush } from \"../imageutils/resetBrush\";\nimport { $escape, compareVersion } from \"../utils\";\nimport { showNotification, removeNotification } from \"./notifications\";\nimport { showModal, removeModal } from \"./modal\";\nimport { showReconnectDialog, hideReconnectDialog } from \"./reconnectDialog\";\nimport {\n  renderContentAsync,\n  renderContent,\n  renderDependenciesAsync,\n  renderDependencies,\n  renderHtmlAsync,\n  renderHtml,\n} from \"./render\";\nimport { initShiny } from \"./init\";\nimport type {\n  shinyBindAll,\n  shinyForgetLastInputValue,\n  shinySetInputValue,\n  shinyInitializeInputs,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { setFileInputBinding } from \"./initedMethods\";\nimport type { Handler, ShinyApp } from \"./shinyapp\";\nimport { addCustomMessageHandler } from \"./shinyapp\";\nimport { initInputBindings } from \"../bindings/input\";\nimport { initOutputBindings } from \"../bindings/output\";\n\ninterface Shiny {\n  version: string;\n  $escape: typeof $escape;\n  compareVersion: typeof compareVersion;\n  inputBindings: ReturnType<typeof initInputBindings>[\"inputBindings\"];\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  InputBinding: typeof InputBinding;\n  outputBindings: ReturnType<typeof initOutputBindings>[\"outputBindings\"];\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  OutputBinding: typeof OutputBinding;\n  resetBrush: typeof resetBrush;\n  notifications: {\n    show: typeof showNotification;\n    remove: typeof removeNotification;\n  };\n  modal: { show: typeof showModal; remove: typeof removeModal };\n  createSocket?: () => WebSocket;\n  showReconnectDialog: typeof showReconnectDialog;\n  hideReconnectDialog: typeof hideReconnectDialog;\n  renderDependenciesAsync: typeof renderDependenciesAsync;\n  renderDependencies: typeof renderDependencies;\n  renderContentAsync: typeof renderContentAsync;\n  renderContent: typeof renderContent;\n  renderHtmlAsync: typeof renderHtmlAsync;\n  renderHtml: typeof renderHtml;\n  user: string;\n  progressHandlers?: ShinyApp[\"progressHandlers\"];\n  addCustomMessageHandler: typeof addCustomMessageHandler;\n  shinyapp?: ShinyApp;\n  setInputValue?: typeof shinySetInputValue;\n  onInputChange?: typeof shinySetInputValue;\n  forgetLastInputValue?: typeof shinyForgetLastInputValue;\n  bindAll?: typeof shinyBindAll;\n  unbindAll?: typeof shinyUnbindAll;\n  initializeInputs?: typeof shinyInitializeInputs;\n\n  // Eventually deprecate\n  // For old-style custom messages - should deprecate and migrate to new\n  oncustommessage?: Handler;\n}\n\nlet windowShiny: Shiny;\n\nfunction setShiny(windowShiny_: Shiny): void {\n  windowShiny = windowShiny_;\n\n  // `process.env.SHINY_VERSION` is overwritten to the Shiny version at build time.\n  // During testing, the `Shiny.version` will be `\"development\"`\n  windowShiny.version = process.env.SHINY_VERSION || \"development\";\n\n  const { inputBindings, fileInputBinding } = initInputBindings();\n  const { outputBindings } = initOutputBindings();\n\n  // set variable to be retrieved later\n  setFileInputBinding(fileInputBinding);\n\n  windowShiny.$escape = $escape;\n  windowShiny.compareVersion = compareVersion;\n  windowShiny.inputBindings = inputBindings;\n  windowShiny.InputBinding = InputBinding;\n  windowShiny.outputBindings = outputBindings;\n  windowShiny.OutputBinding = OutputBinding;\n  windowShiny.resetBrush = resetBrush;\n  windowShiny.notifications = {\n    show: showNotification,\n    remove: removeNotification,\n  };\n  windowShiny.modal = { show: showModal, remove: removeModal };\n\n  windowShiny.addCustomMessageHandler = addCustomMessageHandler;\n  windowShiny.showReconnectDialog = showReconnectDialog;\n  windowShiny.hideReconnectDialog = hideReconnectDialog;\n  windowShiny.renderDependenciesAsync = renderDependenciesAsync;\n  windowShiny.renderDependencies = renderDependencies;\n  windowShiny.renderContentAsync = renderContentAsync;\n  windowShiny.renderContent = renderContent;\n  windowShiny.renderHtmlAsync = renderHtmlAsync;\n  windowShiny.renderHtml = renderHtml;\n\n  $(function () {\n    // Init Shiny a little later than document ready, so user code can\n    // run first (i.e. to register bindings)\n    setTimeout(function () {\n      initShiny(windowShiny);\n    }, 1);\n  });\n}\n\nexport { windowShiny, setShiny };\n\nexport type { Shiny };\n", "import $ from \"jquery\";\nimport { windowDevicePixelRatio } from \"../window/pixelRatio\";\nimport type { MapValuesUnion, MapWithResult } from \"./extraTypes\";\nimport { hasOwnProperty, hasDefinedProperty } from \"./object\";\n\nfunction escapeHTML(str: string): string {\n  /* eslint-disable @typescript-eslint/naming-convention */\n  const escaped: { [key: string]: string } = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    // eslint-disable-next-line prettier/prettier\n    '\"': \"&quot;\",\n    \"'\": \"&#039;\",\n    \"/\": \"&#x2F;\",\n  };\n\n  return str.replace(/[&<>'\"/]/g, function (m) {\n    return escaped[m] as string;\n  });\n}\n\nfunction randomId(): string {\n  return Math.floor(0x100000000 + Math.random() * 0xf00000000).toString(16);\n}\n\nfunction strToBool(str: string): boolean | undefined {\n  if (!str || !str.toLowerCase) return undefined;\n\n  switch (str.toLowerCase()) {\n    case \"true\":\n      return true;\n    case \"false\":\n      return false;\n    default:\n      return undefined;\n  }\n}\n\n// A wrapper for getComputedStyle that is compatible with older browsers.\n// This is significantly faster than jQuery's .css() function.\nfunction getStyle(el: Element, styleProp: string): string | undefined {\n  let x = undefined;\n\n  if (\"currentStyle\" in el) {\n    // @ts-expect-error; Old, IE 5+ attribute only - https://developer.mozilla.org/en-US/docs/Web/API/Element/currentStyle\n    x = el.currentStyle[styleProp];\n  } else {\n    // getComputedStyle can return null when we're inside a hidden iframe on\n    // Firefox; don't attempt to retrieve style props in this case.\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    const style = document?.defaultView?.getComputedStyle(el, null);\n\n    if (style) x = style.getPropertyValue(styleProp);\n  }\n  return x;\n}\n\n// Convert a number to a string with leading zeros\nfunction padZeros(n: number, digits: number): string {\n  let str = n.toString();\n\n  while (str.length < digits) str = \"0\" + str;\n  return str;\n}\n\n// Round to a specified number of significant digits.\nfunction roundSignif(x: number, digits = 1): number {\n  if (digits < 1) throw \"Significant digits must be at least 1.\";\n\n  // This converts to a string and back to a number, which is inelegant, but\n  // is less prone to FP rounding error than an alternate method which used\n  // Math.round().\n  return parseFloat(x.toPrecision(digits));\n}\n\n// Take a string with format \"YYYY-MM-DD\" and return a Date object.\n// IE8 and QTWebKit don't support YYYY-MM-DD, but they support YYYY/MM/DD\nfunction parseDate(dateString: string): Date {\n  let date = new Date(dateString);\n\n  if (date.toString() === \"Invalid Date\") {\n    date = new Date(dateString.replace(/-/g, \"/\"));\n  }\n  return date;\n}\n\n// Given a Date object, return a string in yyyy-mm-dd format, using the\n// UTC date. This may be a day off from the date in the local time zone.\nfunction formatDateUTC(x: Date): string;\nfunction formatDateUTC(date: Date | null): string | null {\n  if (date instanceof Date) {\n    return (\n      date.getUTCFullYear() +\n      \"-\" +\n      padZeros(date.getUTCMonth() + 1, 2) +\n      \"-\" +\n      padZeros(date.getUTCDate(), 2)\n    );\n  } else {\n    return null;\n  }\n}\n\n// Given an element and a function(width, height), returns a function(). When\n// the output function is called, it calls the input function with the offset\n// width and height of the input element--but only if the size of the element\n// is non-zero and the size is different than the last time the output\n// function was called.\n//\n// Basically we are trying to filter out extraneous calls to func, so that\n// when the window size changes or whatever, we don't run resize logic for\n// elements that haven't actually changed size or aren't visible anyway.\ntype LastSizeInterface = {\n  w?: number;\n  h?: number;\n};\nfunction makeResizeFilter(\n  el: HTMLElement,\n  func: (\n    width: HTMLElement[\"offsetWidth\"],\n    height: HTMLElement[\"offsetHeight\"]\n  ) => void\n): () => void {\n  let lastSize: LastSizeInterface = {};\n\n  return function () {\n    const rect = el.getBoundingClientRect();\n    const size = { w: rect.width, h: rect.height };\n\n    if (size.w === 0 && size.h === 0) return;\n    if (size.w === lastSize.w && size.h === lastSize.h) return;\n    lastSize = size;\n    func(size.w, size.h);\n  };\n}\n\nfunction pixelRatio(): number {\n  if (windowDevicePixelRatio()) {\n    return Math.round(windowDevicePixelRatio() * 100) / 100;\n  } else {\n    return 1;\n  }\n}\n\n// Takes a string expression and returns a function that takes an argument.\n//\n// When the function is executed, it will evaluate that expression using\n// \"with\" on the argument value, and return the result.\nfunction scopeExprToFunc(expr: string): (scope: unknown) => boolean {\n  /*jshint evil: true */\n  const exprEscaped = expr\n    .replace(/[\\\\\"']/g, \"\\\\$&\")\n    // eslint-disable-next-line no-control-regex\n    .replace(/\\u0000/g, \"\\\\0\")\n    .replace(/\\n/g, \"\\\\n\")\n    .replace(/\\r/g, \"\\\\r\")\n    // \\b has a special meaning; need [\\b] to match backspace char.\n    .replace(/[\\b]/g, \"\\\\b\");\n\n  let func: () => boolean;\n\n  try {\n    // @ts-expect-error; Do not know how to type this _dangerous_ situation\n    func = new Function(\n      `with (this) {\n        try {\n          return (${expr});\n        } catch (e) {\n          console.error('Error evaluating expression: ${exprEscaped}');\n          throw e;\n        }\n      }`\n    );\n  } catch (e) {\n    console.error(\"Error parsing expression: \" + expr);\n    throw e;\n  }\n\n  return function (scope: unknown): boolean {\n    return func.call(scope);\n  };\n}\n\nfunction asArray<T>(value: T | T[] | null | undefined): T[] {\n  if (value === null || value === undefined) return [];\n  if (Array.isArray(value)) return value;\n  return [value];\n}\n\n// We need a stable sorting algorithm for ordering\n// bindings by priority and insertion order.\nfunction mergeSort<Item>(\n  list: Item[],\n  sortfunc: (a: Item, b: Item) => boolean | number\n): Item[] {\n  function merge(a: Item[], b: Item[]) {\n    let ia = 0;\n    let ib = 0;\n    const sorted = [];\n\n    while (ia < a.length && ib < b.length) {\n      if (sortfunc(a[ia], b[ib]) <= 0) {\n        sorted.push(a[ia++]);\n      } else {\n        sorted.push(b[ib++]);\n      }\n    }\n    while (ia < a.length) sorted.push(a[ia++]);\n    while (ib < b.length) sorted.push(b[ib++]);\n    return sorted;\n  }\n\n  // Don't mutate list argument\n  list = list.slice(0);\n\n  for (let chunkSize = 1; chunkSize < list.length; chunkSize *= 2) {\n    for (let i = 0; i < list.length; i += chunkSize * 2) {\n      const listA = list.slice(i, i + chunkSize);\n      const listB = list.slice(i + chunkSize, i + chunkSize * 2);\n      const merged = merge(listA, listB);\n      const args = [i, merged.length] as [number, number];\n\n      Array.prototype.push.apply(args, merged);\n      Array.prototype.splice.apply(list, args);\n    }\n  }\n\n  return list;\n}\n\n// Escape jQuery selector metacharacters: !\"#$%&'()*+,./:;<=>?@[\\]^`{|}~\nfunction $escape(val: undefined): undefined;\nfunction $escape(val: string): string;\nfunction $escape(val: string | undefined): string | undefined {\n  if (typeof val === \"undefined\") return val;\n  return val.replace(/([!\"#$%&'()*+,./:;<=>?@[\\\\\\]^`{|}~])/g, \"\\\\$1\");\n}\n\n// Maps a function over an object, preserving keys. Like the mapValues\n// function from lodash.\nfunction mapValues<T extends { [key: string]: any }, R>(\n  obj: T,\n  f: (value: MapValuesUnion<T>, key: string, object: typeof obj) => R\n): MapWithResult<T, R> {\n  const newObj = {} as MapWithResult<T, R>;\n\n  Object.keys(obj).forEach((key: keyof typeof obj) => {\n    newObj[key] = f(obj[key], key as string, obj);\n  });\n  return newObj;\n}\n\n// This is does the same as Number.isNaN, but that function unfortunately does\n// not exist in any version of IE.\nfunction isnan(x: unknown): boolean {\n  return typeof x === \"number\" && isNaN(x);\n}\n\n// Binary equality function used by the equal function.\n// (Name existed before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _equal(x: unknown, y: unknown): boolean {\n  if ($.type(x) === \"object\" && $.type(y) === \"object\") {\n    const xo = x as { [key: string]: unknown };\n    const yo = y as { [key: string]: unknown };\n\n    if (Object.keys(xo).length !== Object.keys(yo).length) return false;\n    for (const prop in xo) {\n      if (!hasOwnProperty(yo, prop) || !_equal(xo[prop], yo[prop]))\n        return false;\n    }\n    return true;\n  } else if ($.type(x) === \"array\" && $.type(y) === \"array\") {\n    const xa = x as unknown[];\n    const ya = y as unknown[];\n\n    if (xa.length !== ya.length) return false;\n    for (let i = 0; i < xa.length; i++) if (!_equal(xa[i], ya[i])) return false;\n    return true;\n  } else {\n    return x === y;\n  }\n}\n\n// Structural or \"deep\" equality predicate. Tests two or more arguments for\n// equality, traversing arrays and objects (as determined by $.type) as\n// necessary.\n//\n// Objects other than objects and arrays are tested for equality using ===.\nfunction equal(...args: unknown[]): boolean {\n  if (args.length < 2)\n    throw new Error(\"equal requires at least two arguments.\");\n  for (let i = 0; i < args.length - 1; i++) {\n    if (!_equal(args[i], args[i + 1])) return false;\n  }\n  return true;\n}\n\n// Compare version strings like \"1.0.1\", \"1.4-2\". `op` must be a string like\n// \"==\" or \"<\".\nconst compareVersion = function (\n  a: string,\n  op: \"<\" | \"<=\" | \"==\" | \">\" | \">=\",\n  b: string\n): boolean {\n  function versionParts(ver: string) {\n    return (ver + \"\")\n      .replace(/-/, \".\")\n      .replace(/(\\.0)+[^.]*$/, \"\")\n      .split(\".\");\n  }\n\n  function cmpVersion(a: string, b: string) {\n    const aParts = versionParts(a);\n    const bParts = versionParts(b);\n    const len = Math.min(aParts.length, bParts.length);\n    let cmp;\n\n    for (let i = 0; i < len; i++) {\n      cmp = parseInt(aParts[i], 10) - parseInt(bParts[i], 10);\n      if (cmp !== 0) {\n        return cmp;\n      }\n    }\n    return aParts.length - bParts.length;\n  }\n\n  const diff = cmpVersion(a, b);\n\n  if (op === \"==\") return diff === 0;\n  else if (op === \">=\") return diff >= 0;\n  else if (op === \">\") return diff > 0;\n  else if (op === \"<=\") return diff <= 0;\n  else if (op === \"<\") return diff < 0;\n  else throw `Unknown operator: ${op}`;\n};\n\nfunction updateLabel(\n  labelTxt: string | undefined,\n  labelNode: JQuery<HTMLElement>\n): void {\n  // Only update if label was specified in the update method\n  if (typeof labelTxt === \"undefined\") return;\n  if (labelNode.length !== 1) {\n    throw new Error(\"labelNode must be of length 1\");\n  }\n\n  // Should the label be empty?\n  const emptyLabel = Array.isArray(labelTxt) && labelTxt.length === 0;\n\n  if (emptyLabel) {\n    labelNode.addClass(\"shiny-label-null\");\n  } else {\n    labelNode.text(labelTxt);\n    labelNode.removeClass(\"shiny-label-null\");\n  }\n}\n\n// Compute the color property of an a tag, scoped within the element\nfunction getComputedLinkColor(el: HTMLElement): string {\n  const a = document.createElement(\"a\");\n\n  a.href = \"/\";\n  const div = document.createElement(\"div\");\n\n  div.style.setProperty(\"position\", \"absolute\", \"important\");\n  div.style.setProperty(\"top\", \"-1000px\", \"important\");\n  div.style.setProperty(\"left\", \"0\", \"important\");\n  div.style.setProperty(\"width\", \"30px\", \"important\");\n  div.style.setProperty(\"height\", \"10px\", \"important\");\n  div.appendChild(a);\n  el.appendChild(div);\n  const linkColor = window.getComputedStyle(a).getPropertyValue(\"color\");\n\n  el.removeChild(div);\n  return linkColor;\n}\n\nfunction isBS3(): boolean {\n  // @ts-expect-error; Check if `window.bootstrap` exists\n  return !window.bootstrap;\n}\n\nfunction toLowerCase<T extends string>(str: T): Lowercase<T> {\n  return str.toLowerCase() as Lowercase<T>;\n}\n\nexport {\n  escapeHTML,\n  randomId,\n  strToBool,\n  getStyle,\n  padZeros,\n  roundSignif,\n  parseDate,\n  formatDateUTC,\n  makeResizeFilter,\n  pixelRatio,\n  scopeExprToFunc,\n  asArray,\n  mergeSort,\n  $escape,\n  mapValues,\n  isnan,\n  _equal,\n  equal,\n  compareVersion,\n  updateLabel,\n  getComputedLinkColor,\n  hasOwnProperty,\n  hasDefinedProperty,\n  isBS3,\n  toLowerCase,\n};\n", "function windowDevicePixelRatio(): number {\n  return window.devicePixelRatio;\n}\n\nexport { windowDevicePixelRatio };\n", "import type { NotUndefined } from \"./extraTypes\";\n\n// Inspriation from https://fettblog.eu/typescript-hasownproperty/\n// But mixing with \"NonNullable key of Obj\" instead of \"key to unknown values\"\nfunction hasOwnProperty<Prop extends keyof X, X extends { [key: string]: any }>(\n  obj: X,\n  prop: Prop\n): obj is X & { [key in NonNullable<Prop>]: X[key] } {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n// Return true if the key exists on the object and the value is not undefined.\n//\n// This method is mainly used in input bindings' `receiveMessage` method.\n// Since we know that the values are sent by Shiny via `{jsonlite}`,\n// then we know that there are no `undefined` values. `null` is possible, but not `undefined`.\nfunction hasDefinedProperty<\n  Prop extends keyof X,\n  X extends { [key: string]: any }\n>(\n  obj: X,\n  prop: Prop\n): obj is X & { [key in NonNullable<Prop>]: NotUndefined<X[key]> } {\n  return (\n    Object.prototype.hasOwnProperty.call(obj, prop) && obj[prop] !== undefined\n  );\n}\n\n// Return type for non-null value\nfunction ifUndefined<X extends NotUndefined<any>, Y>(\n  value: X,\n  alternate: Y\n): NotUndefined<X>;\n// Return type for null value\nfunction ifUndefined<X extends undefined, Y>(value: X, alternate: Y): Y;\n// Logic\nfunction ifUndefined<X, Y>(value: X, alternate: Y): X | Y {\n  if (value === undefined) return alternate;\n  return value;\n}\n\nexport { hasOwnProperty, hasDefinedProperty, ifUndefined };\n", "import { mergeSort } from \"../utils\";\n\ninterface BindingBase {\n  name: string;\n}\n\ninterface BindingObj<Binding> {\n  binding: Binding;\n  priority: number;\n  name?: string;\n}\n\nclass BindingRegistry<Binding extends BindingBase> {\n  name!: string;\n  bindings: Array<BindingObj<Binding>> = [];\n  bindingNames: { [key: string]: BindingObj<Binding> } = {};\n\n  register(binding: Binding, bindingName: string, priority = 0): void {\n    const bindingObj = { binding, priority };\n\n    this.bindings.unshift(bindingObj);\n    if (bindingName) {\n      this.bindingNames[bindingName] = bindingObj;\n      binding.name = bindingName;\n    }\n  }\n\n  setPriority(bindingName: string, priority: number): void {\n    const bindingObj = this.bindingNames[bindingName];\n\n    if (!bindingObj)\n      throw \"Tried to set priority on unknown binding \" + bindingName;\n    bindingObj.priority = priority || 0;\n  }\n\n  getPriority(bindingName: string): number | false {\n    const bindingObj = this.bindingNames[bindingName];\n\n    if (!bindingObj) return false;\n    return bindingObj.priority;\n  }\n\n  getBindings(): Array<BindingObj<Binding>> {\n    // Sort the bindings. The ones with higher priority are consulted\n    // first; ties are broken by most-recently-registered.\n    return mergeSort(this.bindings, function (a, b) {\n      return b.priority - a.priority;\n    });\n  }\n}\n\nexport { BindingRegistry };\n", "import type { RatePolicyModes } from \"../../inputPolicies/inputRateDecorator\";\nimport type { BindScope } from \"../../shiny/bind\";\n\nclass InputBinding {\n  name!: string;\n\n  // Returns a jQuery object or element array that contains the\n  // descendants of scope that match this binding\n  find(scope: BindScope): JQuery<HTMLElement> {\n    throw \"Not implemented\";\n    scope; // unused var\n  }\n\n  getId(el: HTMLElement): string {\n    return el.getAttribute(\"data-input-id\") || el.id;\n  }\n\n  // Gives the input a type in case the server needs to know it\n  // to deserialize the JSON correctly\n  getType(el: HTMLElement): string | null {\n    return null;\n    el; // unused var\n  }\n  getValue(el: HTMLElement): any {\n    throw \"Not implemented\";\n    el; // unused var\n  }\n\n  // The callback method takes one argument, whose value is boolean. If true,\n  // allow deferred (debounce or throttle) sending depending on the value of\n  // getRatePolicy. If false, send value immediately. Default behavior is `false`\n  subscribe(el: HTMLElement, callback: (value: boolean) => void): void {\n    // empty\n    el; // unused var\n    callback; // unused var\n  }\n  unsubscribe(el: HTMLElement): void {\n    // empty\n    el; // unused var\n  }\n\n  // This is used for receiving messages that tell the input object to do\n  // things, such as setting values (including min, max, and others).\n  // 'data' should be an object with elements corresponding to value, min,\n  // max, etc., as appropriate for the type of input object. It also should\n  // trigger a change event.\n  receiveMessage(el: HTMLElement, data: unknown): void {\n    throw \"Not implemented\";\n    el; // unused var\n    data; // unused var\n  }\n  getState(el: HTMLElement): unknown {\n    throw \"Not implemented\";\n    el; // unused var\n  }\n\n  getRatePolicy(\n    el: HTMLElement\n  ): { policy: RatePolicyModes; delay: number } | null {\n    return null;\n    el; // unused var\n  }\n\n  // Some input objects need initialization before being bound. This is\n  // called when the document is ready (for statically-added input objects),\n  // and when new input objects are added to the document with\n  // htmlOutputBinding.renderValue() (for dynamically-added input objects).\n  // This is called before the input is bound.\n  initialize(el: HTMLElement): void {\n    //empty\n    el;\n  }\n\n  // This is called after unbinding the output.\n  dispose(el: HTMLElement): void {\n    //empty\n    el;\n  }\n}\n\n//// NOTES FOR FUTURE DEV\n// Turn register systemin into something that is intialized for every instance.\n// \"Have a new instance for every item, not an instance that does work on every item\"\n//\n// * Keep register as is for historical purposes\n// make a new register function that would take a class\n// these class could be constructed at build time\n// store the constructed obj on the ele and retrieve\n\n// Then the classes could store their information within their local class, rather than on the element\n// VERY CLEAN!!!\n\n// to invoke methods, it would be something like `el.shinyClass.METHOD(x,y,z)`\n// * See https://github.com/rstudio/shinyvalidate/blob/c8becd99c01fac1bac03b50e2140f49fca39e7f4/srcjs/shinyvalidate.js#L157-L167\n// these methods would be added using a new method like `inputBindings.registerClass(ClassObj, name)`\n\n// things to watch out for:\n// * unbind, then rebind. Maybe we stash the local content.\n\n// Updates:\n// * Feel free to alter method names on classes. (And make them private)\n//// END NOTES FOR FUTURE DEV\n\nexport { InputBinding };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport { hasDefinedProperty } from \"../../utils\";\n\ntype CheckedHTMLElement = HTMLInputElement;\n\ntype CheckboxChecked = CheckedHTMLElement[\"checked\"];\ntype CheckboxReceiveMessageData = { value?: CheckboxChecked; label?: string };\n\nclass CheckboxInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-checkbox class\n    return $(scope).find('input[type=\"checkbox\"]');\n  }\n  getValue(el: CheckedHTMLElement): CheckboxChecked {\n    return el.checked;\n  }\n  setValue(el: CheckedHTMLElement, value: CheckboxChecked): void {\n    el.checked = value;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.checkboxInputBinding\", function () {\n      callback(true);\n    });\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".checkboxInputBinding\");\n  }\n  getState(el: CheckedHTMLElement): { label: string; value: CheckboxChecked } {\n    return {\n      label: $(el).parent().find(\"span\").text(),\n      value: el.checked,\n    };\n  }\n  receiveMessage(\n    el: CheckedHTMLElement,\n    data: CheckboxReceiveMessageData\n  ): void {\n    if (hasDefinedProperty(data, \"value\")) {\n      el.checked = data.value;\n    }\n\n    // checkboxInput()'s label works different from other\n    // input labels...the label container should always exist\n    if (hasDefinedProperty(data, \"label\")) {\n      $(el).parent().find(\"span\").text(data.label);\n    }\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { CheckboxInputBinding };\nexport type { CheckedHTMLElement, CheckboxReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport { InputBinding } from \"./inputBinding\";\nimport { $escape, updateLabel, hasDefinedProperty } from \"../../utils\";\nimport type { CheckedHTMLElement } from \"./checkbox\";\n\ntype CheckboxGroupHTMLElement = CheckedHTMLElement;\ntype ValueLabelObject = {\n  value: HTMLInputElement[\"value\"];\n  label: string;\n};\ntype CheckboxGroupReceiveMessageData = {\n  options?: string;\n  value?: Parameters<CheckboxGroupInputBinding[\"setValue\"]>[1];\n  label: string;\n};\n\ntype CheckboxGroupValue = CheckboxGroupHTMLElement[\"value\"];\n\n// Get the DOM element that contains the top-level label\nfunction getLabelNode(el: CheckboxGroupHTMLElement): JQuery<HTMLElement> {\n  return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Given an input DOM object, get the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\nfunction getLabel(obj: HTMLElement): string | null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    return $(parentNode).find(\"span\").text().trim();\n  }\n\n  return null;\n}\n// Given an input DOM object, set the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setLabel(obj: HTMLElement, value: string): null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    $(parentNode).find(\"span\").text(value);\n  }\n\n  return null;\n}\n\nclass CheckboxGroupInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-input-checkboxgroup\");\n  }\n\n  getValue(el: CheckboxGroupHTMLElement): CheckboxGroupValue[] {\n    // Select the checkbox objects that have name equal to the grouping div's id\n    const $objs = $('input:checkbox[name=\"' + $escape(el.id) + '\"]:checked');\n    const values = new Array($objs.length);\n\n    for (let i = 0; i < $objs.length; i++) {\n      values[i] = ($objs[i] as CheckboxGroupHTMLElement).value;\n    }\n    return values;\n  }\n  setValue(el: HTMLElement, value: string[] | string | null): void {\n    // Null value should be treated as empty array\n    value = value ?? [];\n\n    // Clear all checkboxes\n    $('input:checkbox[name=\"' + $escape(el.id) + '\"]').prop(\"checked\", false);\n\n    // Accept array\n    if (value instanceof Array) {\n      for (let i = 0; i < value.length; i++) {\n        $(\n          'input:checkbox[name=\"' +\n            $escape(el.id) +\n            '\"][value=\"' +\n            $escape(value[i]) +\n            '\"]'\n        ).prop(\"checked\", true);\n      }\n      // Else assume it's a single value\n    } else {\n      $(\n        'input:checkbox[name=\"' +\n          $escape(el.id) +\n          '\"][value=\"' +\n          $escape(value) +\n          '\"]'\n      ).prop(\"checked\", true);\n    }\n  }\n  getState(el: CheckboxGroupHTMLElement): {\n    label: string;\n    value: ReturnType<CheckboxGroupInputBinding[\"getValue\"]>;\n    options: ValueLabelObject[];\n  } {\n    const $objs = $(\n      'input:checkbox[name=\"' + $escape(el.id) + '\"]'\n    ) as JQuery<CheckboxGroupHTMLElement>;\n\n    // Store options in an array of objects, each with with value and label\n    const options = new Array($objs.length);\n\n    for (let i = 0; i < options.length; i++) {\n      options[i] = { value: $objs[i].value, label: getLabel($objs[i]) };\n    }\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(\n    el: CheckboxGroupHTMLElement,\n    data: CheckboxGroupReceiveMessageData\n  ): void {\n    const $el = $(el);\n\n    // This will replace all the options\n    if (hasDefinedProperty(data, \"options\")) {\n      // Clear existing options and add each new one\n      $el.find(\"div.shiny-options-group\").remove();\n      // Backward compatibility: for HTML generated by shinybootstrap2 package\n      $el.find(\"label.checkbox\").remove();\n      $el.append(data.options);\n    }\n\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(\n    el: CheckboxGroupHTMLElement,\n    callback: (x: boolean) => void\n  ): void {\n    $(el).on(\"change.checkboxGroupInputBinding\", function () {\n      callback(false);\n    });\n  }\n  unsubscribe(el: CheckboxGroupHTMLElement): void {\n    $(el).off(\".checkboxGroupInputBinding\");\n  }\n}\n\nexport { CheckboxGroupInputBinding };\nexport type { CheckboxGroupReceiveMessageData };\n", "import $ from \"jquery\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport { TextInputBindingBase } from \"./text\";\n\ntype NumberHTMLElement = HTMLInputElement;\n\ntype NumberReceiveMessageData = {\n  label: string;\n  value?: string | null;\n  min?: string | null;\n  max?: string | null;\n  step?: string | null;\n};\n\nfunction getLabelNode(el: NumberHTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n\nclass NumberInputBinding extends TextInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-number class\n    return $(scope).find('input[type=\"number\"]');\n  }\n\n  getValue(\n    el: NumberHTMLElement\n  ): string[] | number | string | null | undefined {\n    const numberVal = $(el).val();\n\n    if (typeof numberVal == \"string\") {\n      if (/^\\s*$/.test(numberVal))\n        // Return null if all whitespace\n        return null;\n    }\n\n    // If valid Javascript number string, coerce to number\n    const numberValue = Number(numberVal);\n\n    if (!isNaN(numberValue)) {\n      return numberValue;\n    }\n\n    return numberVal; // If other string like \"1e6\", send it unchanged\n  }\n  setValue(el: NumberHTMLElement, value: number): void {\n    el.value = \"\" + value;\n  }\n  getType(el: NumberHTMLElement): string {\n    return \"shiny.number\";\n    el;\n  }\n  receiveMessage(el: NumberHTMLElement, data: NumberReceiveMessageData): void {\n    // Setting values to `\"\"` will remove the attribute value from the DOM element.\n    // The attr key will still remain, but there is not value... ex: `<input id=\"foo\" type=\"number\" min max/>`\n    if (hasDefinedProperty(data, \"value\")) el.value = data.value ?? \"\";\n    if (hasDefinedProperty(data, \"min\")) el.min = data.min ?? \"\";\n    if (hasDefinedProperty(data, \"max\")) el.max = data.max ?? \"\";\n    if (hasDefinedProperty(data, \"step\")) el.step = data.step ?? \"\";\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n\n  getState(el: NumberHTMLElement): {\n    label: string;\n    value: ReturnType<NumberInputBinding[\"getValue\"]>;\n    min: number;\n    max: number;\n    step: number;\n  } {\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      min: Number(el.min),\n      max: Number(el.max),\n      step: Number(el.step),\n    };\n  }\n}\n\nexport { NumberInputBinding };\nexport type { NumberReceiveMessageData };\n", "import $ from \"jquery\";\nimport { $escape, updateLabel, hasDefinedProperty } from \"../../utils\";\n\nimport { InputBinding } from \"./inputBinding\";\n\n// interface TextHTMLElement extends NameValueHTMLElement {\n//   placeholder: any;\n// }\n\ntype TextHTMLElement = HTMLInputElement;\ntype TextReceiveMessageData = {\n  label: string;\n  value?: TextHTMLElement[\"value\"];\n  placeholder?: TextHTMLElement[\"placeholder\"];\n};\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n\nclass TextInputBindingBase extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    const $inputs = $(scope).find(\n      'input[type=\"text\"], input[type=\"search\"], input[type=\"url\"], input[type=\"email\"]'\n    );\n    // selectize.js 0.12.4 inserts a hidden text input with an\n    // id that ends in '-selectized'. The .not() selector below\n    // is to prevent textInputBinding from accidentally picking up\n    // this hidden element as a shiny input (#2396)\n    //\n    // Inputs also now have .shiny-input-text class\n    return $inputs.not('input[type=\"text\"][id$=\"-selectized\"]');\n  }\n\n  getId(el: TextHTMLElement): string {\n    return super.getId(el) || el.name;\n    // return InputBinding.prototype.getId.call(this, el) || el.name;\n  }\n\n  getValue(el: TextHTMLElement): unknown {\n    throw \"not implemented\";\n    el;\n  }\n  setValue(el: TextHTMLElement, value: unknown): void {\n    throw \"not implemented\";\n    el;\n    value;\n  }\n\n  subscribe(el: TextHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"keyup.textInputBinding input.textInputBinding\",\n      // event: Event\n      function () {\n        callback(true);\n      }\n    );\n    $(el).on(\n      \"change.textInputBinding\",\n      // event: Event\n      function () {\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: TextHTMLElement): void {\n    $(el).off(\".textInputBinding\");\n  }\n\n  receiveMessage(el: TextHTMLElement, data: unknown): void {\n    throw \"not implemented\";\n    el;\n    data;\n  }\n\n  getState(el: TextHTMLElement): unknown {\n    throw \"not implemented\";\n    el;\n  }\n\n  getRatePolicy(el: HTMLElement): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n    el;\n  }\n}\n\nclass TextInputBinding extends TextInputBindingBase {\n  setValue(el: TextHTMLElement, value: string): void {\n    el.value = value;\n  }\n\n  getValue(el: TextHTMLElement): TextHTMLElement[\"value\"] {\n    return el.value;\n  }\n\n  getState(el: TextHTMLElement): {\n    label: string;\n    value: string;\n    placeholder: string;\n  } {\n    return {\n      label: getLabelNode(el).text(),\n      value: el.value,\n      placeholder: el.placeholder,\n    };\n  }\n  receiveMessage(el: TextHTMLElement, data: TextReceiveMessageData): void {\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n\n    updateLabel(data.label, getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"placeholder\"))\n      el.placeholder = data.placeholder;\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { TextInputBinding, TextInputBindingBase };\n\nexport type { TextHTMLElement, TextReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport { TextInputBinding } from \"./text\";\n\nclass PasswordInputBinding extends TextInputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-password class\n    return $(scope).find('input[type=\"password\"]');\n  }\n\n  getType(el: HTMLElement): string {\n    return \"shiny.password\";\n    el;\n  }\n}\n\nexport { PasswordInputBinding };\n", "import $ from \"jquery\";\n\nimport { TextInputBinding } from \"./text\";\n\nclass TextareaInputBinding extends TextInputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs now also have the .shiny-input-textarea class\n    return $(scope).find(\"textarea\");\n  }\n}\n\nexport { TextareaInputBinding };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\n\ntype RadioHTMLElement = HTMLInputElement;\n\ntype ValueLabelObject = {\n  value: HTMLInputElement[\"value\"];\n  label: string;\n};\n\ntype RadioReceiveMessageData = {\n  value?: string | [];\n  options?: ValueLabelObject[];\n  label: string;\n};\n\n// Get the DOM element that contains the top-level label\nfunction getLabelNode(el: RadioHTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Given an input DOM object, get the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\nfunction getLabel(obj: HTMLElement): string | null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    return $(parentNode).find(\"span\").text().trim();\n  }\n\n  return null;\n}\n// Given an input DOM object, set the associated label. Handles labels\n// that wrap the input as well as labels associated with 'for' attribute.\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setLabel(obj: HTMLElement, value: string): null {\n  const parentNode = obj.parentNode as HTMLElement;\n\n  // If <label><input /><span>label text</span></label>\n  if (parentNode.tagName === \"LABEL\") {\n    $(parentNode).find(\"span\").text(value);\n  }\n\n  return null;\n}\n\nclass RadioInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-input-radiogroup\");\n  }\n  getValue(\n    el: RadioHTMLElement\n  ): string[] | number | string | null | undefined {\n    // Select the radio objects that have name equal to the grouping div's id\n    const checkedItems = $(\n      'input:radio[name=\"' + $escape(el.id) + '\"]:checked'\n    );\n\n    if (checkedItems.length === 0) {\n      // If none are checked, the input will return null (it's the default on load,\n      // but it wasn't emptied when calling updateRadioButtons with character(0)\n      return null;\n    }\n\n    return checkedItems.val();\n  }\n  setValue(el: RadioHTMLElement, value: string | []): void {\n    if (Array.isArray(value) && value.length === 0) {\n      // Removing all checked item if the sent data is empty\n      $('input:radio[name=\"' + $escape(el.id) + '\"]').prop(\"checked\", false);\n    } else {\n      $(\n        'input:radio[name=\"' +\n          $escape(el.id) +\n          '\"][value=\"' +\n          $escape(value) +\n          '\"]'\n      ).prop(\"checked\", true);\n    }\n  }\n  getState(el: RadioHTMLElement): {\n    label: string;\n    value: ReturnType<RadioInputBinding[\"getValue\"]>;\n    options: ValueLabelObject[];\n  } {\n    const $objs = $(\n      'input:radio[name=\"' + $escape(el.id) + '\"]'\n    ) as JQuery<RadioHTMLElement>;\n\n    // Store options in an array of objects, each with with value and label\n    const options = new Array($objs.length);\n\n    for (let i = 0; i < options.length; i++) {\n      options[i] = { value: $objs[i].value, label: getLabel($objs[i]) };\n    }\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(el: RadioHTMLElement, data: RadioReceiveMessageData): void {\n    const $el = $(el);\n    // This will replace all the options\n\n    if (hasDefinedProperty(data, \"options\")) {\n      // Clear existing options and add each new one\n      $el.find(\"div.shiny-options-group\").remove();\n      // Backward compatibility: for HTML generated by shinybootstrap2 package\n      $el.find(\"label.radio\").remove();\n      // @ts-expect-error; TODO-barret; IDK what this line is doing\n      // TODO-barret; Should this line be setting attributes instead?\n      // `data.options` is an array of `{value, label}` objects\n      $el.append(data.options);\n    }\n\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: RadioHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.radioInputBinding\", function () {\n      callback(false);\n    });\n  }\n  unsubscribe(el: RadioHTMLElement): void {\n    $(el).off(\".radioInputBinding\");\n  }\n}\n\nexport { RadioInputBinding };\nexport type { RadioReceiveMessageData };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport {\n  formatDateUTC,\n  updateLabel,\n  $escape,\n  parseDate,\n  hasDefinedProperty,\n} from \"../../utils\";\nimport type { NotUndefined } from \"../../utils/extraTypes\";\n\ndeclare global {\n  interface JQuery {\n    // Adjustment of https://github.com/DefinitelyTyped/DefinitelyTyped/blob/1626e0bac175121ec2e9f766a770e03a91843c31/types/bootstrap-datepicker/index.d.ts#L113-L114\n    bsDatepicker(methodName: \"getUTCDate\"): Date;\n    // Infinity is not allowed as a literal return type. Using `1e9999` as a placeholder that resolves to Infinity\n    // https://github.com/microsoft/TypeScript/issues/32277\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    bsDatepicker(methodName: \"getStartDate\"): Date | -1e9999;\n    // eslint-disable-next-line @typescript-eslint/no-loss-of-precision\n    bsDatepicker(methodName: \"getEndDate\"): Date | 1e9999;\n    bsDatepicker(methodName: string): void;\n    bsDatepicker(methodName: string, params: Date | null): void;\n  }\n}\n\ntype DateReceiveMessageData = {\n  label: string;\n  min?: Date | null;\n  max?: Date | null;\n  value?: Date | null;\n};\n\nclass DateInputBindingBase extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-date-input\");\n  }\n  getType(el: HTMLElement): string {\n    return \"shiny.date\";\n    el;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"keyup.dateInputBinding input.dateInputBinding\",\n      // event: Event\n      function () {\n        // Use normal debouncing policy when typing\n        callback(true);\n      }\n    );\n    $(el).on(\n      \"changeDate.dateInputBinding change.dateInputBinding\",\n      // event: Event\n      function () {\n        // Send immediately when clicked\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".dateInputBinding\");\n  }\n\n  getRatePolicy(): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n  }\n\n  setValue(el: HTMLElement, data: unknown): void {\n    throw \"not implemented\";\n    el;\n    data;\n  }\n  initialize(el: HTMLElement): void {\n    const $input = $(el).find(\"input\");\n\n    // The challenge with dates is that we want them to be at 00:00 in UTC so\n    // that we can do comparisons with them. However, the Date object itself\n    // does not carry timezone information, so we should call _floorDateTime()\n    // on Dates as soon as possible so that we know we're always working with\n    // consistent objects.\n\n    let date = $input.data(\"initial-date\");\n    // If initial_date is null, set to current date\n\n    if (date === undefined || date === null) {\n      // Get local date, but normalized to beginning of day in UTC.\n      date = this._floorDateTime(this._dateAsUTC(new Date()));\n    }\n\n    this.setValue(el, date);\n\n    // Set the start and end dates, from min-date and max-date. These always\n    // use yyyy-mm-dd format, instead of bootstrap-datepicker's built-in\n    // support for date-startdate and data-enddate, which use the current\n    // date format.\n    if ($input.data(\"min-date\") !== undefined) {\n      this._setMin($input[0], $input.data(\"min-date\"));\n    }\n    if ($input.data(\"max-date\") !== undefined) {\n      this._setMax($input[0], $input.data(\"max-date\"));\n    }\n  }\n  protected _getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n    return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n  }\n  // Given a format object from a date picker, return a string\n  protected _formatToString(format: {\n    parts: string[];\n    separators: string[];\n  }): string {\n    // Format object has structure like:\n    // { parts: ['mm', 'dd', 'yy'], separators: ['', '/', '/' ,''] }\n    let str = \"\";\n\n    let i;\n\n    for (i = 0; i < format.parts.length; i++) {\n      str += format.separators[i] + format.parts[i];\n    }\n    str += format.separators[i];\n    return str;\n  }\n  // Given an unambiguous date string or a Date object, set the min (start) date.\n  // null will unset. undefined will result in no change,\n  protected _setMin(el: HTMLElement, date: Date | null): void {\n    if (date === null) {\n      $(el).bsDatepicker(\"setStartDate\", null);\n      return;\n    }\n\n    const parsedDate = this._newDate(date);\n\n    // If date parsing fails, do nothing\n    if (parsedDate === null) return;\n\n    // (Assign back to date as a Date object)\n    date = parsedDate as Date;\n\n    if (isNaN(date.valueOf())) return;\n    // Workarounds for\n    // https://github.com/rstudio/shiny/issues/2335\n    const curValue = $(el).bsDatepicker(\"getUTCDate\");\n\n    // Note that there's no `setUTCStartDate`, so we need to convert this Date.\n    // It starts at 00:00 UTC, and we convert it to 00:00 in local time, which\n    // is what's needed for `setStartDate`.\n    $(el).bsDatepicker(\"setStartDate\", this._utcDateAsLocal(date));\n\n    // If the new min is greater than the current date, unset the current date.\n    if (date && curValue && date.getTime() > curValue.getTime()) {\n      $(el).bsDatepicker(\"clearDates\");\n    } else {\n      // Setting the date needs to be done AFTER `setStartDate`, because the\n      // datepicker has a bug where calling `setStartDate` will clear the date\n      // internally (even though it will still be visible in the UI) when a\n      // 2-digit year format is used.\n      // https://github.com/eternicode/bootstrap-datepicker/issues/2010\n      $(el).bsDatepicker(\"setUTCDate\", curValue);\n    }\n  }\n  // Given an unambiguous date string or a Date object, set the max (end) date\n  // null will unset.\n  protected _setMax(el: HTMLElement, date: Date | null): void {\n    if (date === null) {\n      $(el).bsDatepicker(\"setEndDate\", null);\n      return;\n    }\n\n    const parsedDate = this._newDate(date);\n\n    // If date parsing fails, do nothing\n    if (parsedDate === null) return;\n\n    date = parsedDate as Date;\n\n    if (isNaN(date.valueOf())) return;\n\n    // Workaround for same issue as in _setMin.\n    const curValue = $(el).bsDatepicker(\"getUTCDate\");\n\n    $(el).bsDatepicker(\"setEndDate\", this._utcDateAsLocal(date));\n\n    // If the new min is greater than the current date, unset the current date.\n    if (date && curValue && date.getTime() < curValue.getTime()) {\n      $(el).bsDatepicker(\"clearDates\");\n    } else {\n      $(el).bsDatepicker(\"setUTCDate\", curValue);\n    }\n  }\n  // Given a date string of format yyyy-mm-dd, return a Date object with\n  // that date at 12AM UTC.\n  // If date is a Date object, return it unchanged.\n  protected _newDate(date: Date | never | string): Date | null {\n    if (date instanceof Date) return date;\n    if (!date) return null;\n\n    // Get Date object - this will be at 12AM in UTC, but may print\n    // differently at the Javascript console.\n    const d = parseDate(date);\n\n    // If invalid date, return null\n    if (isNaN(d.valueOf())) return null;\n\n    return d;\n  }\n  // A Date can have any time during a day; this will return a new Date object\n  // set to 00:00 in UTC.\n  protected _floorDateTime(date: Date): Date {\n    date = new Date(date.getTime());\n    date.setUTCHours(0, 0, 0, 0);\n    return date;\n  }\n  // Given a Date object, return a Date object which has the same \"clock time\"\n  // in UTC. For example, if input date is 2013-02-01 23:00:00 GMT-0600 (CST),\n  // output will be 2013-02-01 23:00:00 UTC. Note that the JS console may\n  // print this in local time, as \"Sat Feb 02 2013 05:00:00 GMT-0600 (CST)\".\n  protected _dateAsUTC(date: Date): Date {\n    return new Date(date.getTime() - date.getTimezoneOffset() * 60000);\n  }\n  // The inverse of _dateAsUTC. This is needed to adjust time zones because\n  // some bootstrap-datepicker methods only take local dates as input, and not\n  // UTC.\n  protected _utcDateAsLocal(date: Date): Date {\n    return new Date(date.getTime() + date.getTimezoneOffset() * 60000);\n  }\n}\n\nclass DateInputBinding extends DateInputBindingBase {\n  // Return the date in an unambiguous format, yyyy-mm-dd (as opposed to a\n  // format like mm/dd/yyyy)\n  getValue(el: HTMLElement): string {\n    const date = $(el).find(\"input\").bsDatepicker(\"getUTCDate\");\n\n    return formatDateUTC(date);\n  }\n  // value must be an unambiguous string like '2001-01-01', or a Date object.\n  setValue(el: HTMLElement, value: Date | null): void {\n    // R's NA, which is null here will remove current value\n    if (value === null) {\n      $(el).find(\"input\").val(\"\").bsDatepicker(\"update\");\n      return;\n    }\n\n    const date = this._newDate(value);\n\n    if (date === null) {\n      return;\n    }\n\n    // If date is invalid, do nothing\n    if (isNaN((date as Date).valueOf())) return;\n\n    $(el).find(\"input\").bsDatepicker(\"setUTCDate\", date);\n  }\n  getState(el: HTMLElement): {\n    label: string;\n    value: string | null;\n    valueString: string[] | number | string;\n    min: string | null;\n    max: string | null;\n    language: string | null;\n    weekstart: number;\n    format: string;\n    startview: DatepickerViewModes;\n  } {\n    const $el = $(el);\n    const $input = $el.find(\"input\");\n\n    let min = $input.data(\"datepicker\").startDate;\n    let max = $input.data(\"datepicker\").endDate;\n\n    // Stringify min and max. If min and max aren't set, they will be\n    // -Infinity and Infinity; replace these with null.\n    min = min === -Infinity ? null : formatDateUTC(min);\n    max = max === Infinity ? null : formatDateUTC(max);\n\n    // startViewMode is stored as a number; convert to string\n    let startview = $input.data(\"datepicker\").startViewMode;\n\n    if (startview === 2) startview = \"decade\";\n    else if (startview === 1) startview = \"year\";\n    else if (startview === 0) startview = \"month\";\n\n    return {\n      label: this._getLabelNode(el).text(),\n      value: this.getValue(el),\n      valueString: $input.val() as NotUndefined<ReturnType<typeof $input.val>>,\n      min: min,\n      max: max,\n      language: $input.data(\"datepicker\").language,\n      weekstart: $input.data(\"datepicker\").weekStart,\n      format: this._formatToString($input.data(\"datepicker\").format),\n      startview: startview,\n    };\n  }\n  receiveMessage(el: HTMLElement, data: DateReceiveMessageData): void {\n    const $input = $(el).find(\"input\");\n\n    updateLabel(data.label, this._getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"min\")) this._setMin($input[0], data.min);\n\n    if (hasDefinedProperty(data, \"max\")) this._setMax($input[0], data.max);\n\n    // Must set value only after min and max have been set. If new value is\n    // outside the bounds of the previous min/max, then the result will be a\n    // blank input.\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n\n    $(el).trigger(\"change\");\n  }\n}\n\nexport { DateInputBinding, DateInputBindingBase };\nexport type { DateReceiveMessageData };\n", "import type {\n  IonRangeSliderEvent,\n  IonRangeSliderOptions,\n} from \"ion-rangeslider\";\nimport $ from \"jquery\";\n// import { NameValueHTMLElement } from \".\";\nimport {\n  formatDateUTC,\n  updateLabel,\n  $escape,\n  hasDefinedProperty,\n} from \"../../utils\";\n\nimport type { TextHTMLElement } from \"./text\";\nimport { TextInputBindingBase } from \"./text\";\n\n// interface SliderHTMLElement extends NameValueHTMLElement {\n//   checked?: any;\n// }\n\ntype TimeFormatter = (fmt: string, dt: Date) => string;\n// Backward compatible code for old-style jsliders (Shiny <= 0.10.2.2),\ntype LegacySlider = {\n  canStepNext: () => boolean;\n  stepNext: () => void;\n  resetToStart: () => void;\n};\n\ntype SliderReceiveMessageData = {\n  label: string;\n  value?: Array<number | string> | number | string;\n  min?: number;\n  max?: number;\n  step?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  \"data-type\"?: string;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  \"time-format\"?: string;\n  timezone?: string;\n};\n\n// MUST use window.strftime as the javascript dependency is dynamic\n// and could be needed after shiny has initialized.\ndeclare global {\n  interface Window {\n    strftime: TimeFormatter & {\n      utc: () => TimeFormatter;\n      timezone: (timezone: string) => TimeFormatter;\n    };\n  }\n}\n\n// Necessary to get hidden sliders to send their updated values\nfunction forceIonSliderUpdate(slider: any) {\n  if (slider.$cache && slider.$cache.input)\n    slider.$cache.input.trigger(\"change\");\n  else console.log(\"Couldn't force ion slider to update\");\n}\n\ntype Prettify = (num: number) => string;\nfunction getTypePrettifyer(\n  dataType: string,\n  timeFormat: string,\n  timezone: string\n) {\n  let timeFormatter: TimeFormatter;\n  let prettify: Prettify;\n\n  if (dataType === \"date\") {\n    timeFormatter = window.strftime.utc();\n    prettify = function (num) {\n      return timeFormatter(timeFormat, new Date(num));\n    };\n  } else if (dataType === \"datetime\") {\n    if (timezone) timeFormatter = window.strftime.timezone(timezone);\n    else timeFormatter = window.strftime;\n\n    prettify = function (num) {\n      return timeFormatter(timeFormat, new Date(num));\n    };\n  } else {\n    // The default prettify function for ion.rangeSlider adds thousands\n    // separators after the decimal mark, so we have our own version here.\n    // (#1958)\n    prettify = function (this: IonRangeSliderOptions, num: number) {\n      // When executed, `this` will refer to the `IonRangeSlider.options`\n      // object.\n      return formatNumber(num, this.prettify_separator);\n    };\n  }\n  return prettify;\n}\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el)\n    .parent()\n    .find('label[for=\"' + $escape(el.id) + '\"]');\n}\n// Number of values; 1 for single slider, 2 for range slider\nfunction numValues(el: HTMLElement): 1 | 2 {\n  if ($(el).data(\"ionRangeSlider\").options.type === \"double\") return 2;\n  else return 1;\n}\n\nclass SliderInputBinding extends TextInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Check if ionRangeSlider plugin is loaded\n    if (!$.fn.ionRangeSlider) {\n      // Return empty set of _found_ items\n      return $();\n    }\n\n    return $(scope).find(\"input.js-range-slider\");\n  }\n\n  getType(el: HTMLElement): string | null {\n    const dataType = $(el).data(\"data-type\");\n\n    if (dataType === \"date\") return \"shiny.date\";\n    else if (dataType === \"datetime\") return \"shiny.datetime\";\n    else return null;\n  }\n  getValue(\n    el: TextHTMLElement\n  ): number | string | [number | string, number | string] {\n    const $el = $(el);\n    const result = $(el).data(\"ionRangeSlider\").result as IonRangeSliderEvent;\n\n    // Function for converting numeric value from slider to appropriate type.\n    let convert: (val: unknown) => number | string;\n    const dataType = $el.data(\"data-type\");\n\n    if (dataType === \"date\") {\n      convert = function (val: unknown) {\n        return formatDateUTC(new Date(Number(val)));\n      };\n    } else if (dataType === \"datetime\") {\n      convert = function (val: unknown) {\n        // Convert ms to s\n        return Number(val) / 1000;\n      };\n    } else {\n      convert = function (val: unknown) {\n        return Number(val);\n      };\n    }\n\n    if (numValues(el) === 2) {\n      return [convert(result.from), convert(result.to)];\n    } else {\n      return convert(result.from);\n    }\n  }\n  setValue(\n    el: HTMLElement,\n    value: number | string | [number | string, number | string]\n  ): void {\n    const $el = $(el);\n    const slider = $el.data(\"ionRangeSlider\");\n\n    $el.data(\"immediate\", true);\n    try {\n      if (numValues(el) === 2 && value instanceof Array) {\n        slider.update({ from: value[0], to: value[1] });\n      } else {\n        slider.update({ from: value });\n      }\n\n      forceIonSliderUpdate(slider);\n    } finally {\n      $el.data(\"immediate\", false);\n    }\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\"change.sliderInputBinding\", function () {\n      callback(!$(el).data(\"immediate\") && !$(el).data(\"animating\"));\n    });\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".sliderInputBinding\");\n  }\n  receiveMessage(el: HTMLElement, data: SliderReceiveMessageData): void {\n    const $el = $(el);\n    const slider = $el.data(\"ionRangeSlider\");\n    const msg: {\n      from?: number | string;\n      to?: number | string;\n      min?: number;\n      max?: number;\n      step?: number;\n      prettify?: Prettify;\n    } = {};\n\n    if (hasDefinedProperty(data, \"value\")) {\n      if (numValues(el) === 2 && data.value instanceof Array) {\n        msg.from = data.value[0];\n        msg.to = data.value[1];\n      } else {\n        if (Array.isArray(data.value)) {\n          const errorReason = [\n            \"an empty array.\",\n            \"a single-value array.\",\n            \"an array with more than two values.\",\n          ];\n          throw (\n            \"Slider requires two values to update with an array, \" +\n            \"but message value was \" +\n            errorReason[Math.min(data.value.length, 2)]\n          );\n        }\n        msg.from = data.value;\n      }\n    }\n\n    const sliderFeatures: Array<\"max\" | \"min\" | \"step\"> = [\n      \"min\",\n      \"max\",\n      \"step\",\n    ];\n\n    for (let i = 0; i < sliderFeatures.length; i++) {\n      const feats = sliderFeatures[i];\n\n      if (hasDefinedProperty(data, feats)) {\n        msg[feats] = data[feats];\n      }\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    // (maybe) update data elements\n    const domElements: Array<\"data-type\" | \"time-format\" | \"timezone\"> = [\n      \"data-type\",\n      \"time-format\",\n      \"timezone\",\n    ];\n\n    for (let i = 0; i < domElements.length; i++) {\n      const elem = domElements[i];\n\n      if (hasDefinedProperty(data, elem)) {\n        $el.data(elem, data[elem]);\n      }\n    }\n\n    // retrieve latest data values\n    const dataType = $el.data(\"data-type\");\n    const timeFormat = $el.data(\"time-format\");\n    const timezone = $el.data(\"timezone\");\n\n    msg.prettify = getTypePrettifyer(dataType, timeFormat, timezone);\n\n    $el.data(\"immediate\", true);\n    try {\n      slider.update(msg);\n      forceIonSliderUpdate(slider);\n    } finally {\n      $el.data(\"immediate\", false);\n    }\n  }\n  getRatePolicy(el: HTMLElement): { policy: \"debounce\"; delay: 250 } {\n    return {\n      policy: \"debounce\",\n      delay: 250,\n    };\n    el;\n  }\n  // TODO-barret Why not implemented?\n  getState(el: HTMLInputElement): void {\n    // empty\n    el;\n  }\n\n  initialize(el: HTMLElement): void {\n    const $el = $(el);\n    const dataType = $el.data(\"data-type\");\n    const timeFormat = $el.data(\"time-format\");\n    const timezone = $el.data(\"timezone\");\n\n    const opts = {\n      prettify: getTypePrettifyer(dataType, timeFormat, timezone),\n    };\n\n    $el.ionRangeSlider(opts);\n  }\n}\n\n// Format numbers for nicer output.\n// formatNumber(1234567.12345)           === \"1,234,567.12345\"\n// formatNumber(1234567.12345, \".\", \",\") === \"1.234.567,12345\"\n// formatNumber(1000, \" \")               === \"1 000\"\n// formatNumber(20)                      === \"20\"\n// formatNumber(1.2345e24)               === \"1.2345e+24\"\nfunction formatNumber(\n  num: number,\n  thousandSep = \",\",\n  decimalSep = \".\"\n): string {\n  const parts = num.toString().split(\".\");\n\n  // Add separators to portion before decimal mark.\n  parts[0] = parts[0].replace(\n    /(\\d{1,3}(?=(?:\\d\\d\\d)+(?!\\d)))/g,\n    \"$1\" + thousandSep\n  );\n\n  if (parts.length === 1) return parts[0];\n  else if (parts.length === 2) return parts[0] + decimalSep + parts[1];\n  else return \"\";\n}\n\n// TODO-barret ; this should be put in the \"init\" areas, correct?\n$(document).on(\"click\", \".slider-animate-button\", function (evt: Event) {\n  evt.preventDefault();\n  const self = $(this);\n  const target = $(\"#\" + $escape(self.attr(\"data-target-id\") as string));\n  const startLabel = \"Play\";\n  const stopLabel = \"Pause\";\n  const loop =\n    self.attr(\"data-loop\") !== undefined &&\n    !/^\\s*false\\s*$/i.test(self.attr(\"data-loop\") as string);\n  let animInterval = self.attr(\"data-interval\") as number | string;\n\n  if (isNaN(animInterval as number)) animInterval = 1500;\n  else animInterval = Number(animInterval);\n\n  if (!target.data(\"animTimer\")) {\n    let timer;\n\n    // Separate code paths:\n    // Backward compatible code for old-style jsliders (Shiny <= 0.10.2.2),\n    // and new-style ionsliders.\n    if (target.hasClass(\"jslider\")) {\n      const slider = target.slider() as unknown as LegacySlider;\n\n      // If we're currently at the end, restart\n      if (!slider.canStepNext()) slider.resetToStart();\n\n      timer = setInterval(function () {\n        if (loop && !slider.canStepNext()) {\n          slider.resetToStart();\n        } else {\n          slider.stepNext();\n          if (!loop && !slider.canStepNext()) {\n            // TODO-barret replace with self.trigger(\"click\")\n            self.click(); // stop the animation\n          }\n        }\n      }, animInterval);\n    } else {\n      const slider = target.data(\"ionRangeSlider\");\n      // Single sliders have slider.options.type == \"single\", and only the\n      // `from` value is used. Double sliders have type == \"double\", and also\n      // use the `to` value for the right handle.\n      const sliderCanStep = function () {\n        if (slider.options.type === \"double\")\n          return slider.result.to < slider.result.max;\n        else return slider.result.from < slider.result.max;\n      };\n      const sliderReset = function () {\n        const val: { from: number; to?: number } = { from: slider.result.min };\n        // Preserve the current spacing for double sliders\n\n        if (slider.options.type === \"double\")\n          val.to = val.from + (slider.result.to - slider.result.from);\n\n        slider.update(val);\n        forceIonSliderUpdate(slider);\n      };\n      const sliderStep = function () {\n        // Don't overshoot the end\n        const val: { from: number; to?: number } = {\n          from: Math.min(\n            slider.result.max,\n            slider.result.from + slider.options.step\n          ),\n        };\n\n        if (slider.options.type === \"double\")\n          val.to = Math.min(\n            slider.result.max,\n            slider.result.to + slider.options.step\n          );\n\n        slider.update(val);\n        forceIonSliderUpdate(slider);\n      };\n\n      // If we're currently at the end, restart\n      if (!sliderCanStep()) sliderReset();\n\n      timer = setInterval(function () {\n        if (loop && !sliderCanStep()) {\n          sliderReset();\n        } else {\n          sliderStep();\n          if (!loop && !sliderCanStep()) {\n            self.click(); // stop the animation\n          }\n        }\n      }, animInterval);\n    }\n\n    target.data(\"animTimer\", timer);\n    self.attr(\"title\", stopLabel);\n    self.addClass(\"playing\");\n    target.data(\"animating\", true);\n  } else {\n    clearTimeout(target.data(\"animTimer\"));\n    target.removeData(\"animTimer\");\n    self.attr(\"title\", startLabel);\n    self.removeClass(\"playing\");\n    target.removeData(\"animating\");\n  }\n});\n\nexport { SliderInputBinding };\nexport type { SliderReceiveMessageData };\n", "import $ from \"jquery\";\n\nimport {\n  $escape,\n  formatDateUTC,\n  hasDefinedProperty,\n  updateLabel,\n} from \"../../utils\";\nimport { DateInputBindingBase } from \"./date\";\n\ntype DateRangeReceiveMessageData = {\n  label: string;\n  min?: Date;\n  max?: Date;\n  value?: { start?: Date; end?: Date };\n};\n\nfunction getLabelNode(el: HTMLElement): JQuery<HTMLElement> {\n  return $(el).find('label[for=\"' + $escape(el.id) + '\"]');\n}\nclass DateRangeInputBinding extends DateInputBindingBase {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-date-range-input\");\n  }\n  // Return the date in an unambiguous format, yyyy-mm-dd (as opposed to a\n  // format like mm/dd/yyyy)\n  getValue(el: HTMLElement): [string, string] {\n    const $inputs = $(el).find(\"input\");\n    const start = $inputs.eq(0).bsDatepicker(\"getUTCDate\");\n    const end = $inputs.eq(1).bsDatepicker(\"getUTCDate\");\n\n    return [formatDateUTC(start), formatDateUTC(end)];\n  }\n  // value must be an object, with optional fields `start` and `end`. These\n  // should be unambiguous strings like '2001-01-01', or Date objects.\n  setValue(el: HTMLElement, value: { start?: Date; end?: Date }): void {\n    if (!(value instanceof Object)) {\n      return;\n    }\n\n    // Get the start and end input objects\n    const $inputs = $(el).find(\"input\");\n\n    // If value is undefined, don't try to set\n    // null will remove the current value\n    if (value.start !== undefined) {\n      if (value.start === null) {\n        $inputs.eq(0).val(\"\").bsDatepicker(\"update\");\n      } else {\n        const start = this._newDate(value.start);\n\n        $inputs.eq(0).bsDatepicker(\"setUTCDate\", start);\n      }\n    }\n    if (value.end !== undefined) {\n      if (value.end === null) {\n        $inputs.eq(1).val(\"\").bsDatepicker(\"update\");\n      } else {\n        const end = this._newDate(value.end);\n\n        $inputs.eq(1).bsDatepicker(\"setUTCDate\", end);\n      }\n    }\n  }\n  getState(el: HTMLElement): {\n    label: string;\n    value: [string, string];\n    valueString: [string, string];\n    min: ReturnType<typeof formatDateUTC> | null;\n    max: ReturnType<typeof formatDateUTC> | null;\n    weekstart: string;\n    format: string;\n    language: string;\n    startview: string;\n  } {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    // For many of the properties, assume start and end have the same values\n    const min = $startinput.bsDatepicker(\"getStartDate\");\n    const max = $startinput.bsDatepicker(\"getEndDate\");\n\n    // Stringify min and max. If min and max aren't set, they will be\n    // -Infinity and Infinity; replace these with null.\n    const minStr = min === -Infinity ? null : formatDateUTC(min as Date);\n    const maxStr = max === Infinity ? null : formatDateUTC(max as Date);\n\n    // startViewMode is stored as a number; convert to string\n    let startview = $startinput.data(\"datepicker\").startView;\n\n    if (startview === 2) startview = \"decade\";\n    else if (startview === 1) startview = \"year\";\n    else if (startview === 0) startview = \"month\";\n\n    return {\n      label: getLabelNode(el).text(),\n      value: this.getValue(el),\n      valueString: [$startinput.val() as string, $endinput.val() as string],\n      min: minStr,\n      max: maxStr,\n      weekstart: $startinput.data(\"datepicker\").weekStart,\n      format: this._formatToString($startinput.data(\"datepicker\").format),\n      language: $startinput.data(\"datepicker\").language,\n      startview: startview,\n    };\n  }\n  receiveMessage(el: HTMLElement, data: DateRangeReceiveMessageData): void {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    updateLabel(data.label, getLabelNode(el));\n\n    if (hasDefinedProperty(data, \"min\")) {\n      this._setMin($startinput[0], data.min);\n      this._setMin($endinput[0], data.min);\n    }\n\n    if (hasDefinedProperty(data, \"max\")) {\n      this._setMax($startinput[0], data.max);\n      this._setMax($endinput[0], data.max);\n    }\n\n    // Must set value only after min and max have been set. If new value is\n    // outside the bounds of the previous min/max, then the result will be a\n    // blank input.\n    if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    $el.trigger(\"change\");\n  }\n\n  initialize(el: HTMLElement): void {\n    const $el = $(el);\n    const $inputs = $el.find(\"input\");\n    const $startinput = $inputs.eq(0);\n    const $endinput = $inputs.eq(1);\n\n    let start = $startinput.data(\"initial-date\");\n    let end = $endinput.data(\"initial-date\");\n\n    // If empty/null, use local date, but as UTC\n    if (start === undefined || start === null)\n      start = this._dateAsUTC(new Date());\n\n    if (end === undefined || end === null) end = this._dateAsUTC(new Date());\n\n    this.setValue(el, { start: start, end: end });\n\n    // // Set the start and end dates, from min-date and max-date. These always\n    // // use yyyy-mm-dd format, instead of bootstrap-datepicker's built-in\n    // // support for date-startdate and data-enddate, which use the current\n    // // date format.\n    this._setMin($startinput[0], $startinput.data(\"min-date\"));\n    this._setMin($endinput[0], $startinput.data(\"min-date\"));\n    this._setMax($startinput[0], $endinput.data(\"max-date\"));\n    this._setMax($endinput[0], $endinput.data(\"max-date\"));\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"keyup.dateRangeInputBinding input.dateRangeInputBinding\",\n      // event: Event\n      function () {\n        // Use normal debouncing policy when typing\n        callback(true);\n      }\n    );\n    $(el).on(\n      \"changeDate.dateRangeInputBinding change.dateRangeInputBinding\",\n      // event: Event\n      function () {\n        // Send immediately when clicked\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".dateRangeInputBinding\");\n  }\n}\n\nexport { DateRangeInputBinding };\nexport type { DateRangeReceiveMessageData };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport { $escape, hasDefinedProperty, updateLabel } from \"../../utils\";\nimport { indirectEval } from \"../../utils/eval\";\nimport { shinyBindAll, shinyUnbindAll } from \"../../shiny/initedMethods\";\nimport type { NotUndefined } from \"../../utils/extraTypes\";\n\ntype SelectHTMLElement = HTMLSelectElement & { nonempty: boolean };\n\ntype SelectInputReceiveMessageData = {\n  label: string;\n  options?: string;\n  config?: string;\n  url?: string;\n  value?: string;\n};\n\ntype SelectizeOptions = Selectize.IOptions<string, unknown>;\ntype SelectizeInfo = Selectize.IApi<string, unknown> & {\n  settings: SelectizeOptions;\n};\n\nfunction getLabelNode(el: SelectHTMLElement): JQuery<HTMLElement> {\n  let escapedId = $escape(el.id);\n\n  if (isSelectize(el)) {\n    escapedId += \"-selectized\";\n  }\n  return $(el)\n    .parent()\n    .parent()\n    .find('label[for=\"' + escapedId + '\"]');\n}\n// Return true if it's a selectize input, false if it's a regular select input.\n// eslint-disable-next-line camelcase\nfunction isSelectize(el: HTMLElement): boolean {\n  const config = $(el)\n    .parent()\n    .find('script[data-for=\"' + $escape(el.id) + '\"]');\n\n  return config.length > 0;\n}\n\nclass SelectInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-select class\n    return $(scope).find(\"select\");\n  }\n  getType(el: HTMLElement): string | null {\n    const $el = $(el);\n\n    if (!$el.hasClass(\"symbol\")) {\n      // default character type\n      return null;\n    }\n    if ($el.attr(\"multiple\") === \"multiple\") {\n      return \"shiny.symbolList\";\n    } else {\n      return \"shiny.symbol\";\n    }\n  }\n  getId(el: SelectHTMLElement): string {\n    return InputBinding.prototype.getId.call(this, el) || el.name;\n  }\n  getValue(\n    el: HTMLElement\n  ): NotUndefined<ReturnType<JQuery<HTMLElement>[\"val\"]>> {\n    return $(el).val() as NotUndefined<ReturnType<JQuery<HTMLElement>[\"val\"]>>;\n  }\n  setValue(el: SelectHTMLElement, value: string): void {\n    if (!isSelectize(el)) {\n      $(el).val(value);\n    } else {\n      const selectize = this._selectize(el);\n\n      selectize?.setValue(value);\n    }\n  }\n  getState(el: SelectHTMLElement): {\n    label: JQuery<HTMLElement>;\n    value: ReturnType<SelectInputBinding[\"getValue\"]>;\n    options: Array<{ value: string; label: string }>;\n  } {\n    // Store options in an array of objects, each with with value and label\n    const options: Array<{ value: string; label: string }> = new Array(\n      el.length\n    );\n\n    for (let i = 0; i < el.length; i++) {\n      options[i] = {\n        // TODO-barret; Is this a safe assumption?; Are there no Option Groups?\n        value: (el[i] as HTMLOptionElement).value,\n        label: el[i].label,\n      };\n    }\n\n    return {\n      label: getLabelNode(el),\n      value: this.getValue(el),\n      options: options,\n    };\n  }\n  receiveMessage(\n    el: SelectHTMLElement,\n    data: SelectInputReceiveMessageData\n  ): void {\n    const $el = $(el);\n\n    // This will replace all the options\n    if (hasDefinedProperty(data, \"options\")) {\n      const selectize = this._selectize(el);\n\n      // Must destroy selectize before appending new options, otherwise\n      // selectize will restore the original select\n      selectize?.destroy();\n      // Clear existing options and add each new one\n      $el.empty().append(data.options);\n      this._selectize(el);\n    }\n\n    // re-initialize selectize\n    if (hasDefinedProperty(data, \"config\")) {\n      $el\n        .parent()\n        .find('script[data-for=\"' + $escape(el.id) + '\"]')\n        .replaceWith(data.config);\n      this._selectize(el, true);\n    }\n\n    // use server-side processing for selectize\n    if (hasDefinedProperty(data, \"url\")) {\n      type CallbackFn = Parameters<\n        NonNullable<SelectizeInfo[\"settings\"][\"load\"]>\n      >[1];\n      const selectize = this._selectize(el) as ReturnType<\n        SelectInputBinding[\"_selectize\"]\n      > & {\n        settings: {\n          load: (query: string, callback: CallbackFn) => any;\n        };\n      };\n\n      selectize.clearOptions();\n      let loaded = false;\n\n      selectize.settings.load = function (query: string, callback: CallbackFn) {\n        const settings = selectize.settings;\n\n        $.ajax({\n          url: data.url,\n          data: {\n            query: query,\n            field: JSON.stringify([settings.searchField]),\n            value: settings.valueField,\n            conju: settings.searchConjunction,\n            maxop: settings.maxOptions,\n          },\n          type: \"GET\",\n          error: function () {\n            callback();\n          },\n          success: function (res) {\n            // res = [{label: '1', value: '1', group: '1'}, ...]\n            // success is called after options are added, but\n            // groups need to be added manually below\n            $.each(res, function (index, elem) {\n              // Call selectize.addOptionGroup once for each optgroup; the\n              // first argument is the group ID, the second is an object with\n              // the group's label and value. We use the current settings of\n              // the selectize object to decide the fieldnames of that obj.\n              const optgroupId = elem[settings.optgroupField || \"optgroup\"];\n              const optgroup: { [key: string]: string } = {};\n\n              optgroup[settings.optgroupLabelField || \"label\"] = optgroupId;\n              optgroup[settings.optgroupValueField || \"value\"] = optgroupId;\n              selectize.addOptionGroup(optgroupId, optgroup);\n            });\n            callback(res);\n            if (!loaded) {\n              if (hasDefinedProperty(data, \"value\")) {\n                selectize.setValue(data.value as any);\n              } else if (settings.maxItems === 1) {\n                // first item selected by default only for single-select\n                selectize.setValue(res[0].value);\n              }\n            }\n            loaded = true;\n          },\n        });\n      };\n      // perform an empty search after changing the `load` function\n      selectize.load(function (callback) {\n        selectize.settings.load.apply(selectize, [\"\", callback]);\n      });\n    } else if (hasDefinedProperty(data, \"value\")) {\n      this.setValue(el, data.value);\n    }\n\n    updateLabel(data.label, getLabelNode(el));\n\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: SelectHTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"change.selectInputBinding\",\n      // event: Event\n      () => {\n        // https://github.com/rstudio/shiny/issues/2162\n        // Prevent spurious events that are gonna be squelched in\n        // a second anyway by the onItemRemove down below\n        if (el.nonempty && this.getValue(el) === \"\") {\n          return;\n        }\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".selectInputBinding\");\n  }\n  initialize(el: SelectHTMLElement): void {\n    this._selectize(el);\n  }\n  protected _selectize(\n    el: SelectHTMLElement,\n    update = false\n  ): SelectizeInfo | undefined {\n    // Apps like 008-html do not have the selectize js library\n    // Safe-guard against missing the selectize js library\n    if (!$.fn.selectize) return undefined;\n    const $el = $(el);\n    const config = $el\n      .parent()\n      .find('script[data-for=\"' + $escape(el.id) + '\"]');\n\n    if (config.length === 0) return undefined;\n\n    let options: SelectizeOptions & {\n      labelField: \"label\";\n      valueField: \"value\";\n      searchField: [\"label\"];\n      onItemRemove?: (value: string) => void;\n      onDropdownClose?: () => void;\n    } = $.extend(\n      {\n        labelField: \"label\",\n        valueField: \"value\",\n        searchField: [\"label\"],\n      },\n      JSON.parse(config.html())\n    );\n\n    // selectize created from selectInput()\n    if (typeof config.data(\"nonempty\") !== \"undefined\") {\n      el.nonempty = true;\n      options = $.extend(options, {\n        onItemRemove: function (this: SelectizeInfo, value: string) {\n          if (this.getValue() === \"\")\n            $(\"select#\" + $escape(el.id))\n              .empty()\n              .append(\n                $(\"<option/>\", {\n                  value: value,\n                  selected: true,\n                })\n              )\n              .trigger(\"change\");\n        },\n        onDropdownClose:\n          // $dropdown: any\n          function (this: SelectizeInfo) {\n            if (this.getValue() === \"\") {\n              this.setValue($(\"select#\" + $escape(el.id)).val() as string);\n            }\n          },\n      });\n    } else {\n      el.nonempty = false;\n    }\n    // options that should be eval()ed\n    if (config.data(\"eval\") instanceof Array)\n      $.each(config.data(\"eval\"), function (i, x: string) {\n        /*jshint evil: true*/\n        // @ts-expect-error; Need to type `options` keys to know exactly which values are accessed.\n        options[x] = indirectEval(\"(\" + options[x] + \")\");\n      });\n\n    let control = this._newSelectize($el, options);\n\n    // .selectize() does not really update settings; must destroy and rebuild\n    if (update) {\n      const settings = $.extend(control.settings, options);\n\n      control.destroy();\n      control = this._newSelectize($el, settings);\n    }\n\n    return control;\n  }\n\n  protected _newSelectize(\n    $el: JQuery<HTMLSelectElement>,\n    options: SelectizeOptions\n  ): SelectizeInfo {\n    // Starting with selectize v0.15.2, $el.selectize() can prune the <select>\n    // element from the DOM, meaning that if we're already bound to it, we'll\n    // lose the binding. So if we are bound, unbind first, then rebind after.\n    // (Note this is quite similar to how Shiny.renderContent() works.)\n    const binding = $el.data(\"shiny-input-binding\");\n    if (binding) shinyUnbindAll($el.parent());\n    const control = $el.selectize(options)[0].selectize as SelectizeInfo;\n    if (binding) shinyBindAll($el.parent());\n    return control;\n  }\n}\n\nexport { SelectInputBinding };\nexport type { SelectInputReceiveMessageData };\n", "//esbuild.github.io/content-types/#direct-eval\n//tl/dr;\n// * Direct usage of `eval(\"x\")` is bad with bundled code.\n// * Instead, use indirect calls to `eval` such as `indirectEval(\"x\")`\n//   * Even just renaming the function works well enough.\n// > This is known as \"indirect eval\" because eval is not being called directly, and so does not trigger the grammatical special case for direct eval in the JavaScript VM. You can call indirect eval using any syntax at all except for an expression of the exact form eval('x'). For example, var eval2 = eval; eval2('x') and [eval][0]('x') and window.eval('x') are all indirect eval calls.\n// > When you use indirect eval, the code is evaluated in the global scope instead of in the inline scope of the caller.\n\nconst indirectEval = eval;\n\nexport { indirectEval };\n", "import type { Shiny } from \".\";\nimport type { FileInputBinding } from \"../bindings/input/fileinput\";\nimport type { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport type { EventPriority } from \"../inputPolicies\";\nimport type { BindScope } from \"./bind\";\nimport type { Handler, ShinyApp } from \"./shinyapp\";\n\nlet fullShinyObj: FullShinyDef;\n\n// TODO-future; It would be nice to have a way to export this type value instead of / in addition to `Shiny`\ntype FullShinyDef = Required<\n  Pick<\n    Shiny,\n    | \"bindAll\"\n    | \"forgetLastInputValue\"\n    | \"initializeInputs\"\n    | \"oncustommessage\"\n    | \"setInputValue\"\n    | \"shinyapp\"\n    | \"unbindAll\"\n    | \"user\"\n  >\n> &\n  Shiny;\n\nfunction setShinyObj(shiny: Shiny): void {\n  fullShinyObj = shiny as FullShinyDef;\n}\n\nfunction validateShinyHasBeenSet(): FullShinyDef {\n  if (typeof fullShinyObj === \"undefined\") {\n    throw \"Shiny has not finish initialization yet. Please wait for the 'shiny-initialized' event.\";\n  }\n  return fullShinyObj;\n}\n\n//// 2021/03: TypeScript Conversion note\n// These methods are here due to the delayed initialization of `Shiny.shinyapp`. I\n// In theory, there could be multiple instances of `shinyapp`. In practice (and implementation), this is not possible and is a 1:1 coupling with `window.Shiny`.\n// To avoid calls to a large Shiny object, helper methods are created to wrap around calling the fully instantiated window.Shiny value.\n// TODO-barret; Why is `initShiny()` delayed? Is this to allow users to shim in some code? Why can't it be defined in the init method (maybe w/ an extra trigger call?)\nfunction shinySetInputValue(\n  name: string,\n  value: unknown,\n  opts?: { priority?: EventPriority }\n): void {\n  validateShinyHasBeenSet().setInputValue(name, value, opts);\n}\nfunction shinyShinyApp(): ShinyApp {\n  return validateShinyHasBeenSet().shinyapp;\n}\nfunction setShinyUser(user: string): void {\n  validateShinyHasBeenSet().user = user;\n}\nfunction shinyForgetLastInputValue(name: string): void {\n  validateShinyHasBeenSet().forgetLastInputValue(name);\n}\nfunction shinyBindAll(scope: BindScope): void {\n  validateShinyHasBeenSet().bindAll(scope);\n}\nfunction shinyUnbindAll(scope: BindScope, includeSelf = false): void {\n  validateShinyHasBeenSet().unbindAll(scope, includeSelf);\n}\nfunction shinyInitializeInputs(scope: BindScope): void {\n  validateShinyHasBeenSet().initializeInputs(scope);\n}\n\nfunction shinyAppBindOutput(id: string, binding: OutputBindingAdapter): void {\n  shinyShinyApp().bindOutput(id, binding);\n}\n\nfunction shinyAppUnbindOutput(\n  id: string,\n  binding: OutputBindingAdapter\n): boolean {\n  return shinyShinyApp().unbindOutput(id, binding);\n}\n\nfunction getShinyOnCustomMessage(): Handler | null {\n  return validateShinyHasBeenSet().oncustommessage;\n}\n\nlet fileInputBinding: FileInputBinding;\n\nfunction getFileInputBinding(): FileInputBinding {\n  return fileInputBinding;\n}\nfunction setFileInputBinding(fileInputBinding_: FileInputBinding): void {\n  fileInputBinding = fileInputBinding_;\n}\n\nfunction getShinyCreateWebsocket(): (() => WebSocket) | void {\n  return validateShinyHasBeenSet().createSocket;\n}\n\nexport {\n  setShinyObj,\n  shinySetInputValue,\n  shinyShinyApp,\n  setShinyUser,\n  shinyForgetLastInputValue,\n  shinyBindAll,\n  shinyUnbindAll,\n  shinyInitializeInputs,\n  shinyAppBindOutput,\n  shinyAppUnbindOutput,\n  getShinyOnCustomMessage,\n  getFileInputBinding,\n  setFileInputBinding,\n  getShinyCreateWebsocket,\n};\n", "import $ from \"jquery\";\nimport { hasDefinedProperty } from \"../../utils\";\nimport { InputBinding } from \"./inputBinding\";\n\ntype ActionButtonReceiveMessageData = { label?: string; icon?: string | [] };\n\nclass ActionButtonInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".action-button\");\n  }\n  getValue(el: HTMLElement): number {\n    return $(el).data(\"val\") || 0;\n  }\n  setValue(el: HTMLElement, value: number): void {\n    $(el).data(\"val\", value);\n  }\n  getType(el: HTMLElement): string {\n    return \"shiny.action\";\n    el;\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"click.actionButtonInputBinding\",\n      // e: Event\n      function () {\n        const $el = $(this);\n        const val = $el.data(\"val\") || 0;\n\n        $el.data(\"val\", val + 1);\n\n        callback(false);\n      }\n    );\n  }\n  getState(el: HTMLElement): { value: number } {\n    return { value: this.getValue(el) };\n  }\n  receiveMessage(el: HTMLElement, data: ActionButtonReceiveMessageData): void {\n    const $el = $(el);\n\n    // retrieve current label and icon\n    let label: string = $el.text();\n    let icon = \"\";\n\n    // to check (and store) the previous icon, we look for a $el child\n    // object that has an i tag, and some (any) class (this prevents\n    // italicized text - which has an i tag but, usually, no class -\n    // from being mistakenly selected)\n    if ($el.find(\"i[class]\").length > 0) {\n      const iconHtml = $el.find(\"i[class]\")[0];\n\n      if (iconHtml === $el.children()[0]) {\n        // another check for robustness\n        icon = $(iconHtml).prop(\"outerHTML\");\n      }\n    }\n\n    // update the requested properties\n    if (hasDefinedProperty(data, \"label\")) {\n      label = data.label;\n    }\n    if (hasDefinedProperty(data, \"icon\")) {\n      // `data.icon` can be an [] if user gave `character(0)`.\n      icon = Array.isArray(data.icon) ? \"\" : data.icon ?? \"\";\n    }\n\n    // produce new html\n    $el.html(icon + \" \" + label);\n  }\n\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".actionButtonInputBinding\");\n  }\n}\n\n// TODO-barret should this be put in the init methods?\n$(document).on(\"click\", \"a.action-button\", function (e) {\n  e.preventDefault();\n});\n\nexport { ActionButtonInputBinding };\nexport type { ActionButtonReceiveMessageData };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport { hasDefinedProperty, isBS3 } from \"../../utils\";\n\ntype TabInputReceiveMessageData = { value?: string };\n\nfunction getTabName(anchor: JQuery<HTMLElement>): string {\n  return anchor.attr(\"data-value\") || anchor.text();\n}\n\nclass BootstrapTabInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\"ul.nav.shiny-tab-input\");\n  }\n  getValue(el: HTMLElement): string | null {\n    // prettier-ignore\n    // The BS4+ selectors may not work as is for dropdowns within dropdowns, but BS3+ dropped support for those anyway\n    const anchor = isBS3()\n      ? $(el).find(\"li:not(.dropdown).active > a\")\n      : $(el).find(\n        \".nav-link:not(.dropdown-toggle).active, .dropdown-menu .dropdown-item.active\"\n      );\n\n    if (anchor.length === 1) return getTabName(anchor);\n\n    return null;\n  }\n  setValue(el: HTMLElement, value: string | undefined): void {\n    let success = false;\n\n    if (value) {\n      // prettier-ignore\n      // The BS4+ selectors may not work as is for dropdowns within dropdowns, but BS3+ dropped support for those anyway\n      const anchors = isBS3()\n        ? $(el).find(\"li:not(.dropdown) > a\")\n        : $(el).find(\n          \".nav-link:not(.dropdown-toggle), .dropdown-menu .dropdown-item\"\n        );\n\n      anchors.each(function () {\n        if (getTabName($(this)) === value) {\n          $(this).tab(\"show\");\n          success = true;\n          return false; // Break out of each()\n        }\n        return;\n      });\n    }\n    if (!success) {\n      // This is to handle the case where nothing is selected, e.g. the last tab\n      // was removed using removeTab.\n      $(el).trigger(\"change\");\n    }\n  }\n  getState(el: HTMLElement): { value: string | null } {\n    return { value: this.getValue(el) };\n  }\n  receiveMessage(el: HTMLElement, data: TabInputReceiveMessageData): void {\n    if (hasDefinedProperty(data, \"value\")) this.setValue(el, data.value);\n    $(el).trigger(\"change\");\n  }\n  subscribe(el: HTMLElement, callback: (x: boolean) => void): void {\n    $(el).on(\n      \"change shown.bootstrapTabInputBinding shown.bs.tab.bootstrapTabInputBinding\",\n      // event: Event\n      function () {\n        callback(false);\n      }\n    );\n  }\n  unsubscribe(el: HTMLElement): void {\n    $(el).off(\".bootstrapTabInputBinding\");\n  }\n}\n\nexport { BootstrapTabInputBinding };\nexport type { TabInputReceiveMessageData };\n", "import $ from \"jquery\";\nimport { InputBinding } from \"./inputBinding\";\nimport { FileUploader } from \"../../file/fileProcessor\";\nimport { shinyShinyApp } from \"../../shiny/initedMethods\";\n\nconst zoneActive = \"shiny-file-input-active\";\nconst zoneOver = \"shiny-file-input-over\";\n\nfunction zoneOf(el: HTMLElement | JQuery<HTMLElement>): JQuery<HTMLElement> {\n  return $(el).closest(\"div.input-group\");\n}\n\n// This function makes it possible to attach listeners to the dragenter,\n// dragleave, and drop events of a single element with children. It's not\n// intuitive to do directly because outer elements fire \"dragleave\" events\n// both when the drag leaves the element and when the drag enters a child. To\n// make it easier, we maintain a count of the elements being dragged across\n// and trigger 3 new types of event:\n//\n// 1. draghover:enter - When a drag enters el and any of its children.\n// 2. draghover:leave - When the drag leaves el and all of its children.\n// 3. draghover:drop - When an item is dropped on el or any of its children.\nfunction enableDraghover(el: JQuery<HTMLElement>): JQuery<HTMLElement> {\n  const $el = $(el);\n  let childCounter = 0;\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  $el.on({\n    \"dragenter.draghover\": (e) => {\n      if (childCounter++ === 0) {\n        $el.trigger(\"draghover:enter\", e);\n      }\n    },\n    \"dragleave.draghover\": (e) => {\n      if (--childCounter === 0) {\n        $el.trigger(\"draghover:leave\", e);\n      }\n      if (childCounter < 0) {\n        console.error(\"draghover childCounter is negative somehow\");\n      }\n    },\n    \"dragover.draghover\": (e) => {\n      e.preventDefault();\n    },\n    \"drop.draghover\": (e) => {\n      childCounter = 0;\n      $el.trigger(\"draghover:drop\", e);\n      e.preventDefault();\n    },\n  });\n  return $el;\n}\nfunction disableDraghover(el: JQuery<HTMLElement>): JQuery<HTMLElement> {\n  return $(el).off(\".draghover\");\n}\nfunction enableDocumentEvents(): void {\n  const $doc = $(\"html\");\n\n  enableDraghover($doc).on({\n    \"draghover:enter.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).addClass(zoneActive);\n      },\n    \"draghover:leave.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).removeClass(zoneActive);\n      },\n    \"draghover:drop.draghover\":\n      // e: Event\n      () => {\n        zoneOf($fileInputs).removeClass(zoneOver).removeClass(zoneActive);\n      },\n  });\n}\nfunction disableDocumentEvents(): void {\n  const $doc = $(\"html\");\n\n  $doc.off(\".draghover\");\n  disableDraghover($doc);\n}\nfunction canSetFiles(fileList: FileList): boolean {\n  const testEl = document.createElement(\"input\");\n\n  testEl.type = \"file\";\n  try {\n    testEl.files = fileList;\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\nfunction handleDrop(e: JQuery.DragEventBase, el: HTMLInputElement): void {\n  const files = e.originalEvent?.dataTransfer?.files,\n    $el = $(el);\n\n  if (files === undefined || files === null) {\n    // 1. The FileList object isn't supported by this browser, and\n    // there's nothing else we can try. (< IE 10)\n    console.log(\n      \"Dropping files is not supported on this browser. (no FileList)\"\n    );\n  } else if (!canSetFiles(files)) {\n    // 2. The browser doesn't support assigning a type=file input's .files\n    // property, but we do have a FileList to work with. (IE10+/Edge)\n    $el.val(\"\");\n    uploadDroppedFilesIE10Plus(el, files);\n  } else {\n    // 3. The browser supports FileList and input.files assignment.\n    // (Chrome, Safari)\n    $el.val(\"\");\n    el.files = files;\n    // Recent versions of Firefox (57+, or \"Quantum\" and beyond) don't seem to\n    // automatically trigger a change event, so we trigger one manually here.\n    // On browsers that do trigger change, this operation appears to be\n    // idempotent, as el.files doesn't change between events.\n    $el.trigger(\"change\");\n  }\n}\n\n// NOTE On Safari, at least version 10.1.2, *if the developer console is open*,\n// setting the input's value will behave strangely because of a Safari bug. The\n// uploaded file's name will appear over the placeholder value, instead of\n// replacing it. The workaround is to restart Safari. When I (Alan Dipert) ran\n// into this bug Winston Chang helped me diagnose the exact problem, and Winston\n// then submitted a bug report to Apple.\nfunction setFileText($el: JQuery<EventTarget>, files: FileList) {\n  const $fileText = $el.closest(\"div.input-group\").find(\"input[type=text]\");\n\n  if (files.length === 1) {\n    $fileText.val(files[0].name);\n  } else {\n    $fileText.val(files.length + \" files\");\n  }\n}\n\n// If previously selected files are uploading, abort that.\nfunction abortCurrentUpload($el: JQuery<EventTarget>) {\n  const uploader = $el.data(\"currentUploader\");\n\n  if (uploader) uploader.abort();\n  // Clear data-restore attribute if present.\n  $el.removeAttr(\"data-restore\");\n}\n\nfunction uploadDroppedFilesIE10Plus(\n  el: HTMLInputElement,\n  files: FileList\n): void {\n  const $el = $(el);\n\n  abortCurrentUpload($el);\n\n  // Set the label in the text box\n  setFileText($el, files);\n\n  // Start the new upload and put the uploader in 'currentUploader'.\n  $el.data(\n    \"currentUploader\",\n    new FileUploader(shinyShinyApp(), fileInputBindingGetId(el), files, el)\n  );\n}\n\nfunction uploadFiles(evt: JQuery.DragEvent): void {\n  const $el = $(evt.target);\n\n  abortCurrentUpload($el);\n\n  const files = evt.target.files;\n  const id = fileInputBindingGetId(evt.target);\n\n  if (files.length === 0) return;\n\n  // Set the label in the text box\n  setFileText($el, files);\n\n  // Start the new upload and put the uploader in 'currentUploader'.\n  $el.data(\n    \"currentUploader\",\n    new FileUploader(shinyShinyApp(), id, files, evt.target)\n  );\n}\n\n// Here we maintain a list of all the current file inputs. This is necessary\n// because we need to trigger events on them in order to respond to file drag\n// events. For example, they should all light up when a file is dragged on to\n// the page.\n// TODO-barret ; Should this be an internal class property?\nlet $fileInputs = $();\n\nfunction fileInputBindingGetId(this: any, el: HTMLInputElement): string {\n  return InputBinding.prototype.getId.call(this, el) || el.name;\n}\n\nclass FileInputBinding extends InputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    // Inputs also have .shiny-input-file class\n    return $(scope).find('input[type=\"file\"]');\n  }\n  getId(el: HTMLInputElement): string {\n    return fileInputBindingGetId(el);\n  }\n  getValue(el: HTMLElement): { name?: string } | null {\n    // This returns a non-undefined value only when there's a 'data-restore'\n    // attribute, which is set only when restoring Shiny state. If a file is\n    // uploaded through the browser, 'data-restore' gets cleared.\n    const data = $(el).attr(\"data-restore\");\n\n    if (data) {\n      const dataParsed = JSON.parse(data);\n\n      // Set the label in the text box\n      const $fileText = $(el)\n        .closest(\"div.input-group\")\n        .find(\"input[type=text]\");\n\n      if (dataParsed.name.length === 1) {\n        $fileText.val(dataParsed.name[0]);\n      } else {\n        $fileText.val(dataParsed.name.length + \" files\");\n      }\n\n      // Manually set up progress bar. A bit inelegant because it duplicates\n      // code from FileUploader, but duplication is less bad than alternatives.\n      const $progress = $(el).closest(\"div.form-group\").find(\".progress\");\n      const $bar = $progress.find(\".progress-bar\");\n\n      $progress.removeClass(\"active\");\n      $bar.width(\"100%\");\n      $bar.css(\"visibility\", \"visible\");\n\n      return dataParsed;\n    } else {\n      return null;\n    }\n  }\n  setValue(el: HTMLElement, value: void): void {\n    // Not implemented\n    el;\n    value;\n  }\n  getType(el: HTMLElement): string {\n    // This will be used only when restoring a file from a saved state.\n    return \"shiny.file\";\n    el;\n  }\n\n  subscribe(el: HTMLInputElement, callback: (x: boolean) => void): void {\n    callback;\n\n    $(el).on(\"change.fileInputBinding\", uploadFiles);\n    // Here we try to set up the necessary events for Drag and Drop (\"DnD\").\n    if ($fileInputs.length === 0) enableDocumentEvents();\n    $fileInputs = $fileInputs.add(el);\n    const $zone = zoneOf(el);\n\n    enableDraghover($zone).on({\n      \"draghover:enter.draghover\": (e) => {\n        e;\n        $zone.addClass(zoneOver);\n      },\n      \"draghover:leave.draghover\": (e) => {\n        $zone.removeClass(zoneOver);\n        // Prevent this event from bubbling to the document handler,\n        // which would deactivate all zones.\n        e.stopPropagation();\n      },\n      \"draghover:drop.draghover\": (e, dropEvent) => {\n        e;\n        handleDrop(dropEvent, el);\n      },\n    });\n  }\n\n  unsubscribe(el: HTMLElement): void {\n    const $el = $(el),\n      $zone = zoneOf(el);\n\n    $zone.removeClass(zoneOver).removeClass(zoneActive);\n\n    disableDraghover($zone);\n    $el.off(\".fileInputBinding\");\n    $zone.off(\".draghover\");\n\n    // Remove el from list of inputs and (maybe) clean up global event handlers.\n    $fileInputs = $fileInputs.not(el);\n    if ($fileInputs.length === 0) disableDocumentEvents();\n  }\n}\n\nexport { FileInputBinding };\n", "import $ from \"jquery\";\nimport { triggerFileInputChanged } from \"../events/inputChanged\";\nimport { $escape } from \"../utils\";\nimport type { ShinyApp } from \"../shiny/shinyapp\";\nimport { getFileInputBinding } from \"../shiny/initedMethods\";\n\ntype JobId = string;\ntype UploadUrl = string;\ntype UploadInitValue = { jobId: JobId; uploadUrl: UploadUrl };\ntype UploadEndValue = never;\n\n// Generic driver class for doing chunk-wise asynchronous processing of a\n// FileList object. Subclass/clone it and override the `on*` functions to\n// make it do something useful.\nclass FileProcessor {\n  files: File[];\n  fileIndex = -1;\n  // Currently need to use small chunk size because R-Websockets can't\n  // handle continuation frames\n  aborted = false;\n  completed = false;\n\n  constructor(files: FileList, exec$run = true) {\n    this.files = Array.from(files);\n\n    // TODO: Register error/abort callbacks\n    if (exec$run) {\n      this.$run();\n    }\n  }\n\n  // Begin callbacks. Subclassers/cloners may override any or all of these.\n  onBegin(files: File[], cont: () => void): void {\n    files;\n    setTimeout(cont, 0);\n  }\n  onFile(file: File, cont: () => void): void {\n    file;\n    setTimeout(cont, 0);\n  }\n  onComplete(): void {\n    return;\n  }\n  onAbort(): void {\n    return;\n  }\n  // End callbacks\n\n  // Aborts processing, unless it's already completed\n  abort(): void {\n    if (this.completed || this.aborted) return;\n\n    this.aborted = true;\n    this.onAbort();\n  }\n\n  // Returns a bound function that will call this.$run one time.\n  $getRun(): () => void {\n    let called = false;\n\n    return () => {\n      if (called) return;\n      called = true;\n      this.$run();\n    };\n  }\n\n  // This function will be called multiple times to advance the process.\n  // It relies on the state of the object's fields to know what to do next.\n  $run(): void {\n    if (this.aborted || this.completed) return;\n\n    if (this.fileIndex < 0) {\n      // Haven't started yet--begin\n      this.fileIndex = 0;\n      this.onBegin(this.files, this.$getRun());\n      return;\n    }\n\n    if (this.fileIndex === this.files.length) {\n      // Just ended\n      this.completed = true;\n      this.onComplete();\n      return;\n    }\n\n    // If we got here, then we have a file to process, or we are\n    // in the middle of processing a file, or have just finished\n    // processing a file.\n\n    const file = this.files[this.fileIndex++];\n\n    this.onFile(file, this.$getRun());\n  }\n}\n\nclass FileUploader extends FileProcessor {\n  shinyapp: ShinyApp;\n  id: string;\n  el: HTMLElement;\n\n  jobId!: JobId;\n  uploadUrl!: UploadUrl;\n  progressBytes!: number;\n  totalBytes!: number;\n\n  constructor(\n    shinyapp: ShinyApp,\n    id: string,\n    files: FileList,\n    el: HTMLElement\n  ) {\n    // Init super with files, do not execute `this.$run()` before setting variables\n    super(files, false);\n    this.shinyapp = shinyapp;\n    this.id = id;\n    this.el = el;\n    this.$run();\n  }\n\n  makeRequest(\n    method: \"uploadInit\",\n    args: Array<Array<{ name: string; size: number; type: string }>>,\n    onSuccess: (value: UploadInitValue) => void,\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void;\n  makeRequest(\n    method: \"uploadEnd\",\n    args: [string, string],\n    // UploadEndValue can not be used as the type will not conform\n    onSuccess: (value: unknown) => void,\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void;\n  makeRequest(\n    method: string,\n    args: unknown[],\n    onSuccess: Parameters<ShinyApp[\"makeRequest\"]>[2],\n    onFailure: Parameters<ShinyApp[\"makeRequest\"]>[3],\n    blobs: Parameters<ShinyApp[\"makeRequest\"]>[4]\n  ): void {\n    this.shinyapp.makeRequest(method, args, onSuccess, onFailure, blobs);\n  }\n  onBegin(files: File[], cont: () => void): void {\n    // Reset progress bar\n    this.$setError(null);\n    this.$setActive(true);\n    this.$setVisible(true);\n    this.onProgress(null, 0);\n\n    this.totalBytes = 0;\n    this.progressBytes = 0;\n    $.each(files, (i, file) => {\n      this.totalBytes += file.size;\n    });\n\n    const fileInfo = $.map(files, function (file: File) {\n      return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n      };\n    });\n\n    this.makeRequest(\n      \"uploadInit\",\n      [fileInfo],\n      (response) => {\n        this.jobId = response.jobId;\n        this.uploadUrl = response.uploadUrl;\n        cont();\n      },\n      (error) => {\n        this.onError(error);\n      },\n      undefined\n    );\n  }\n  onFile(file: File, cont: () => void): void {\n    this.onProgress(file, 0);\n\n    $.ajax(this.uploadUrl, {\n      type: \"POST\",\n      cache: false,\n      xhr: () => {\n        if (typeof $.ajaxSettings.xhr !== \"function\")\n          throw \"jQuery's XHR is not a function\";\n\n        const xhrVal = $.ajaxSettings.xhr();\n\n        if (xhrVal.upload) {\n          xhrVal.upload.onprogress = (e) => {\n            if (e.lengthComputable) {\n              this.onProgress(\n                file,\n                (this.progressBytes + e.loaded) / this.totalBytes\n              );\n            }\n          };\n        }\n        return xhrVal;\n      },\n      data: file,\n      contentType: \"application/octet-stream\",\n      processData: false,\n      success: () => {\n        this.progressBytes += file.size;\n        cont();\n      },\n      error: (jqXHR, textStatus, errorThrown) => {\n        errorThrown;\n        this.onError(jqXHR.responseText || textStatus);\n      },\n    });\n  }\n  onComplete(): void {\n    const fileInfo = $.map(this.files, function (file: File, i) {\n      return {\n        name: file.name,\n        size: file.size,\n        type: file.type,\n      };\n      i;\n    });\n\n    // Trigger shiny:inputchanged. Unlike a normal shiny:inputchanged event,\n    // it's not possible to modify the information before the values get\n    // sent to the server.\n    const evt = triggerFileInputChanged(\n      this.id,\n      fileInfo,\n      getFileInputBinding(),\n      this.el,\n      \"shiny.fileupload\",\n      document\n    );\n\n    this.makeRequest(\n      \"uploadEnd\",\n      [this.jobId, this.id],\n      () => {\n        this.$setActive(false);\n        this.onProgress(null, 1);\n        this.$bar().text(\"Upload complete\");\n        // Reset the file input's value to \"\". This allows the same file to be\n        // uploaded again. https://stackoverflow.com/a/22521275\n        $(evt.el as HTMLElement).val(\"\");\n      },\n      (error) => {\n        this.onError(error);\n      },\n      undefined\n    );\n    this.$bar().text(\"Finishing upload\");\n  }\n  onError(message: string): void {\n    this.$setError(message || \"\");\n    this.$setActive(false);\n  }\n  onAbort(): void {\n    this.$setVisible(false);\n  }\n  onProgress(file: File | null, completed: number): void {\n    this.$bar().width(Math.round(completed * 100) + \"%\");\n    this.$bar().text(file ? file.name : \"\");\n  }\n  $container(): JQuery<HTMLElement> {\n    return $(\"#\" + $escape(this.id) + \"_progress.shiny-file-input-progress\");\n  }\n  $bar(): JQuery<HTMLElement> {\n    return $(\n      \"#\" +\n        $escape(this.id) +\n        \"_progress.shiny-file-input-progress .progress-bar\"\n    );\n  }\n  $setVisible(visible: boolean): void {\n    this.$container().css(\"visibility\", visible ? \"visible\" : \"hidden\");\n  }\n  $setError(error: string | null): void {\n    this.$bar().toggleClass(\"progress-bar-danger\", error !== null);\n    if (error !== null) {\n      this.onProgress(null, 1);\n      this.$bar().text(error);\n    }\n  }\n  $setActive(active: boolean): void {\n    this.$container().toggleClass(\"active\", !!active);\n  }\n}\n\nexport { FileUploader };\nexport type { UploadInitValue, UploadEndValue };\n", "import $ from \"jquery\";\nimport type { FileInputBinding } from \"../bindings/input/fileinput\";\nimport type { ShinyEventInputChanged } from \"./shinyEvents\";\n\nfunction triggerFileInputChanged(\n  name: string,\n  value: unknown,\n  binding: FileInputBinding,\n  el: HTMLElement,\n  inputType: string,\n  onEl: typeof document\n): ShinyEventInputChanged {\n  const evt = $.Event(\"shiny:inputchanged\") as ShinyEventInputChanged;\n\n  evt.name = name;\n  evt.value = value;\n  evt.binding = binding;\n  evt.el = el;\n  evt.inputType = inputType;\n\n  $(onEl).trigger(evt);\n\n  return evt;\n}\n\nexport { triggerFileInputChanged };\n", "import { BindingRegistry } from \"../registry\";\n\nimport { InputBinding } from \"./inputBinding\";\n\nimport { CheckboxInputBinding } from \"./checkbox\";\nimport { CheckboxGroupInputBinding } from \"./checkboxgroup\";\nimport { NumberInputBinding } from \"./number\";\nimport { PasswordInputBinding } from \"./password\";\nimport { TextInputBinding } from \"./text\";\nimport { TextareaInputBinding } from \"./textarea\";\nimport { RadioInputBinding } from \"./radio\";\nimport { DateInputBinding } from \"./date\";\nimport { SliderInputBinding } from \"./slider\";\nimport { DateRangeInputBinding } from \"./daterange\";\nimport { SelectInputBinding } from \"./selectInput\";\nimport { ActionButtonInputBinding } from \"./actionbutton\";\nimport { BootstrapTabInputBinding } from \"./tabinput\";\nimport { FileInputBinding } from \"./fileinput\";\n\n// TODO-barret make this an init method\ntype InitInputBindings = {\n  inputBindings: BindingRegistry<InputBinding>;\n  fileInputBinding: FileInputBinding;\n};\nfunction initInputBindings(): InitInputBindings {\n  const inputBindings = new BindingRegistry<InputBinding>();\n\n  inputBindings.register(new TextInputBinding(), \"shiny.textInput\");\n  inputBindings.register(new TextareaInputBinding(), \"shiny.textareaInput\");\n  inputBindings.register(new PasswordInputBinding(), \"shiny.passwordInput\");\n  inputBindings.register(new NumberInputBinding(), \"shiny.numberInput\");\n  inputBindings.register(new CheckboxInputBinding(), \"shiny.checkboxInput\");\n  inputBindings.register(\n    new CheckboxGroupInputBinding(),\n    \"shiny.checkboxGroupInput\"\n  );\n  inputBindings.register(new RadioInputBinding(), \"shiny.radioInput\");\n  inputBindings.register(new SliderInputBinding(), \"shiny.sliderInput\");\n  inputBindings.register(new DateInputBinding(), \"shiny.dateInput\");\n  inputBindings.register(new DateRangeInputBinding(), \"shiny.dateRangeInput\");\n  inputBindings.register(new SelectInputBinding(), \"shiny.selectInput\");\n  inputBindings.register(\n    new ActionButtonInputBinding(),\n    \"shiny.actionButtonInput\"\n  );\n  inputBindings.register(\n    new BootstrapTabInputBinding(),\n    \"shiny.bootstrapTabInput\"\n  );\n  const fileInputBinding = new FileInputBinding();\n\n  inputBindings.register(fileInputBinding, \"shiny.fileInputBinding\");\n\n  return { inputBindings, fileInputBinding };\n}\n\nexport { initInputBindings, InputBinding };\n", "import $ from \"jquery\";\nimport { OutputBinding } from \"./outputBinding\";\n\nclass TextOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-text-output\");\n  }\n  renderValue(el: HTMLElement, data: boolean | number | string): void {\n    $(el).text(data);\n  }\n}\n\nexport { TextOutputBinding };\n", "import $ from \"jquery\";\nimport { asArray } from \"../../utils\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\n\nclass OutputBinding {\n  name!: string;\n\n  // Returns a jQuery object or element array that contains the\n  // descendants of scope that match this binding\n  find(scope: HTMLElement | JQuery<HTMLElement>): JQuery<HTMLElement> {\n    throw \"Not implemented\";\n    scope;\n  }\n  renderValue(el: HTMLElement, data: unknown): Promise<void> | void {\n    throw \"Not implemented\";\n    el;\n    data;\n  }\n\n  getId(el: HTMLElement): string {\n    return el.getAttribute(\"data-input-id\") || el.id;\n  }\n\n  async onValueChange(el: HTMLElement, data: unknown): Promise<void> {\n    this.clearError(el);\n    await this.renderValue(el, data);\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    this.renderError(el, err);\n  }\n  renderError(el: HTMLElement, err: ErrorsMessageValue): void {\n    this.clearError(el);\n    if (err.message === \"\") {\n      // not really error, but we just need to wait (e.g. action buttons)\n      $(el).empty();\n      return;\n    }\n    let errClass = \"shiny-output-error\";\n\n    if (err.type !== null) {\n      // use the classes of the error condition as CSS class names\n      errClass =\n        errClass +\n        \" \" +\n        $.map(asArray(err.type), function (type) {\n          return errClass + \"-\" + type;\n        }).join(\" \");\n    }\n    $(el).addClass(errClass).text(err.message);\n  }\n  clearError(el: HTMLElement): void {\n    $(el).attr(\"class\", function (i, c) {\n      return c.replace(/(^|\\s)shiny-output-error\\S*/g, \"\");\n    });\n  }\n  showProgress(el: HTMLElement, show: boolean): void {\n    const recalcClass = \"recalculating\";\n\n    if (show) $(el).addClass(recalcClass);\n    else $(el).removeClass(recalcClass);\n  }\n}\n\nexport { OutputBinding };\n", "import $ from \"jquery\";\n\nimport { OutputBinding } from \"./outputBinding\";\n\nclass DownloadLinkOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\"a.shiny-download-link\");\n  }\n  renderValue(el: HTMLElement, data: string): void {\n    $(el).attr(\"href\", data);\n  }\n}\n\ninterface FileDownloadEvent extends JQuery.Event {\n  name: string;\n  href: string;\n}\n\n// TODO-barret should this be in an init method?\n// Trigger shiny:filedownload event whenever a downloadButton/Link is clicked\n$(document).on(\n  \"click.shinyDownloadLink\",\n  \"a.shiny-download-link\",\n  function (e: Event) {\n    e;\n\n    const evt: FileDownloadEvent = $.Event(\"shiny:filedownload\");\n\n    evt.name = this.id;\n    evt.href = this.href;\n    $(document).trigger(evt);\n  }\n);\n\nexport { DownloadLinkOutputBinding };\n", "import $ from \"jquery\";\n\nimport { OutputBinding } from \"./outputBinding\";\nimport { shinyUnbindAll } from \"../../shiny/initedMethods\";\nimport { debounce } from \"../../time\";\nimport { escapeHTML } from \"../../utils\";\nimport { indirectEval } from \"../../utils/eval\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\n\nclass DatatableOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-datatable-output\");\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    shinyUnbindAll(el);\n    this.renderError(el, err);\n  }\n  renderValue(\n    el: HTMLElement,\n    data: {\n      colnames?: string[];\n      options?: {\n        searching?: boolean;\n        search?: { caseInsensitive?: boolean };\n        // To be sent to data table;\n        // Will copy in R value to this location\n        escape?: string;\n      } | null;\n      escape?: string; // Incoming from R\n      action?: string;\n      evalOptions?: string[];\n      callback?: string;\n      searchDelay?: number;\n    } | null\n  ): void {\n    const $el = $(el).empty();\n\n    if (!data || !data.colnames) return;\n\n    const colnames = $.makeArray(data.colnames);\n    let header = $.map(colnames, function (x) {\n      return \"<th>\" + x + \"</th>\";\n    }).join(\"\");\n\n    header = \"<thead><tr>\" + header + \"</tr></thead>\";\n    let footer = \"\";\n\n    if (data.options?.searching ?? true) {\n      footer = $.map(colnames, function (x) {\n        // placeholder needs to be escaped (and HTML tags are stripped off)\n        return (\n          '<th><input type=\"text\" placeholder=\"' +\n          escapeHTML(x.replace(/(<([^>]+)>)/gi, \"\")) +\n          '\" /></th>'\n        );\n      }).join(\"\");\n      footer = \"<tfoot>\" + footer + \"</tfoot>\";\n    }\n    const content =\n      '<table class=\"table table-striped table-hover\">' +\n      header +\n      footer +\n      \"</table>\";\n\n    $el.append(content);\n\n    // options that should be eval()ed\n    if (data.evalOptions) {\n      $.each(data.evalOptions, function (i, x) {\n        /*jshint evil: true */\n        // @ts-expect-error; If `evalOptions` is defined, `data.options` should be defined\n        data.options[x] = indirectEval(\"(\" + data.options[x] + \")\");\n      });\n    }\n\n    // caseInsensitive searching? default true\n    const searchCI = data.options?.search?.caseInsensitive !== false;\n    const oTable = $(el)\n      .children(\"table\")\n      .DataTable(\n        $.extend(\n          {\n            processing: true,\n            serverSide: true,\n            order: [],\n            orderClasses: false,\n            pageLength: 25,\n            ajax: {\n              url: data.action,\n              type: \"POST\",\n              data: function (d: NonNullable<typeof data.options>) {\n                d.search || (d.search = {});\n                d.search.caseInsensitive = searchCI;\n                // Copy from the R value (`data.escape`) to the escape option\n                // (`d.escape`) similar to `data.options.escape`;\n                // Note: this logic may be wrong, but the method is strongly\n                // deprecated in favor of DT package. So users should not\n                // naturally run this line of code\n                d.escape = data.escape;\n              },\n            },\n          },\n          data.options\n        )\n      );\n    // the table object may need post-processing\n\n    if (typeof data.callback === \"string\") {\n      /*jshint evil: true */\n      const callback = indirectEval(\"(\" + data.callback + \")\");\n\n      if (typeof callback === \"function\") callback(oTable);\n    }\n\n    // use debouncing for searching boxes\n    $el\n      .find(\"label input\")\n      .first()\n      .unbind(\"keyup\")\n      .keyup(\n        debounce(data.searchDelay, function (this: HTMLInputElement) {\n          oTable.search(this.value).draw();\n        })\n      );\n    const searchInputs = $el.find(\"tfoot input\");\n\n    if (searchInputs.length > 0) {\n      // this is a little weird: aoColumns/bSearchable are still in DT 1.10\n      // https://github.com/DataTables/DataTables/issues/388\n      $.each(oTable.settings()[0].aoColumns, function (i, x) {\n        // hide the text box if not searchable\n        if (!x.bSearchable) searchInputs.eq(i as number).hide();\n      });\n      searchInputs.keyup(\n        debounce(data.searchDelay, function (this: HTMLInputElement) {\n          oTable.column(searchInputs.index(this)).search(this.value).draw();\n        })\n      );\n    }\n    // FIXME: ugly scrollbars in tab panels b/c Bootstrap uses 'visible: auto'\n    $el.parents(\".tab-content\").css(\"overflow\", \"visible\");\n  }\n}\n\nexport { DatatableOutputBinding };\n", "import type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Debouncer<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n  delayMs: number | undefined;\n  timerId: ReturnType<typeof setTimeout> | null;\n  args: Parameters<X> | null;\n\n  constructor(\n    target: InputPolicy | null,\n    func: X,\n    delayMs: number | undefined\n  ) {\n    this.target = target;\n    this.func = func;\n    this.delayMs = delayMs;\n\n    this.timerId = null;\n    this.args = null;\n  }\n\n  normalCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n\n    this.timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional\n      // check is needed\n      if (this.timerId === null) return;\n      this.$clearTimer();\n      this.$invoke();\n    }, this.delayMs);\n  }\n  immediateCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n    this.$invoke();\n  }\n  isPending(): boolean {\n    return this.timerId !== null;\n  }\n  $clearTimer(): void {\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n  }\n  $invoke(): void {\n    if (this.args && this.args.length > 0) {\n      this.func.apply(this.target, this.args);\n    } else {\n      this.func.apply(this.target);\n    }\n    this.args = null;\n  }\n}\n\n// Returns a debounced version of the given function.\n// Debouncing means that when the function is invoked,\n// there is a delay of `threshold` milliseconds before\n// it is actually executed, and if the function is\n// invoked again before that threshold has elapsed then\n// the clock starts over.\n//\n// For example, if a function is debounced with a\n// threshold of 1000ms, then calling it 17 times at\n// 900ms intervals will result in a single execution\n// of the underlying function, 1000ms after the 17th\n// call.\nfunction debounce<T extends (...args: unknown[]) => void>(\n  threshold: number | undefined,\n  func: T\n): (...args: Parameters<T>) => void {\n  let timerId: ReturnType<typeof setTimeout> | null = null;\n\n  // Do not alter `function()` into an arrow function.\n  // The `this` context needs to be dynamically bound\n  return function thisFunc(...args: Parameters<T>) {\n    if (timerId !== null) {\n      clearTimeout(timerId);\n      timerId = null;\n    }\n    timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional\n      // check is needed\n      if (timerId === null) return;\n      timerId = null;\n      // Applying on `thisFunc` passes through the `this` context\n      func.apply(thisFunc, args);\n    }, threshold);\n  };\n}\n\nexport { Debouncer, debounce };\n", "import type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Invoker<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n\n  constructor(target: InputPolicy | null, func: X) {\n    this.target = target;\n    this.func = func;\n  }\n\n  // TODO-barret - Don't know how to define the method twice and still have access to \"this\"\n  normalCall(...args: Parameters<X>): void {\n    this.func.apply(this.target, args);\n  }\n  immediateCall(...args: Parameters<X>): void {\n    this.func.apply(this.target, args);\n  }\n}\n\nexport { Invoker };\n", "/* eslint-disable indent */\nimport type { InputPolicy } from \"../inputPolicies\";\nimport type { InputRatePolicy } from \"../inputPolicies/inputRatePolicy\";\nimport type { AnyVoidFunction } from \"../utils/extraTypes\";\n\nclass Throttler<X extends AnyVoidFunction> implements InputRatePolicy<X> {\n  target: InputPolicy | null;\n  func: X;\n  delayMs: number | undefined;\n  timerId: ReturnType<typeof setTimeout> | null;\n  args: Parameters<X> | null;\n\n  constructor(\n    target: InputPolicy | null,\n    func: X,\n    delayMs: number | undefined\n  ) {\n    this.target = target;\n    this.func = func;\n    this.delayMs = delayMs;\n\n    this.timerId = null;\n    this.args = null;\n  }\n\n  // If no timer is currently running, immediately call the function and set the\n  // timer; if a timer is running out, just queue up the args for the call when\n  // the timer runs out. Later calls during the same timeout will overwrite\n  // earlier ones.\n  normalCall(...args: Parameters<X>): void {\n    // This will be an empty array (not null) if called without arguments, and\n    // `[null]` if called with `null`.\n    this.args = args;\n\n    // Only invoke immediately if there isn't a timer running.\n    if (this.timerId === null) {\n      this.$invoke();\n    }\n  }\n\n  // Reset the timer if active and call immediately\n  immediateCall(...args: Parameters<X>): void {\n    this.$clearTimer();\n    this.args = args;\n    this.$invoke();\n  }\n\n  // Is there a call waiting to send?\n  isPending(): boolean {\n    return this.args !== null;\n  }\n\n  $clearTimer(): void {\n    if (this.timerId !== null) {\n      clearTimeout(this.timerId);\n      this.timerId = null;\n    }\n  }\n\n  // Invoke the throttled function with the currently-stored args and start the\n  // timer.\n  $invoke(): void {\n    if (this.args === null) {\n      // Shouldn't get here, because $invoke should only be called right after\n      // setting this.args. But just in case.\n      return;\n    }\n\n    this.func.apply(this.target, this.args);\n\n    // Clear the stored args. This is used to track if a call is pending.\n    this.args = null;\n\n    // Set this.timerId to a newly-created timer, which will invoke a call with\n    // the most recently called args (if any) when it expires.\n    this.timerId = setTimeout(() => {\n      // IE8 doesn't reliably clear timeout, so this additional check is needed\n      if (this.timerId === null) return;\n\n      this.$clearTimer();\n      // Do we have a call queued up?\n      if (this.isPending()) {\n        // If so, invoke the call with queued args and reset timer.\n        this.$invoke();\n      }\n    }, this.delayMs);\n  }\n}\n\n// // Returns a throttled version of the given function.\n// // Throttling means that the underlying function will\n// // be executed no more than once every `threshold`\n// // milliseconds.\n// //\n// // For example, if a function is throttled with a\n// // threshold of 1000ms, then calling it 17 times at\n// // 900ms intervals will result in something like 15\n// // or 16 executions of the underlying function.\n// // eslint-disable-next-line no-unused-vars\n// function throttle<T>(\n//   threshold: number,\n//   func: (...args: T[]) => void\n// ): (...args: T[]) => void {\n//   let executionPending = false;\n//   let timerId: number | null = null;\n//   let self: unknown, args: T[] | null;\n\n//   function throttled(...argumentVals: T[]) {\n//     self = null;\n//     args = null;\n//     if (timerId === null) {\n//       // Haven't seen a call recently. Execute now and\n//       // start a timer to buffer any subsequent calls.\n//       timerId = setTimeout(function () {\n//         // When time expires, clear the timer; and if\n//         // there has been a call in the meantime, repeat.\n//         timerId = null;\n//         if (executionPending) {\n//           executionPending = false;\n//           throttled.apply(self, args || []);\n//         }\n//       }, threshold);\n//       func.apply(this, argumentVals);\n//     } else {\n//       // Something executed recently. Don't do anything\n//       // except set up target/arguments to be called later\n//       executionPending = true;\n//       self = this as unknown;\n//       args = argumentVals;\n//     }\n//   }\n//   return throttled;\n// }\n\nexport {\n  Throttler,\n  // throttle\n};\n", "import $ from \"jquery\";\n\nimport { OutputBinding } from \"./outputBinding\";\nimport { shinyUnbindAll } from \"../../shiny/initedMethods\";\nimport { renderContentAsync } from \"../../shiny/render\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\n\nclass HtmlOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-html-output\");\n  }\n  onValueError(el: HTMLElement, err: ErrorsMessageValue): void {\n    shinyUnbindAll(el);\n    this.renderError(el, err);\n  }\n  override async renderValue(\n    el: HTMLElement,\n    data: Parameters<typeof renderContentAsync>[1]\n  ): Promise<void> {\n    await renderContentAsync(el, data);\n  }\n}\n\nexport { HtmlOutputBinding };\n", "import $ from \"jquery\";\nimport { asArray, hasDefinedProperty } from \"../utils\";\nimport { isIE } from \"../utils/browser\";\nimport type { BindScope } from \"./bind\";\nimport {\n  shinyBindAll,\n  shinyInitializeInputs,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\n\nimport { renderHtml as singletonsRenderHtml } from \"./singletons\";\nimport type { WherePosition } from \"./singletons\";\n\n// There are synchronous and asynchronous versions of the exported functions\n// renderContent(), renderHtml(), and renderDependencies(). This is because they\n// the original versions of these functions were synchronous, but we added\n// support for asynchronous rendering, to avoid the deprecated XMLHttpRequest\n// function (https://github.com/rstudio/shiny/pull/3666).\n//\n// At the bottom, there is the appendScriptTags(), which calls $.append(), which\n// in turn calls (synchronous) XMLHttpRequest(); and its counterpart\n// appendScriptTagsAsync(), which uses a different (asynchronous) method. The\n// sync and async versions of this function necessitate the sync and async\n// versions of the other functions.\n//\n// The async versions of these functions are used internally and should be used\n// for new external code when possible, but for backward compatibility for\n// external code that calls these functions, we'll keep the synchronous versions\n// around as well.\n\n// =============================================================================\n// renderContent\n// =============================================================================\n// Render HTML in a DOM element, add dependencies, and bind Shiny\n// inputs/outputs. `content` can be null, a string, or an object with\n// properties 'html' and 'deps'.\nasync function renderContentAsync(\n  el: BindScope,\n  content: string | { html: string; deps?: HtmlDep[] } | null,\n  where: WherePosition = \"replace\"\n): Promise<void> {\n  if (where === \"replace\") {\n    shinyUnbindAll(el);\n  }\n\n  let html = \"\";\n  let dependencies: HtmlDep[] = [];\n\n  if (content === null) {\n    html = \"\";\n  } else if (typeof content === \"string\") {\n    html = content;\n  } else if (typeof content === \"object\") {\n    html = content.html;\n    dependencies = content.deps || [];\n  }\n\n  await renderHtmlAsync(html, el, dependencies, where);\n\n  let scope: BindScope = el;\n\n  if (where === \"replace\") {\n    shinyInitializeInputs(el);\n    shinyBindAll(el);\n  } else {\n    const $parent = $(el).parent();\n\n    if ($parent.length > 0) {\n      scope = $parent;\n      if (where === \"beforeBegin\" || where === \"afterEnd\") {\n        const $grandparent = $parent.parent();\n\n        if ($grandparent.length > 0) scope = $grandparent;\n      }\n    }\n    shinyInitializeInputs(scope);\n    shinyBindAll(scope);\n  }\n}\n\nfunction renderContent(\n  el: BindScope,\n  content: string | { html: string; deps?: HtmlDep[] } | null,\n  where: WherePosition = \"replace\"\n): void {\n  if (where === \"replace\") {\n    shinyUnbindAll(el);\n  }\n\n  let html = \"\";\n  let dependencies: HtmlDep[] = [];\n\n  if (content === null) {\n    html = \"\";\n  } else if (typeof content === \"string\") {\n    html = content;\n  } else if (typeof content === \"object\") {\n    html = content.html;\n    dependencies = content.deps || [];\n  }\n\n  renderHtml(html, el, dependencies, where);\n\n  let scope: BindScope = el;\n\n  if (where === \"replace\") {\n    shinyInitializeInputs(el);\n    shinyBindAll(el);\n  } else {\n    const $parent = $(el).parent();\n\n    if ($parent.length > 0) {\n      scope = $parent;\n      if (where === \"beforeBegin\" || where === \"afterEnd\") {\n        const $grandparent = $parent.parent();\n\n        if ($grandparent.length > 0) scope = $grandparent;\n      }\n    }\n    shinyInitializeInputs(scope);\n    shinyBindAll(scope);\n  }\n}\n\n// =============================================================================\n// renderHtml\n// =============================================================================\n// Render HTML in a DOM element, inserting singletons into head as needed\nasync function renderHtmlAsync(\n  html: string,\n  el: BindScope,\n  dependencies: HtmlDep[],\n  where: WherePosition = \"replace\"\n): Promise<ReturnType<typeof singletonsRenderHtml>> {\n  await renderDependenciesAsync(dependencies);\n  return singletonsRenderHtml(html, el, where);\n}\n\n// Render HTML in a DOM element, inserting singletons into head as needed\nfunction renderHtml(\n  html: string,\n  el: BindScope,\n  dependencies: HtmlDep[],\n  where: WherePosition = \"replace\"\n): ReturnType<typeof singletonsRenderHtml> {\n  renderDependencies(dependencies);\n  return singletonsRenderHtml(html, el, where);\n}\n\n// =============================================================================\n// renderDependencies\n// =============================================================================\nasync function renderDependenciesAsync(\n  dependencies: HtmlDep[] | null\n): Promise<void> {\n  if (dependencies) {\n    for (const dep of dependencies) {\n      await renderDependencyAsync(dep);\n    }\n  }\n}\n\nfunction renderDependencies(dependencies: HtmlDep[] | null): void {\n  if (dependencies) {\n    for (const dep of dependencies) {\n      renderDependency(dep);\n    }\n  }\n}\n\n// =============================================================================\n// HTML dependency types\n// =============================================================================\ntype HtmlDepVersion = string;\n\ntype MetaItem = {\n  name: string;\n  content: string;\n  [x: string]: string;\n};\n\ntype StylesheetItem = {\n  href: string;\n  rel?: string;\n  type?: string;\n};\n\ntype ScriptItem = {\n  src: string;\n  [x: string]: string;\n};\n\ntype AttachmentItem = {\n  key: string;\n  href: string;\n  [x: string]: string;\n};\n\n// This supports the older R htmltools HtmlDependency structure, and it also\n// encompasses the newer, consistent HTMLDependency structure.\ntype HtmlDep = {\n  name: string;\n  version: HtmlDepVersion;\n  restyle?: boolean;\n  src?: { href: string };\n  meta?: MetaItem[] | { [x: string]: string };\n  stylesheet?: string[] | StylesheetItem | StylesheetItem[] | string;\n  script?: ScriptItem | ScriptItem[] | string[] | string;\n  attachment?: AttachmentItem[] | string[] | string | { [key: string]: string };\n  head?: string;\n};\n\n// This is the newer, consistent HTMLDependency structure.\ntype HtmlDepNormalized = {\n  name: string;\n  version: HtmlDepVersion;\n  restyle?: boolean;\n  meta: MetaItem[];\n  stylesheet: StylesheetItem[];\n  script: ScriptItem[];\n  attachment: AttachmentItem[];\n  head?: string;\n};\n\n// =============================================================================\n// renderDependency helper functions\n// =============================================================================\nconst htmlDependencies: { [key: string]: HtmlDepVersion } = {};\n\nfunction registerDependency(name: string, version: HtmlDepVersion): void {\n  htmlDependencies[name] = version;\n}\n\n// Re-render stylesheet(s) if the dependency has specificially requested it\n// and it matches an existing dependency (name and version)\nfunction needsRestyle(dep: HtmlDepNormalized) {\n  if (!dep.restyle) {\n    return false;\n  }\n  const names = Object.keys(htmlDependencies);\n  const idx = names.indexOf(dep.name);\n\n  if (idx === -1) {\n    return false;\n  }\n  return htmlDependencies[names[idx]] === dep.version;\n}\n\nfunction addStylesheetsAndRestyle(links: HTMLLinkElement[]): void {\n  const $head = $(\"head\").first();\n\n  // This inline <style> based approach works for IE11\n  const refreshStyle = function (href: string, oldSheet: CSSStyleSheet | null) {\n    const xhr = new XMLHttpRequest();\n\n    xhr.open(\"GET\", href);\n    xhr.onload = function () {\n      const id =\n        \"shiny_restyle_\" + href.split(\"?restyle\")[0].replace(/\\W/g, \"_\");\n      const oldStyle = $head.find(\"style#\" + id);\n      const newStyle = $(\"<style>\").attr(\"id\", id).html(xhr.responseText);\n\n      $head.append(newStyle);\n\n      // We can remove the old styles immediately because the new styles\n      // should have been applied synchronously.\n      oldStyle.remove();\n      removeSheet(oldSheet);\n      sendImageSizeFns.transitioned();\n    };\n    xhr.send();\n  };\n\n  const findSheet = function (href: string | undefined): CSSStyleSheet | null {\n    if (!href) return null;\n\n    for (let i = 0; i < document.styleSheets.length; i++) {\n      const sheet = document.styleSheets[i];\n      // The sheet's href is a full URL\n\n      if (typeof sheet.href === \"string\" && sheet.href.indexOf(href) > -1) {\n        return sheet;\n      }\n    }\n    return null;\n  };\n\n  // Removes the stylesheet from document.styleSheets, and also removes\n  // the owning <link> element, if present.\n  const removeSheet = function (sheet: CSSStyleSheet | null) {\n    if (!sheet) return;\n    sheet.disabled = true;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; .cssText doesn't normally exist, but it does on IE?\n    if (isIE()) sheet.cssText = \"\";\n\n    if (sheet.ownerNode instanceof Element) {\n      $(sheet.ownerNode).remove();\n    }\n  };\n\n  links.map((link) => {\n    const $link = $(link);\n    // Find any document.styleSheets that match this link's href\n    // so we can remove it after bringing in the new stylesheet\n    const oldSheet = findSheet($link.attr(\"href\"));\n\n    // Add a timestamp to the href to prevent caching\n    const href = $link.attr(\"href\") + \"?restyle=\" + new Date().getTime();\n    // Use inline <style> approach for IE, otherwise use the more elegant\n    // <link> -based approach\n\n    if (isIE()) {\n      refreshStyle(href, oldSheet);\n    } else {\n      $link.attr(\"href\", href);\n\n      // This part is a bit tricky. The link's onload callback will be\n      // invoked after the file is loaded, but it can be _before_ the\n      // styles are actually applied. The amount of time it takes for the\n      // style to be applied is not predictable. We need to make sure the\n      // styles are applied before we send updated size/style information\n      // to the server.\n      //\n      // We do this by adding _another_ link, with CSS content\n      // base64-encoded and inlined into the href. We also add a dummy DOM\n      // element that the CSS applies to. The dummy CSS includes a\n      // transition, and when the `transitionend` event happens, we call\n      // sendImageSizeFns.transitioned() and remove the old sheet. We also remove the\n      // dummy DOM element and dummy CSS content.\n      //\n      // The reason this works is because (we assume) that if multiple\n      // <link> tags are added, they will be applied in the same order\n      // that they are loaded. This seems to be true in the browsers we\n      // have tested.\n      //\n      // Because it is common for multiple stylesheets to arrive close\n      // together, but not on exactly the same tick, we call\n      // sendImageSizeFns.transitioned(), which is debounced. Otherwise, it can result in\n      // the same plot being redrawn multiple times with different\n      // styling.\n      $link.attr(\"onload\", () => {\n        const $dummyEl = $(\"<div>\")\n          .css(\"transition\", \"0.1s all\")\n          .css(\"position\", \"absolute\")\n          .css(\"top\", \"-1000px\")\n          .css(\"left\", \"0\");\n\n        $dummyEl.one(\"transitionend\", () => {\n          $dummyEl.remove();\n          removeSheet(oldSheet);\n          sendImageSizeFns.transitioned();\n        });\n        $(document.body).append($dummyEl);\n\n        // To ensure a transition actually happens, change the inline style _after_\n        // the DOM element has been added, and also use a new random color each time\n        // to prevent any potential caching done by the browser\n        const color = \"#\" + Math.floor(Math.random() * 16777215).toString(16);\n\n        setTimeout(() => $dummyEl.css(\"color\", color), 10);\n      });\n\n      $head.append(link);\n    }\n  });\n}\n\nfunction getStylesheetLinkTags(dep: HtmlDepNormalized): HTMLLinkElement[] {\n  // Convert stylesheet objs to links early, because if `restyle` is true, we'll\n  // pass them through to `addStylesheetsAndRestyle` below.\n  return dep.stylesheet.map((x) => {\n    // Add \"rel\" and \"type\" fields if not already present.\n    if (!hasDefinedProperty(x, \"rel\")) x.rel = \"stylesheet\";\n    if (!hasDefinedProperty(x, \"type\")) x.type = \"text/css\";\n\n    const link = document.createElement(\"link\");\n\n    Object.entries(x).forEach(function ([attr, val]: [\n      string,\n      string | undefined\n    ]) {\n      if (attr === \"href\") {\n        val = encodeURI(val as string);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      link.setAttribute(attr, val ? val : \"\");\n    });\n\n    return link;\n  });\n}\n\nfunction appendStylesheetLinkTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  const stylesheetLinks = getStylesheetLinkTags(dep);\n\n  if (stylesheetLinks.length !== 0) {\n    $head.append(stylesheetLinks);\n  }\n}\n\nfunction appendScriptTags(dep: HtmlDepNormalized, $head: JQuery<HTMLElement>) {\n  dep.script.forEach((x) => {\n    const script = document.createElement(\"script\");\n\n    Object.entries(x).forEach(function ([attr, val]) {\n      if (attr === \"src\") {\n        val = encodeURI(val);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      script.setAttribute(attr, val ? val : \"\");\n    });\n\n    $head.append(script);\n  });\n}\n\nasync function appendScriptTagsAsync(dep: HtmlDepNormalized): Promise<void> {\n  const scriptPromises: Array<Promise<any>> = [];\n\n  dep.script.forEach((x) => {\n    const script = document.createElement(\"script\");\n\n    if (!hasDefinedProperty(x, \"async\")) {\n      // Set async to false by default, so that if there are multiple script\n      // tags, they are guaranteed to run in order. For dynamically added\n      // <script> tags, browsers set async to true by default, which differs\n      // from static <script> tags in the html, which default to false.\n      //\n      // Refs:\n      // https://stackoverflow.com/a/8996894/412655\n      // https://jason-ge.medium.com/dynamically-load-javascript-files-in-order-5318ac6bcc61\n      //\n      // Note that one odd thing about these dynamically-created <script> tags\n      // is that even though the JS object's `x.script` property is true, it\n      // does NOT show up as a property on the <script> element.\n      script.async = false;\n    }\n\n    Object.entries(x).forEach(function ([attr, val]) {\n      if (attr === \"src\") {\n        val = encodeURI(val);\n      }\n      // If val isn't truthy (e.g., null), consider it a boolean attribute\n      script.setAttribute(attr, val ? val : \"\");\n    });\n\n    const p = new Promise((resolve, reject) => {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      script.onload = (e: Event) => {\n        resolve(null);\n      };\n      script.onerror = (e: Event | string) => {\n        reject(e);\n      };\n    });\n\n    scriptPromises.push(p);\n    document.head.append(script);\n  });\n\n  await Promise.allSettled(scriptPromises);\n}\n\nfunction appendMetaTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  dep.meta.forEach((x) => {\n    const meta = document.createElement(\"meta\");\n\n    for (const [attr, val] of Object.entries(x)) {\n      meta.setAttribute(attr, val);\n    }\n    $head.append(meta);\n  });\n}\n\nfunction appendAttachmentLinkTags(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  dep.attachment.forEach((x) => {\n    const link = $(\"<link rel='attachment'>\")\n      .attr(\"id\", dep.name + \"-\" + x.key + \"-attachment\")\n      .attr(\"href\", encodeURI(x.href));\n\n    $head.append(link);\n  });\n}\n\nfunction appendExtraHeadContent(\n  dep: HtmlDepNormalized,\n  $head: JQuery<HTMLElement>\n): void {\n  if (dep.head) {\n    const $newHead = $(\"<head></head>\");\n\n    $newHead.html(dep.head);\n    $head.append($newHead.children());\n  }\n}\n\n// =============================================================================\n// renderDependency\n// =============================================================================\n// Client-side dependency resolution and rendering\nasync function renderDependencyAsync(dep_: HtmlDep): Promise<boolean> {\n  const dep = normalizeHtmlDependency(dep_);\n\n  // If a restyle is needed, do that stuff and return. Note that other items\n  // (like scripts) aren't added, because they would have been added in a\n  // previous run.\n  if (needsRestyle(dep)) {\n    addStylesheetsAndRestyle(getStylesheetLinkTags(dep));\n    return true;\n  }\n\n  if (hasDefinedProperty(htmlDependencies, dep.name)) return false;\n\n  registerDependency(dep.name, dep.version);\n\n  const $head = $(\"head\").first();\n\n  // Add each type of element to the DOM.\n  appendMetaTags(dep, $head);\n  appendStylesheetLinkTags(dep, $head);\n  await appendScriptTagsAsync(dep);\n  appendAttachmentLinkTags(dep, $head);\n  appendExtraHeadContent(dep, $head);\n\n  return true;\n}\n\n// Old-school synchronous version of renderDependencyAsync. This function is\n// here to preserve compatibility with outside packages that use it. The\n// implementation is the same except that it calls appendScriptTags() instead of\n// appendScriptTagsAsync().\nfunction renderDependency(dep_: HtmlDep): boolean {\n  const dep = normalizeHtmlDependency(dep_);\n\n  // If a restyle is needed, do that stuff and return. Note that other items\n  // (like scripts) aren't added, because they would have been added in a\n  // previous run.\n  if (needsRestyle(dep)) {\n    addStylesheetsAndRestyle(getStylesheetLinkTags(dep));\n    return true;\n  }\n\n  if (hasDefinedProperty(htmlDependencies, dep.name)) return false;\n\n  registerDependency(dep.name, dep.version);\n\n  const $head = $(\"head\").first();\n\n  // Add each type of element to the DOM.\n  appendMetaTags(dep, $head);\n  appendStylesheetLinkTags(dep, $head);\n  appendScriptTags(dep, $head);\n  appendAttachmentLinkTags(dep, $head);\n  appendExtraHeadContent(dep, $head);\n\n  return true;\n}\n\n// Convert legacy HtmlDependency to new HTMLDependency format. This is\n// idempotent; new HTMLDependency objects are returned unchanged.\nfunction normalizeHtmlDependency(dep: HtmlDep): HtmlDepNormalized {\n  const hrefPrefix: string | undefined = dep.src?.href;\n\n  const result: HtmlDepNormalized = {\n    name: dep.name,\n    version: dep.version,\n    restyle: dep.restyle,\n    meta: [],\n    stylesheet: [],\n    script: [],\n    attachment: [],\n    head: dep.head,\n  };\n\n  if (dep.meta) {\n    if (Array.isArray(dep.meta)) {\n      // Assume we already have the canonical format:\n      //   [{name: \"myname\", content: \"mycontent\"}, ...]\n      result.meta = dep.meta;\n    } else {\n      // If here, then we have the legacy format, which we have to convert.\n      //   {myname: \"mycontent\", ...}\n      result.meta = Object.entries(dep.meta).map(function ([attr, val]) {\n        return { name: attr, content: val };\n      });\n    }\n  }\n\n  result.stylesheet = asArray(dep.stylesheet).map((s) => {\n    if (typeof s === \"string\") {\n      s = { href: s };\n    }\n    if (hrefPrefix) {\n      s.href = hrefPrefix + \"/\" + s.href;\n    }\n    return s;\n  });\n\n  result.script = asArray(dep.script).map((s) => {\n    if (typeof s === \"string\") {\n      s = { src: s };\n    }\n    if (hrefPrefix) {\n      s.src = hrefPrefix + \"/\" + s.src;\n    }\n    return s;\n  });\n\n  // dep.attachment might be one of the following types, which we will convert\n  // as shown:\n  // 0. undefined => []\n  // 1. A single string:\n  //    \"foo.txt\"\n  //    => [{key: \"1\", href: \"foo.txt\"}]\n  // 2. An array of strings:\n  //    [\"foo.txt\" ,\"bar.dat\"]\n  //    => [{key: \"1\", href: \"foo.txt\"}, {key: \"2\", href: \"bar.dat\"}]\n  // 3. An object:\n  //    {foo: \"foo.txt\", bar: \"bar.dat\"}\n  //    => [{key: \"foo\", href: \"foo.txt\"}, {key: \"bar\", href: \"bar.dat\"}]\n  // 4. An array of objects:\n  //    [{key: \"foo\", href: \"foo.txt\"}, {key: \"bar\", href: \"bar.dat\"}]\n  //    => (Returned unchanged)\n  //\n  // Note that the first three formats are from legacy code, and the last format\n  // is from new code.\n  let attachments = dep.attachment;\n\n  // Convert format 0 (undefined) to format 2 or 4.\n  if (!attachments) attachments = [];\n\n  // Convert format 1 to format 2.\n  if (typeof attachments === \"string\") attachments = [attachments];\n\n  if (Array.isArray(attachments)) {\n    // If we've gotten here, the format is either 2 or 4. Even though they are\n    // quite different, we can handle them both in the same loop.\n\n    // Need to give TypeScript a bit of help so that it's happy with .map()\n    // below. Instead of a union of two array types, tell it it's an array of\n    // a union of two types.\n    const tmp = <Array<AttachmentItem | string>>attachments;\n\n    // The contract for attachments is that arrays of attachments are\n    // addressed using 1-based indexes. Convert this array to an object.\n    attachments = tmp.map((attachment, index) => {\n      if (typeof attachment === \"string\") {\n        return {\n          key: (index + 1).toString(),\n          href: attachment,\n        };\n      } else {\n        return attachment;\n      }\n    });\n  } else {\n    // If we got here, it's format 3.\n    attachments = Object.entries(attachments).map(function ([attr, val]) {\n      return { key: attr, href: val };\n    });\n  }\n\n  // At this point, we've normalized the format to #4. Now we can iterate over\n  // it and prepend `hrefPrefix`.\n  result.attachment = attachments.map((s) => {\n    if (hrefPrefix) {\n      s.href = hrefPrefix + \"/\" + s.href;\n    }\n    return s;\n  });\n\n  return result;\n}\n\nexport {\n  renderContentAsync,\n  renderContent,\n  renderHtmlAsync,\n  renderHtml,\n  renderDependenciesAsync,\n  renderDependencies,\n  registerDependency,\n};\nexport type { HtmlDep };\n", "import type { InputBatchSender } from \"../inputPolicies\";\nimport { debounce, Debouncer } from \"../time\";\n\nclass SendImageSize {\n  // This function gets defined in initShiny() and 'hoisted' so it can be reused\n  // (to send CSS info) inside of Shiny.renderDependencies()\n  regular!: () => void;\n  transitioned!: () => void;\n\n  setImageSend(\n    inputBatchSender: InputBatchSender,\n    doSendImageSize: () => void\n  ): Debouncer<typeof doSendImageSize> {\n    const sendImageSizeDebouncer = new Debouncer(null, doSendImageSize, 0);\n\n    this.regular = function () {\n      sendImageSizeDebouncer.normalCall();\n    };\n\n    // Make sure sendImageSize actually gets called before the inputBatchSender\n    // sends data to the server.\n    inputBatchSender.lastChanceCallback.push(function () {\n      if (sendImageSizeDebouncer.isPending())\n        sendImageSizeDebouncer.immediateCall();\n    });\n\n    // A version of sendImageSize which debounces for longer.\n    this.transitioned = debounce(200, this.regular);\n\n    return sendImageSizeDebouncer;\n  }\n}\n\nconst sendImageSizeFns = new SendImageSize();\n\nexport { sendImageSizeFns };\n", "import $ from \"jquery\";\nimport type { BindScope } from \"./bind\";\n\nconst reSingleton = /<!--(SHINY.SINGLETON\\[([\\w]+)\\])-->([\\s\\S]*?)<!--\\/\\1-->/;\nconst reHead = /<head(?:\\s[^>]*)?>([\\s\\S]*?)<\\/head>/;\n\nconst knownSingletons: { [key: string]: boolean } = {};\n\ntype WherePosition =\n  | \"afterBegin\"\n  | \"afterEnd\"\n  | \"beforeBegin\"\n  | \"beforeEnd\"\n  | \"replace\";\n\nfunction renderHtml(\n  html: string,\n  el: BindScope,\n  where: WherePosition\n): ReturnType<typeof processHtml> {\n  const processed = processHtml(html);\n\n  addToHead(processed.head);\n  register(processed.singletons);\n\n  // N.B. even though the DOM insertion below _could_ be done with vanilla JS,\n  // we intentionally use jQuery so that <script> tags execute.\n  // https://github.com/rstudio/shiny/pull/3630\n  switch (where.toLowerCase()) {\n    case \"replace\":\n      $(el).html(processed.html);\n      break;\n    case \"beforebegin\":\n      $(el).before(processed.html);\n      break;\n    case \"afterbegin\":\n      $(el).prepend(processed.html);\n      break;\n    case \"beforeend\":\n      $(el).append(processed.html);\n      break;\n    case \"afterend\":\n      $(el).after(processed.html);\n      break;\n    default:\n      throw new Error(\"Unknown where position: \" + where);\n  }\n\n  return processed;\n}\n// Take an object where keys are names of singletons, and merges it into\n// knownSingletons\nfunction register(s: typeof knownSingletons) {\n  $.extend(knownSingletons, s);\n}\n// Takes a string or array of strings and adds them to knownSingletons\nfunction registerNames(s: string[] | string): void {\n  if (typeof s === \"string\") {\n    knownSingletons[s] = true;\n  } else if (s instanceof Array) {\n    for (let i = 0; i < s.length; i++) {\n      knownSingletons[s[i]] = true;\n    }\n  }\n}\n// Inserts new content into document head\nfunction addToHead(head: string) {\n  if (head.length > 0) {\n    const tempDiv = $(\"<div>\" + head + \"</div>\").get(0) as HTMLDivElement;\n    const $head = $(\"head\");\n\n    while (tempDiv.hasChildNodes()) {\n      // @ts-expect-error; TODO-barret; IDK how this function works. Seems like it would add the first child forever.\n      $head.append(tempDiv.firstChild);\n    }\n  }\n}\n// Reads HTML and returns an object with info about singletons\nfunction processHtml(val: string): {\n  html: string;\n  head: string;\n  singletons: typeof knownSingletons;\n} {\n  const newSingletons: typeof knownSingletons = {};\n  let newVal: string;\n\n  const findNewPayload = function (\n    match: string,\n    p1: string,\n    sig: string,\n    payload: string\n  ) {\n    if (knownSingletons[sig] || newSingletons[sig]) return \"\";\n    newSingletons[sig] = true;\n    return payload;\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    newVal = val.replace(reSingleton, findNewPayload);\n    if (val.length === newVal.length) break;\n    val = newVal;\n  }\n\n  const heads: string[] = [];\n  const headAddPayload = function (match: string, payload: string) {\n    heads.push(payload);\n    return \"\";\n  };\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    newVal = val.replace(reHead, headAddPayload);\n    if (val.length === newVal.length) break;\n    val = newVal;\n  }\n\n  return {\n    html: val,\n    head: heads.join(\"\\n\"),\n    singletons: newSingletons,\n  };\n}\n\nexport { renderHtml, registerNames };\nexport type { WherePosition };\n", "import $ from \"jquery\";\nimport { OutputBinding } from \"./outputBinding\";\nimport {\n  createBrushHandler,\n  createClickHandler,\n  createClickInfo,\n  createHoverHandler,\n  disableDrag,\n  initCoordmap,\n} from \"../../imageutils\";\nimport {\n  strToBool,\n  getComputedLinkColor,\n  getStyle,\n  hasOwnProperty,\n} from \"../../utils\";\nimport { isIE, IEVersion } from \"../../utils/browser\";\nimport type { CoordmapInit } from \"../../imageutils/initCoordmap\";\nimport type { ErrorsMessageValue } from \"../../shiny/shinyapp\";\nimport { ifUndefined } from \"../../utils/object\";\n\nclass ImageOutputBinding extends OutputBinding {\n  find(scope: HTMLElement): JQuery<HTMLElement> {\n    return $(scope).find(\".shiny-image-output, .shiny-plot-output\");\n  }\n\n  renderValue(\n    el: HTMLElement,\n    data: {\n      coordmap: CoordmapInit;\n      error?: string;\n    } & { [key: string]: string }\n  ): void {\n    // The overall strategy:\n    // * Clear out existing image and event handlers.\n    // * Create new image.\n    // * Create various event handlers.\n    // * Bind those event handlers to events.\n    // * Insert the new image.\n\n    const outputId = this.getId(el);\n\n    const $el = $(el);\n    let img: HTMLImageElement;\n\n    // Get existing img element if present.\n    let $img = $el.find(\"img\");\n\n    if ($img.length === 0) {\n      // If a img element is not already present, that means this is either\n      // the first time renderValue() has been called, or this is after an\n      // error.\n      img = document.createElement(\"img\");\n      $el.append(img);\n      $img = $(img);\n    } else {\n      // Trigger custom 'reset' event for any existing images in the div\n      img = $img[0];\n      $img.trigger(\"reset\");\n    }\n\n    if (!data) {\n      $el.empty();\n      return;\n    }\n\n    // If value is undefined, return alternate. Sort of like ||, except it won't\n    // return alternate for other falsy values (0, false, null).\n\n    const opts = {\n      clickId: $el.data(\"click-id\"),\n      clickClip: ifUndefined(strToBool($el.data(\"click-clip\")), true),\n\n      dblclickId: $el.data(\"dblclick-id\"),\n      dblclickClip: ifUndefined(strToBool($el.data(\"dblclick-clip\")), true),\n      dblclickDelay: ifUndefined($el.data(\"dblclick-delay\"), 400),\n\n      hoverId: $el.data(\"hover-id\"),\n      hoverClip: ifUndefined(strToBool($el.data(\"hover-clip\")), true),\n      hoverDelayType: ifUndefined($el.data(\"hover-delay-type\"), \"debounce\"),\n      hoverDelay: ifUndefined($el.data(\"hover-delay\"), 300),\n      hoverNullOutside: ifUndefined(\n        strToBool($el.data(\"hover-null-outside\")),\n        false\n      ),\n\n      brushId: $el.data(\"brush-id\"),\n      brushClip: ifUndefined(strToBool($el.data(\"brush-clip\")), true),\n      brushDelayType: ifUndefined($el.data(\"brush-delay-type\"), \"debounce\"),\n      brushDelay: ifUndefined($el.data(\"brush-delay\"), 300),\n      brushFill: ifUndefined($el.data(\"brush-fill\"), \"#666\"),\n      brushStroke: ifUndefined($el.data(\"brush-stroke\"), \"#000\"),\n      brushOpacity: ifUndefined($el.data(\"brush-opacity\"), 0.3),\n      brushDirection: ifUndefined($el.data(\"brush-direction\"), \"xy\"),\n      brushResetOnNew: ifUndefined(\n        strToBool($el.data(\"brush-reset-on-new\")),\n        false\n      ),\n\n      coordmap: data.coordmap,\n    };\n\n    if (opts.brushFill === \"auto\") {\n      opts.brushFill = getComputedLinkColor($el[0]);\n    }\n    if (opts.brushStroke === \"auto\") {\n      opts.brushStroke = getStyle($el[0], \"color\");\n    }\n\n    // Copy items from data to img. Don't set the coordmap as an attribute.\n    $.each(data, function (key: string, value) {\n      if (value === null || key === \"coordmap\") {\n        return;\n      }\n      // this checks only against base64 encoded src values\n      // images put here are only from renderImage and renderPlot\n      if (key === \"src\" && value === img.getAttribute(\"src\")) {\n        // Ensure the browser actually fires an onLoad event, which doesn't\n        // happen on WebKit if the value we set on src is the same as the\n        // value it already has\n        // https://github.com/rstudio/shiny/issues/2197\n        // https://stackoverflow.com/questions/5024111/javascript-image-onload-doesnt-fire-in-webkit-if-loading-same-image\n        img.removeAttribute(\"src\");\n      }\n      img.setAttribute(key, value);\n    });\n\n    // Unset any attributes in the current img that were not provided in the\n    // new data.\n    for (let i = 0; i < img.attributes.length; i++) {\n      const attrib = img.attributes[i];\n      // Need to check attrib.specified on IE because img.attributes contains\n      // all possible attributes on IE.\n\n      if (attrib.specified && !hasOwnProperty(data, attrib.name)) {\n        img.removeAttribute(attrib.name);\n      }\n    }\n\n    if (!opts.coordmap) {\n      opts.coordmap = {\n        panels: [],\n        dims: {\n          // These values be set to the naturalWidth and naturalHeight once the image has loaded\n          height: null,\n          width: null,\n        },\n      };\n    }\n\n    // Remove event handlers that were added in previous runs of this function.\n    $el.off(\".image_output\");\n    $img.off(\".image_output\");\n\n    // When the image loads, initialize all the interaction handlers. When the\n    // value of src is set, the browser may not load the image immediately,\n    // even if it's a data URL. If we try to initialize this stuff\n    // immediately, it can cause problems because we use we need the raw image\n    // height and width\n    $img.off(\"load.shiny_image_interaction\");\n    $img.one(\"load.shiny_image_interaction\", function () {\n      // Use a local variable so the type check is happy\n      const optsCoordmap = (opts.coordmap = initCoordmap($el, opts.coordmap));\n\n      // This object listens for mousedowns, and triggers mousedown2 and dblclick2\n      // events as appropriate.\n      const clickInfo = createClickInfo(\n        $el,\n        opts.dblclickId,\n        opts.dblclickDelay\n      );\n\n      $el.on(\"mousedown.image_output\", clickInfo.mousedown);\n\n      if (isIE() && IEVersion() === 8) {\n        $el.on(\"dblclick.image_output\", clickInfo.dblclickIE8);\n      }\n\n      // ----------------------------------------------------------\n      // Register the various event handlers\n      // ----------------------------------------------------------\n      if (opts.clickId) {\n        disableDrag($el, $img);\n\n        const clickHandler = createClickHandler(\n          opts.clickId,\n          opts.clickClip,\n          optsCoordmap\n        );\n\n        $el.on(\"mousedown2.image_output\", clickHandler.mousedown);\n\n        $el.on(\"resize.image_output\", clickHandler.onResize);\n\n        // When img is reset, do housekeeping: clear $el's mouse listener and\n        // call the handler's onResetImg callback.\n        $img.on(\"reset.image_output\", clickHandler.onResetImg);\n      }\n\n      if (opts.dblclickId) {\n        disableDrag($el, $img);\n\n        // We'll use the clickHandler's mousedown function, but register it to\n        // our custom 'dblclick2' event.\n        const dblclickHandler = createClickHandler(\n          opts.dblclickId,\n          opts.clickClip,\n          optsCoordmap\n        );\n\n        $el.on(\"dblclick2.image_output\", dblclickHandler.mousedown);\n\n        $el.on(\"resize.image_output\", dblclickHandler.onResize);\n        $img.on(\"reset.image_output\", dblclickHandler.onResetImg);\n      }\n\n      if (opts.hoverId) {\n        disableDrag($el, $img);\n\n        const hoverHandler = createHoverHandler(\n          opts.hoverId,\n          opts.hoverDelay,\n          opts.hoverDelayType,\n          opts.hoverClip,\n          opts.hoverNullOutside,\n          optsCoordmap\n        );\n\n        $el.on(\"mousemove.image_output\", hoverHandler.mousemove);\n        $el.on(\"mouseout.image_output\", hoverHandler.mouseout);\n\n        $el.on(\"resize.image_output\", hoverHandler.onResize);\n        $img.on(\"reset.image_output\", hoverHandler.onResetImg);\n      }\n\n      if (opts.brushId) {\n        disableDrag($el, $img);\n\n        const brushHandler = createBrushHandler(\n          opts.brushId,\n          $el,\n          opts,\n          optsCoordmap,\n          outputId\n        );\n\n        $el.on(\"mousedown.image_output\", brushHandler.mousedown);\n        $el.on(\"mousemove.image_output\", brushHandler.mousemove);\n\n        $el.on(\"resize.image_output\", brushHandler.onResize);\n        $img.on(\"reset.image_output\", brushHandler.onResetImg);\n      }\n\n      if (opts.clickId || opts.dblclickId || opts.hoverId || opts.brushId) {\n        $el.addClass(\"crosshair\");\n      }\n\n      if (data.error)\n        console.log(\"Error on server extracting coordmap: \" + data.error);\n    });\n  }\n\n  renderError(el: HTMLElement, err: ErrorsMessageValue): void {\n    $(el).find(\"img\").trigger(\"reset\");\n    OutputBinding.prototype.renderError.call(this, el, err);\n  }\n\n  clearError(el: HTMLElement): void {\n    // Remove all elements except img and the brush; this is usually just\n    // error messages.\n    $(el)\n      .contents()\n      .filter(function () {\n        return !(\n          this instanceof HTMLElement &&\n          (this.tagName === \"IMG\" || this.id === el.id + \"_brush\")\n        );\n      })\n      .remove();\n\n    // TODO-barret does this work?: `super.clearError(el)`\n    OutputBinding.prototype.clearError.call(this, el);\n  }\n\n  resize(\n    el: HTMLElement,\n    width: number | string,\n    height: number | string\n  ): void {\n    $(el).find(\"img\").trigger(\"resize\");\n    return;\n    width;\n    height;\n  }\n}\n\nconst imageOutputBinding = new ImageOutputBinding();\n\nexport { imageOutputBinding, ImageOutputBinding };\n", "import $ from \"jquery\";\nimport type { Coordmap } from \"./initCoordmap\";\nimport { findOrigin } from \"./initCoordmap\";\nimport { equal, isnan, mapValues, roundSignif } from \"../utils\";\nimport type { Panel } from \"./initPanelScales\";\n\nimport type { Offset } from \"./findbox\";\nimport { findBox } from \"./findbox\";\nimport { shiftToRange } from \"./shiftToRange\";\n\ntype Bounds = {\n  xmin: number;\n  xmax: number;\n  ymin: number;\n  ymax: number;\n};\ntype BoundsCss = Bounds;\ntype BoundsData = Bounds;\n\ntype ImageState = {\n  brushing: boolean;\n  dragging: boolean;\n  resizing: boolean;\n\n  // Offset of last mouse down and up events (in CSS pixels)\n  down: Offset;\n  up: Offset;\n\n  // Which side(s) we're currently resizing\n  resizeSides: {\n    left: boolean;\n    right: boolean;\n    top: boolean;\n    bottom: boolean;\n  };\n\n  boundsCss: BoundsCss;\n  boundsData: BoundsData;\n\n  // Panel object that the brush is in\n  panel: Panel | null;\n\n  // The bounds at the start of a drag/resize (in CSS pixels)\n  changeStartBounds: Bounds;\n};\n\ntype BrushOpts = {\n  brushDirection: \"x\" | \"xy\" | \"y\";\n  brushClip: boolean;\n  brushFill: string;\n  brushOpacity: string;\n  brushStroke: string;\n  brushDelayType?: \"debounce\" | \"throttle\";\n  brushDelay?: number;\n  brushResetOnNew?: boolean;\n};\n\ntype Brush = {\n  reset: () => void;\n\n  hasOldBrush: () => boolean;\n  importOldBrush: () => void;\n  isInsideBrush: (offsetCss: Offset) => boolean;\n  isInResizeArea: (offsetCss: Offset) => boolean;\n  whichResizeSides: (offsetCss: Offset) => ImageState[\"resizeSides\"];\n\n  // A callback when the wrapper div or img is resized.\n  onResize: () => void;\n\n  boundsCss: {\n    (boxCss: BoundsCss): void;\n    (): BoundsCss;\n  };\n  boundsData: {\n    (boxData: BoundsData): void;\n    (): BoundsData;\n  };\n\n  getPanel: () => ImageState[\"panel\"];\n\n  down: {\n    (): ImageState[\"down\"];\n    (offsetCss: Offset): void;\n  };\n  up: {\n    (): ImageState[\"up\"];\n    (offsetCss: Offset): void;\n  };\n\n  isBrushing: () => ImageState[\"brushing\"];\n  startBrushing: () => void;\n  brushTo: (offsetCss: Offset) => void;\n  stopBrushing: () => void;\n\n  isDragging: () => ImageState[\"dragging\"];\n  startDragging: () => void;\n  dragTo: (offsetCss: Offset) => void;\n  stopDragging: () => void;\n\n  isResizing: () => ImageState[\"resizing\"];\n  startResizing: () => void;\n  resizeTo: (offsetCss: Offset) => void;\n  stopResizing: () => void;\n};\n\n// Returns an object that represents the state of the brush. This gets wrapped\n// in a brushHandler, which provides various event listeners.\nfunction createBrush(\n  $el: JQuery<HTMLElement>,\n  opts: BrushOpts,\n  coordmap: Coordmap,\n  expandPixels: number\n): Brush {\n  // Number of pixels outside of brush to allow start resizing\n  const resizeExpand = 10;\n\n  const el = $el[0];\n  let $div: JQuery<HTMLElement> | null = null; // The div representing the brush\n\n  const state = {} as ImageState;\n\n  // Aliases for conciseness\n  const cssToImg = coordmap.scaleCssToImg;\n  const imgToCss = coordmap.scaleImgToCss;\n\n  reset();\n\n  function reset() {\n    // Current brushing/dragging/resizing state\n    state.brushing = false;\n    state.dragging = false;\n    state.resizing = false;\n\n    // Offset of last mouse down and up events (in CSS pixels)\n    state.down = { x: NaN, y: NaN };\n    state.up = { x: NaN, y: NaN };\n\n    // Which side(s) we're currently resizing\n    state.resizeSides = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    };\n\n    // Bounding rectangle of the brush, in CSS pixel and data dimensions. We\n    // need to record data dimensions along with pixel dimensions so that when\n    // a new plot is sent, we can re-draw the brush div with the appropriate\n    // coords.\n    state.boundsCss = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n    state.boundsData = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n\n    // Panel object that the brush is in\n    state.panel = null;\n\n    // The bounds at the start of a drag/resize (in CSS pixels)\n    state.changeStartBounds = {\n      xmin: NaN,\n      xmax: NaN,\n      ymin: NaN,\n      ymax: NaN,\n    };\n\n    if ($div) $div.remove();\n  }\n\n  function hasOldBrush(): boolean {\n    const oldDiv = $el.find(\"#\" + el.id + \"_brush\");\n    return oldDiv.length > 0;\n  }\n\n  // If there's an existing brush div, use that div to set the new brush's\n  // settings, provided that the x, y, and panel variables have the same names,\n  // and there's a panel with matching panel variable values.\n  function importOldBrush(): void {\n    const oldDiv = $el.find(\"#\" + el.id + \"_brush\");\n\n    if (oldDiv.length === 0) return;\n\n    const oldBoundsData = oldDiv.data(\"bounds-data\");\n    const oldPanel = oldDiv.data(\"panel\");\n\n    if (!oldBoundsData || !oldPanel) return;\n\n    // Find a panel that has matching vars; if none found, we can't restore.\n    // The oldPanel and new panel must match on their mapping vars, and the\n    // values.\n    for (let i = 0; i < coordmap.panels.length; i++) {\n      const curPanel = coordmap.panels[i];\n\n      if (\n        equal(oldPanel.mapping, curPanel.mapping) &&\n        equal(oldPanel.panel_vars, curPanel.panel_vars)\n      ) {\n        // We've found a matching panel\n        state.panel = coordmap.panels[i];\n        break;\n      }\n    }\n\n    // If we didn't find a matching panel, remove the old div and return\n    if (state.panel === null) {\n      oldDiv.remove();\n      return;\n    }\n\n    $div = oldDiv;\n\n    boundsData(oldBoundsData);\n    updateDiv();\n  }\n\n  // This will reposition the brush div when the image is resized, maintaining\n  // the same data coordinates. Note that the \"resize\" here refers to the\n  // wrapper div/img being resized; elsewhere, \"resize\" refers to the brush\n  // div being resized.\n  function onResize() {\n    const boundsDataVal = boundsData();\n\n    // Check to see if we have valid boundsData\n    if (Object.values(boundsDataVal).some(isnan)) return;\n\n    boundsData(boundsDataVal);\n    updateDiv();\n  }\n\n  // Return true if the offset is inside min/max coords\n  function isInsideBrush(offsetCss: Offset) {\n    const bounds = state.boundsCss;\n\n    return (\n      offsetCss.x <= bounds.xmax &&\n      offsetCss.x >= bounds.xmin &&\n      offsetCss.y <= bounds.ymax &&\n      offsetCss.y >= bounds.ymin\n    );\n  }\n\n  // Return true if offset is inside a region to start a resize\n  function isInResizeArea(offsetCss: Offset) {\n    const sides = whichResizeSides(offsetCss);\n\n    return sides.left || sides.right || sides.top || sides.bottom;\n  }\n\n  // Return an object representing which resize region(s) the cursor is in.\n  function whichResizeSides(offsetCss: Offset) {\n    const b = state.boundsCss;\n    // Bounds with expansion\n    const e = {\n      xmin: b.xmin - resizeExpand,\n      xmax: b.xmax + resizeExpand,\n      ymin: b.ymin - resizeExpand,\n      ymax: b.ymax + resizeExpand,\n    };\n    const res = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    };\n\n    if (\n      (opts.brushDirection === \"xy\" || opts.brushDirection === \"x\") &&\n      offsetCss.y <= e.ymax &&\n      offsetCss.y >= e.ymin\n    ) {\n      if (offsetCss.x < b.xmin && offsetCss.x >= e.xmin) res.left = true;\n      else if (offsetCss.x > b.xmax && offsetCss.x <= e.xmax) res.right = true;\n    }\n\n    if (\n      (opts.brushDirection === \"xy\" || opts.brushDirection === \"y\") &&\n      offsetCss.x <= e.xmax &&\n      offsetCss.x >= e.xmin\n    ) {\n      if (offsetCss.y < b.ymin && offsetCss.y >= e.ymin) res.top = true;\n      else if (offsetCss.y > b.ymax && offsetCss.y <= e.ymax) res.bottom = true;\n    }\n\n    return res;\n  }\n\n  // Sets the bounds of the brush (in CSS pixels), given a box and optional\n  // panel. This will fit the box bounds into the panel, so we don't brush\n  // outside of it. This knows whether we're brushing in the x, y, or xy\n  // directions, and sets bounds accordingly. If no box is passed in, just\n  // return current bounds.\n  function boundsCss(): ImageState[\"boundsCss\"];\n  function boundsCss(boxCss: BoundsCss): void;\n  function boundsCss(boxCss?: BoundsCss) {\n    if (boxCss === undefined) {\n      return { ...state.boundsCss };\n    }\n\n    let minCss: Offset = { x: boxCss.xmin, y: boxCss.ymin };\n    let maxCss: Offset = { x: boxCss.xmax, y: boxCss.ymax };\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const panel = state.panel!;\n    const panelBoundsImg = panel.range;\n\n    if (opts.brushClip) {\n      minCss = imgToCss(panel.clipImg(cssToImg(minCss)));\n      maxCss = imgToCss(panel.clipImg(cssToImg(maxCss)));\n    }\n\n    if (opts.brushDirection === \"xy\") {\n      // No change\n    } else if (opts.brushDirection === \"x\") {\n      // Extend top and bottom of plotting area\n      minCss.y = imgToCss({ y: panelBoundsImg.top }).y;\n      maxCss.y = imgToCss({ y: panelBoundsImg.bottom }).y;\n    } else if (opts.brushDirection === \"y\") {\n      minCss.x = imgToCss({ x: panelBoundsImg.left }).x;\n      maxCss.x = imgToCss({ x: panelBoundsImg.right }).x;\n    }\n\n    state.boundsCss = {\n      xmin: minCss.x,\n      xmax: maxCss.x,\n      ymin: minCss.y,\n      ymax: maxCss.y,\n    };\n\n    // Positions in data space\n    const minData = panel.scaleImgToData(cssToImg(minCss));\n    const maxData = panel.scaleImgToData(cssToImg(maxCss));\n    // For reversed scales, the min and max can be reversed, so use findBox\n    // to ensure correct order.\n\n    state.boundsData = findBox(minData, maxData);\n    // Round to 14 significant digits to avoid spurious changes in FP values\n    // (#1634).\n    state.boundsData = mapValues(state.boundsData, (val) =>\n      roundSignif(val, 14)\n    );\n\n    // We also need to attach the data bounds and panel as data attributes, so\n    // that if the image is re-sent, we can grab the data bounds to create a new\n    // brush. This should be fast because it doesn't actually modify the DOM.\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.data(\"bounds-data\", state.boundsData);\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.data(\"panel\", state.panel);\n    return undefined;\n  }\n\n  // Get or set the bounds of the brush using coordinates in the data space.\n  function boundsData(): BoundsData;\n  function boundsData(boxData: BoundsData): void;\n  function boundsData(boxData?: BoundsData | undefined): BoundsData | void {\n    if (typeof boxData === \"undefined\") {\n      return { ...state.boundsData };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    let boxCss = imgToCss(state.panel!.scaleDataToImg(boxData));\n    // Round to 13 significant digits to avoid spurious changes in FP values\n    // (#2197).\n\n    boxCss = mapValues(boxCss, (val) => roundSignif(val, 13));\n\n    // The scaling function can reverse the direction of the axes, so we need to\n    // find the min and max again.\n    boundsCss({\n      xmin: Math.min(boxCss.xmin, boxCss.xmax),\n      xmax: Math.max(boxCss.xmin, boxCss.xmax),\n      ymin: Math.min(boxCss.ymin, boxCss.ymax),\n      ymax: Math.max(boxCss.ymin, boxCss.ymax),\n    });\n    return undefined;\n  }\n\n  function getPanel() {\n    return state.panel;\n  }\n\n  // Add a new div representing the brush.\n  function addDiv() {\n    /* eslint-disable @typescript-eslint/naming-convention */\n    if ($div) $div.remove();\n\n    // Start hidden; we'll show it when movement occurs\n    $div = $(document.createElement(\"div\"))\n      .attr(\"id\", el.id + \"_brush\")\n      .css({\n        \"background-color\": opts.brushFill,\n        opacity: opts.brushOpacity,\n        \"pointer-events\": \"none\",\n        position: \"absolute\",\n      })\n      .hide();\n\n    const borderStyle = \"1px solid \" + opts.brushStroke;\n\n    if (opts.brushDirection === \"xy\") {\n      $div.css({\n        border: borderStyle,\n      });\n    } else if (opts.brushDirection === \"x\") {\n      $div.css({\n        \"border-left\": borderStyle,\n        \"border-right\": borderStyle,\n      });\n    } else if (opts.brushDirection === \"y\") {\n      $div.css({\n        \"border-top\": borderStyle,\n        \"border-bottom\": borderStyle,\n      });\n    }\n\n    $el.append($div);\n    $div\n      .offset(\n        // @ts-expect-error; This is a jQuery Typing issue\n        { x: 0, y: 0 }\n      )\n      .width(0)\n      .outerHeight(0);\n  }\n\n  // Update the brush div to reflect the current brush bounds.\n  function updateDiv() {\n    // Need parent offset relative to page to calculate mouse offset\n    // relative to page.\n    const imgOffsetCss = findOrigin($el.find(\"img\"));\n    const b = state.boundsCss;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!\n      .offset({\n        top: imgOffsetCss.y + b.ymin,\n        left: imgOffsetCss.x + b.xmin,\n      })\n      .outerWidth(b.xmax - b.xmin + 1)\n      .outerHeight(b.ymax - b.ymin + 1);\n  }\n\n  function down(): ImageState[\"down\"];\n  function down(offsetCss: Offset): void;\n  function down(offsetCss?: Offset | undefined) {\n    if (offsetCss === undefined) return state.down;\n\n    state.down = offsetCss;\n    return undefined;\n  }\n\n  function up(): ImageState[\"up\"];\n  function up(offsetCss: Offset): void;\n  function up(offsetCss?: Offset | undefined) {\n    if (offsetCss === undefined) return state.up;\n\n    state.up = offsetCss;\n    return undefined;\n  }\n\n  function isBrushing() {\n    return state.brushing;\n  }\n\n  function startBrushing() {\n    state.brushing = true;\n    addDiv();\n    state.panel = coordmap.getPanelCss(state.down, expandPixels);\n\n    boundsCss(findBox(state.down, state.down));\n    updateDiv();\n  }\n\n  function brushTo(offsetCss: Offset) {\n    boundsCss(findBox(state.down, offsetCss));\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    $div!.show();\n    updateDiv();\n  }\n\n  function stopBrushing() {\n    state.brushing = false;\n    // Save the final bounding box of the brush\n    boundsCss(findBox(state.down, state.up));\n  }\n\n  function isDragging() {\n    return state.dragging;\n  }\n\n  function startDragging() {\n    state.dragging = true;\n    state.changeStartBounds = { ...state.boundsCss };\n  }\n\n  function dragTo(offsetCss: Offset) {\n    // How far the brush was dragged\n    const dx = offsetCss.x - state.down.x;\n    const dy = offsetCss.y - state.down.y;\n\n    // Calculate what new positions would be, before clipping.\n    const start = state.changeStartBounds;\n    let newBoundsCss = {\n      xmin: start.xmin + dx,\n      xmax: start.xmax + dx,\n      ymin: start.ymin + dy,\n      ymax: start.ymax + dy,\n    };\n\n    // Clip to the plotting area\n    if (opts.brushClip) {\n      const panel = state.panel as Panel;\n      const panelBoundsImg = panel.range;\n      const newBoundsImg = cssToImg(newBoundsCss);\n\n      // Convert to format for shiftToRange\n      let xvalsImg = [newBoundsImg.xmin, newBoundsImg.xmax];\n      let yvalsImg = [newBoundsImg.ymin, newBoundsImg.ymax];\n\n      xvalsImg = shiftToRange(\n        xvalsImg,\n        panelBoundsImg.left,\n        panelBoundsImg.right\n      );\n      yvalsImg = shiftToRange(\n        yvalsImg,\n        panelBoundsImg.top,\n        panelBoundsImg.bottom\n      );\n\n      // Convert back to bounds format\n      newBoundsCss = imgToCss({\n        xmin: xvalsImg[0],\n        xmax: xvalsImg[1],\n        ymin: yvalsImg[0],\n        ymax: yvalsImg[1],\n      });\n    }\n\n    boundsCss(newBoundsCss);\n    updateDiv();\n  }\n\n  function stopDragging() {\n    state.dragging = false;\n  }\n\n  function isResizing() {\n    return state.resizing;\n  }\n\n  function startResizing() {\n    state.resizing = true;\n    state.changeStartBounds = { ...state.boundsCss };\n    state.resizeSides = whichResizeSides(state.down);\n  }\n\n  function resizeTo(offsetCss: Offset) {\n    // How far the brush was dragged\n    const dCss = {\n      x: offsetCss.x - state.down.x,\n      y: offsetCss.y - state.down.y,\n    };\n\n    const dImg = cssToImg(dCss);\n\n    // Calculate what new positions would be, before clipping.\n    const bImg = cssToImg(state.changeStartBounds);\n    const panel = state.panel as Panel;\n    const panelBoundsImg = panel.range;\n\n    if (state.resizeSides.left) {\n      const xminImg = shiftToRange(\n        bImg.xmin + dImg.x,\n        panelBoundsImg.left,\n        bImg.xmax\n      )[0];\n\n      bImg.xmin = xminImg;\n    } else if (state.resizeSides.right) {\n      const xmaxImg = shiftToRange(\n        bImg.xmax + dImg.x,\n        bImg.xmin,\n        panelBoundsImg.right\n      )[0];\n\n      bImg.xmax = xmaxImg;\n    }\n\n    if (state.resizeSides.top) {\n      const yminImg = shiftToRange(\n        bImg.ymin + dImg.y,\n        panelBoundsImg.top,\n        bImg.ymax\n      )[0];\n\n      bImg.ymin = yminImg;\n    } else if (state.resizeSides.bottom) {\n      const ymaxImg = shiftToRange(\n        bImg.ymax + dImg.y,\n        bImg.ymin,\n        panelBoundsImg.bottom\n      )[0];\n\n      bImg.ymax = ymaxImg;\n    }\n\n    boundsCss(imgToCss(bImg));\n    updateDiv();\n  }\n\n  function stopResizing() {\n    state.resizing = false;\n  }\n\n  return {\n    reset: reset,\n\n    hasOldBrush,\n    importOldBrush: importOldBrush,\n    isInsideBrush: isInsideBrush,\n    isInResizeArea: isInResizeArea,\n    whichResizeSides: whichResizeSides,\n\n    onResize: onResize, // A callback when the wrapper div or img is resized.\n\n    boundsCss: boundsCss,\n    boundsData: boundsData,\n    getPanel: getPanel,\n\n    down: down,\n    up: up,\n\n    isBrushing: isBrushing,\n    startBrushing: startBrushing,\n    brushTo: brushTo,\n    stopBrushing: stopBrushing,\n\n    isDragging: isDragging,\n    startDragging: startDragging,\n    dragTo: dragTo,\n    stopDragging: stopDragging,\n\n    isResizing: isResizing,\n    startResizing: startResizing,\n    resizeTo: resizeTo,\n    stopResizing: stopResizing,\n  };\n}\n\nexport { createBrush };\n\nexport type { Bounds, BrushOpts, BoundsCss };\n", "import $ from \"jquery\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\nimport { mapValues } from \"../utils\";\nimport type { Offset } from \"./findbox\";\nimport type { Bounds } from \"./createBrush\";\nimport type { Panel, PanelInit } from \"./initPanelScales\";\nimport { initPanelScales } from \"./initPanelScales\";\n\n// -----------------------------------------------------------------------\n// Utility functions for finding dimensions and locations of DOM elements\n// -----------------------------------------------------------------------\n\n// Returns the ratio that an element has been scaled (for example, by CSS\n// transforms) in the x and y directions.\nfunction findScalingRatio($el: JQuery<HTMLElement>) {\n  const boundingRect = $el[0].getBoundingClientRect();\n\n  return {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    x: boundingRect.width / $el.outerWidth()!,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    y: boundingRect.height / $el.outerHeight()!,\n  };\n}\n\nfunction findOrigin($el: JQuery<HTMLElement>): Offset {\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const offset = $el.offset()!;\n  const scalingRatio = findScalingRatio($el);\n\n  // Find the size of the padding and border, for the top and left. This is\n  // before any transforms.\n  const paddingBorder = {\n    left:\n      parseInt($el.css(\"border-left-width\")) +\n      parseInt($el.css(\"padding-left\")),\n    top:\n      parseInt($el.css(\"border-top-width\")) + parseInt($el.css(\"padding-top\")),\n  };\n\n  // offset() returns the upper left corner of the element relative to the\n  // page, but it includes padding and border. Here we find the upper left\n  // of the element, not including padding and border.\n  return {\n    x: offset.left + scalingRatio.x * paddingBorder.left,\n    y: offset.top + scalingRatio.y * paddingBorder.top,\n  };\n}\n\n// Find the dimensions of a tag, after transforms, and without padding and\n// border.\nfunction findDims($el: JQuery<HTMLElement>) {\n  // If there's any padding/border, we need to find the ratio of the actual\n  // element content compared to the element plus padding and border.\n  const contentRatio = {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    x: $el.width()! / $el.outerWidth()!,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    y: $el.height()! / $el.outerHeight()!,\n  };\n\n  // Get the dimensions of the element _after_ any CSS transforms. This\n  // includes the padding and border.\n  const boundingRect = $el[0].getBoundingClientRect();\n\n  // Dimensions of the element after any CSS transforms, and without\n  // padding/border.\n  return {\n    x: contentRatio.x * boundingRect.width,\n    y: contentRatio.y * boundingRect.height,\n  };\n}\n\ntype OffsetCss = { [key: string]: number };\ntype OffsetImg = { [key: string]: number };\n\ntype Coords = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_css: Offset;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_img: Offset;\n  x?: number;\n  y?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  img_css_ratio?: Offset;\n  mapping?: Panel[\"mapping\"];\n  domain?: Panel[\"domain\"];\n  range?: Panel[\"range\"];\n  log?: Panel[\"log\"];\n};\n\ntype CoordmapInit = {\n  panels: PanelInit[];\n  dims:\n    | {\n        height: number;\n        width: number;\n      }\n    | { height: null; width: null };\n};\ntype Coordmap = {\n  panels: Panel[];\n  dims: {\n    height: number;\n    width: number;\n  };\n  mouseOffsetCss: (evt: JQuery.MouseEventBase) => Offset;\n  scaleCssToImg: {\n    (offsetCss: Bounds): Bounds;\n    (offsetCss: Offset): Offset;\n    (offsetCss: OffsetCss): OffsetImg;\n  };\n  scaleImgToCss: {\n    (offsetImg: Bounds): Bounds;\n    (offsetImg: Offset): Offset;\n    (offsetImg: OffsetImg): OffsetCss;\n    (offsetImg: { [key: string]: number }): { [key: string]: number | null };\n  };\n  imgToCssScalingRatio: () => Offset;\n  cssToImgScalingRatio: () => Offset;\n\n  getPanelCss: (offsetCss: OffsetCss, expand?: number) => Panel | null;\n  isInPanelCss: (offsetCss: OffsetCss, expand?: number) => boolean;\n\n  mouseCoordinateSender: (\n    inputId: string,\n    clip?: boolean,\n    nullOutside?: boolean\n  ) => (e: JQuery.MouseDownEvent | JQuery.MouseMoveEvent | null) => void;\n};\n\n// This adds functions to the coordmap object to handle various\n// coordinate-mapping tasks, and send information to the server. The input\n// coordmap is an array of objects, each of which represents a panel. coordmap\n// must be an array, even if empty, so that it can be modified in place; when\n// empty, we add a dummy panel to the array. It also calls initPanelScales,\n// which modifies each panel object to have scaleImgToData, scaleDataToImg,\n// and clip functions.\n//\n// There are three coordinate spaces which we need to translate between:\n//\n// 1. css: The pixel coordinates in the web browser, also known as CSS pixels.\n//    The origin is the upper-left corner of the <img> (not including padding\n//    and border).\n// 2. img: The pixel coordinates of the image data. A common case is on a\n//    HiDPI device, where the source PNG image could be 1000 pixels wide but\n//    be displayed in 500 CSS pixels. Another case is when the image has\n//    additional scaling due to CSS transforms or width.\n// 3. data: The coordinates in the data space. This is a bit more complicated\n//    than the other two, because there can be multiple panels (as in facets).\nfunction initCoordmap(\n  $el: JQuery<HTMLElement>,\n  coordmap_: CoordmapInit\n): Coordmap {\n  const $img = $el.find(\"img\");\n  const img = $img[0];\n\n  // If we didn't get any panels, create a dummy one where the domain and range\n  // are simply the pixel dimensions.\n  // that we modify.\n  if (coordmap_.panels.length === 0) {\n    const bounds = {\n      top: 0,\n      left: 0,\n      right: img.clientWidth - 1,\n      bottom: img.clientHeight - 1,\n    };\n\n    coordmap_.panels[0] = {\n      domain: bounds,\n      range: bounds,\n      mapping: {},\n    };\n  }\n\n  const coordmap = coordmap_ as Coordmap;\n  // If no dim height and width values are found, set them to the raw image height and width\n  // These values should be the same...\n  // This is only done to initialize an image output, whose height and width are unknown until the image is retrieved\n\n  coordmap.dims.height = coordmap.dims.height || img.naturalHeight;\n  coordmap.dims.width = coordmap.dims.width || img.naturalWidth;\n\n  // Add scaling functions to each panel\n  coordmap.panels = initPanelScales(coordmap_.panels);\n\n  // This returns the offset of the mouse in CSS pixels relative to the img,\n  // but not including the  padding or border, if present.\n  coordmap.mouseOffsetCss = function (mouseEvent) {\n    const imgOrigin = findOrigin($img);\n\n    // The offset of the mouse from the upper-left corner of the img, in\n    // pixels.\n    return {\n      x: mouseEvent.pageX - imgOrigin.x,\n      y: mouseEvent.pageY - imgOrigin.y,\n    };\n  };\n\n  // Given an offset in an img in CSS pixels, return the corresponding offset\n  // in source image pixels. The offsetCss can have properties like \"x\",\n  // \"xmin\", \"y\", and \"ymax\" -- anything that starts with \"x\" and \"y\". If the\n  // img content is 1000 pixels wide, but is scaled to 400 pixels on screen,\n  // and the input is x:400, then this will return x:1000.\n  function scaleCssToImg(offsetCss: Bounds): Bounds;\n  function scaleCssToImg(offsetCss: Offset): Offset;\n  function scaleCssToImg(offsetCss: OffsetCss): OffsetImg;\n  function scaleCssToImg(offsetCss: OffsetCss) {\n    const pixelScaling = coordmap.imgToCssScalingRatio();\n\n    const result = mapValues(offsetCss, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return offsetCss[key] / pixelScaling.x;\n      } else if (prefix === \"y\") {\n        return offsetCss[key] / pixelScaling.y;\n      }\n      return null;\n    });\n\n    return result;\n  }\n  coordmap.scaleCssToImg = scaleCssToImg;\n\n  // Given an offset in an img, in source image pixels, return the\n  // corresponding offset in CSS pixels. If the img content is 1000 pixels\n  // wide, but is scaled to 400 pixels on screen, and the input is x:1000,\n  // then this will return x:400.\n  function scaleImgToCss(offsetImg: Bounds): Bounds;\n  function scaleImgToCss(offsetImg: Offset): Offset;\n  function scaleImgToCss(offsetImg: OffsetImg): OffsetCss;\n  function scaleImgToCss(offsetImg: { [key: string]: number }): {\n    [key: string]: number | null;\n  } {\n    const pixelScaling = coordmap.imgToCssScalingRatio();\n\n    const result = mapValues(offsetImg, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return offsetImg[key] * pixelScaling.x;\n      } else if (prefix === \"y\") {\n        return offsetImg[key] * pixelScaling.y;\n      }\n      return null;\n    });\n\n    return result;\n  }\n  coordmap.scaleImgToCss = scaleImgToCss;\n\n  // Returns the x and y ratio the image content is scaled to on screen. If\n  // the image data is 1000 pixels wide and is scaled to 300 pixels on screen,\n  // then this returns 0.3. (Note the 300 pixels refers to CSS pixels.)\n  coordmap.imgToCssScalingRatio = function () {\n    const imgDims = findDims($img);\n\n    return {\n      x: imgDims.x / coordmap.dims.width,\n      y: imgDims.y / coordmap.dims.height,\n    };\n  };\n\n  coordmap.cssToImgScalingRatio = function () {\n    const res = coordmap.imgToCssScalingRatio();\n\n    return {\n      x: 1 / res.x,\n      y: 1 / res.y,\n    };\n  };\n\n  // Given an offset in css pixels, return an object representing which panel\n  // it's in. The `expand` argument tells it to expand the panel area by that\n  // many pixels. It's possible for an offset to be within more than one\n  // panel, because of the `expand` value. If that's the case, find the\n  // nearest panel.\n  coordmap.getPanelCss = function (offsetCss, expand = 0) {\n    const offsetImg = coordmap.scaleCssToImg(offsetCss);\n    const x = offsetImg.x;\n    const y = offsetImg.y;\n\n    // Convert expand from css pixels to img pixels\n    const cssToImgRatio = coordmap.cssToImgScalingRatio();\n    const expandImg = {\n      x: expand * cssToImgRatio.x,\n      y: expand * cssToImgRatio.y,\n    };\n\n    const matches = []; // Panels that match\n    const dists = []; // Distance of offset to each matching panel\n    let b;\n    let i;\n\n    for (i = 0; i < coordmap.panels.length; i++) {\n      b = coordmap.panels[i].range;\n\n      if (\n        x <= b.right + expandImg.x &&\n        x >= b.left - expandImg.x &&\n        y <= b.bottom + expandImg.y &&\n        y >= b.top - expandImg.y\n      ) {\n        matches.push(coordmap.panels[i]);\n\n        // Find distance from edges for x and y\n        let xdist = 0;\n        let ydist = 0;\n\n        if (x > b.right && x <= b.right + expandImg.x) {\n          xdist = x - b.right;\n        } else if (x < b.left && x >= b.left - expandImg.x) {\n          xdist = x - b.left;\n        }\n        if (y > b.bottom && y <= b.bottom + expandImg.y) {\n          ydist = y - b.bottom;\n        } else if (y < b.top && y >= b.top - expandImg.y) {\n          ydist = y - b.top;\n        }\n\n        // Cartesian distance\n        dists.push(Math.sqrt(Math.pow(xdist, 2) + Math.pow(ydist, 2)));\n      }\n    }\n\n    if (matches.length) {\n      // Find shortest distance\n      const minDist = Math.min.apply(null, dists);\n\n      for (i = 0; i < matches.length; i++) {\n        if (dists[i] === minDist) {\n          return matches[i];\n        }\n      }\n    }\n\n    return null;\n  };\n\n  // Is an offset (in css pixels) in a panel? If supplied, `expand` tells us\n  // to expand the panels by that many pixels in all directions.\n  coordmap.isInPanelCss = function (offsetCss, expand = 0) {\n    if (coordmap.getPanelCss(offsetCss, expand)) return true;\n\n    return false;\n  };\n\n  // Returns a function that sends mouse coordinates, scaled to data space.\n  // If that function is passed a null event, it will send null.\n  coordmap.mouseCoordinateSender = function (\n    inputId,\n    clip = true,\n    nullOutside = false\n  ) {\n    return function (e) {\n      if (e === null) {\n        shinySetInputValue(inputId, null);\n        return;\n      }\n      const coordsCss = coordmap.mouseOffsetCss(e);\n      // If outside of plotting region\n\n      if (!coordmap.isInPanelCss(coordsCss)) {\n        if (nullOutside) {\n          shinySetInputValue(inputId, null);\n          return;\n        }\n        if (clip) return;\n\n        const coords: Coords = {\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          coords_css: coordsCss,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          coords_img: coordmap.scaleCssToImg(coordsCss),\n        };\n\n        shinySetInputValue(inputId, coords, { priority: \"event\" });\n        return;\n      }\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const panel = coordmap.getPanelCss(coordsCss)!;\n\n      const coordsImg = coordmap.scaleCssToImg(coordsCss);\n      const coordsData = panel.scaleImgToData(coordsImg);\n\n      const coords: Coords = {\n        x: coordsData?.x,\n        y: coordsData?.y,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        coords_css: coordsCss,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        coords_img: coordsImg,\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        img_css_ratio: coordmap.cssToImgScalingRatio(),\n      };\n\n      // Add the panel (facet) variables, if present\n      $.extend(coords, panel.panel_vars);\n\n      // Add variable name mappings\n      coords.mapping = panel.mapping;\n\n      // Add scaling information\n      coords.domain = panel.domain;\n      coords.range = panel.range;\n      coords.log = panel.log;\n\n      shinySetInputValue(inputId, coords, { priority: \"event\" });\n    };\n  };\n\n  return coordmap;\n}\n\nexport type { Coordmap, CoordmapInit };\nexport { initCoordmap, findOrigin };\n", "// Map a value x from a domain to a range. If clip is true, clip it to the\n\nimport type { Offset } from \"./findbox\";\nimport { mapValues } from \"../utils\";\nimport type { Bounds } from \"./createBrush\";\n\n// range.\nfunction mapLinear(\n  x: number,\n  domainMin: number,\n  domainMax: number,\n  rangeMin: number,\n  rangeMax: number,\n  clip = true\n) {\n  // By default, clip to range\n  clip = clip || true;\n\n  const factor = (rangeMax - rangeMin) / (domainMax - domainMin);\n  const val = x - domainMin;\n  let newval = val * factor + rangeMin;\n\n  if (clip) {\n    const max = Math.max(rangeMax, rangeMin);\n    const min = Math.min(rangeMax, rangeMin);\n\n    if (newval > max) newval = max;\n    else if (newval < min) newval = min;\n  }\n  return newval;\n}\n\n// Create scale and inverse-scale functions for a single direction (x or y).\nfunction scaler1D(\n  domainMin: number,\n  domainMax: number,\n  rangeMin: number,\n  rangeMax: number,\n  logbase: number | null\n) {\n  return {\n    scale: function (val: number, clip?: boolean) {\n      if (logbase) val = Math.log(val) / Math.log(logbase);\n      return mapLinear(val, domainMin, domainMax, rangeMin, rangeMax, clip);\n    },\n\n    scaleInv: function (val: number, clip?: boolean) {\n      let res = mapLinear(val, rangeMin, rangeMax, domainMin, domainMax, clip);\n\n      if (logbase) res = Math.pow(logbase, res);\n      return res;\n    },\n  };\n}\n\ntype PanelInit = {\n  domain: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n  range: {\n    top: number;\n    bottom: number;\n    left: number;\n    right: number;\n  };\n  log?: {\n    x?: number;\n    y?: number;\n  };\n  mapping: { [key: string]: string };\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  panel_vars?: { [key: string]: number | string };\n};\ntype Panel = PanelInit & {\n  scaleDataToImg: {\n    (val: Bounds, clip?: boolean): Bounds;\n  };\n  scaleImgToData: {\n    (val: Offset, clip?: boolean): Offset;\n  };\n\n  clipImg: (offsetImg: { x: number; y: number }) => { x: number; y: number };\n};\n\n// Modify panel, adding scale and inverse-scale functions that take objects\n// like {x:1, y:3}, and also add clip function.\nfunction addScaleFuns(panel_: PanelInit): Panel {\n  const panel = panel_ as Panel;\n  const d = panel.domain;\n  const r = panel.range;\n  const xlog = panel.log && panel.log.x ? panel.log.x : null;\n  const ylog = panel.log && panel.log.y ? panel.log.y : null;\n  const xscaler = scaler1D(d.left, d.right, r.left, r.right, xlog);\n  const yscaler = scaler1D(d.bottom, d.top, r.bottom, r.top, ylog);\n\n  // Given an object of form {x:1, y:2}, or {x:1, xmin:2:, ymax: 3}, convert\n  // from data coordinates to img. Whether a value is converted as x or y\n  // depends on the first character of the key.\n  // (val: Offset, clip?: boolean): Offset;\n  // (val: Bounds, clip?: boolean): Bounds;\n  // (val: { [key: `${\"x\" | \"y\"}${string}`]: number }, clip?: boolean): { [key: `${\"x\" | \"y\"}${string}`]: number }\n  // (val: { [key: string]: number | null }, clip?: boolean): {\n  //   [key: string]: number | null;\n  // };\n  function scaleDataToImg(\n    val: Bounds,\n    clip?: Parameters<typeof xscaler.scale>[1]\n  ): Bounds {\n    return mapValues(val, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return xscaler.scale(value, clip);\n      } else if (prefix === \"y\") {\n        return yscaler.scale(value, clip);\n      }\n      // TODO-future; If we know the input is a valid input (starts with x/y), why do we still have this value?\n      return null;\n    }) as Bounds;\n  }\n  panel.scaleDataToImg = scaleDataToImg;\n\n  function scaleImgToData(val: Offset, clip?: boolean): Offset {\n    return mapValues(val, (value, key) => {\n      const prefix = key.substring(0, 1);\n\n      if (prefix === \"x\") {\n        return xscaler.scaleInv(value, clip);\n      } else if (prefix === \"y\") {\n        return yscaler.scaleInv(value, clip);\n      }\n      // TODO-future; If we know the input is a valid input (starts with x/y), why do we still have this value?\n      return null;\n    }) as Offset;\n  }\n  panel.scaleImgToData = scaleImgToData;\n\n  // Given a scaled offset (in img pixels), clip it to the nearest panel region.\n  panel.clipImg = function (offsetImg) {\n    const newOffset = {\n      x: offsetImg.x,\n      y: offsetImg.y,\n    };\n\n    const bounds = panel.range;\n\n    if (offsetImg.x > bounds.right) newOffset.x = bounds.right;\n    else if (offsetImg.x < bounds.left) newOffset.x = bounds.left;\n\n    if (offsetImg.y > bounds.bottom) newOffset.y = bounds.bottom;\n    else if (offsetImg.y < bounds.top) newOffset.y = bounds.top;\n\n    return newOffset;\n  };\n\n  return panel;\n}\n\n// Modifies the panel objects in a coordmap, adding scaleImgToData(),\n// scaleDataToImg(), and clipImg() functions to each one. The panel objects\n// use img and data coordinates only; they do not use css coordinates. The\n// domain is in data coordinates; the range is in img coordinates.\nfunction initPanelScales(panels: PanelInit[]): Panel[] {\n  // Add the functions to each panel object.\n  return panels.map((panel) => addScaleFuns(panel));\n}\n\nexport type { Panel, PanelInit };\nexport { initPanelScales };\n", "// Given two sets of x/y coordinates, return an object representing the min\n// and max x and y values. (This could be generalized to any number of\n\nimport type { Bounds } from \"./createBrush\";\n\ntype Offset = {\n  x: number;\n  y: number;\n};\n\n// points).\nfunction findBox(offset1: Offset, offset2: Offset): Bounds {\n  return {\n    xmin: Math.min(offset1.x, offset2.x),\n    xmax: Math.max(offset1.x, offset2.x),\n    ymin: Math.min(offset1.y, offset2.y),\n    ymax: Math.max(offset1.y, offset2.y),\n  };\n}\n\nexport type { Offset };\nexport { findBox };\n", "// Shift an array of values so that they are within a min and max. The vals\n// will be shifted so that they maintain the same spacing internally. If the\n// range in vals is larger than the range of min and max, the result might not\n// make sense.\nfunction shiftToRange(\n  vals: number[] | number,\n  min: number,\n  max: number\n): number[] {\n  if (!(vals instanceof Array)) vals = [vals];\n\n  const maxval = Math.max.apply(null, vals);\n  const minval = Math.min.apply(null, vals);\n  let shiftAmount = 0;\n\n  if (maxval > max) {\n    shiftAmount = max - maxval;\n  } else if (minval < min) {\n    shiftAmount = min - minval;\n  }\n\n  const newvals = [];\n\n  for (let i = 0; i < vals.length; i++) {\n    newvals[i] = vals[i] + shiftAmount;\n  }\n  return newvals;\n}\n\nexport { shiftToRange };\n", "import $ from \"jquery\";\n\n// This object provides two public event listeners: mousedown, and\n// dblclickIE8.\n// We need to make sure that, when the image is listening for double-\n// clicks, that a double-click doesn't trigger two click events. We'll\n// trigger custom mousedown2 and dblclick2 events with this mousedown\n// listener.\nfunction createClickInfo(\n  $el: JQuery<HTMLElement>,\n  dblclickId: string,\n  dblclickDelay: number\n): {\n  mousedown: (e: JQuery.MouseDownEvent) => void;\n  dblclickIE8: (e: JQuery.DoubleClickEvent) => void;\n} {\n  let clickTimer: number | undefined = undefined;\n  let pendingE: JQuery.MouseDownEvent | null = null; // A pending mousedown2 event\n\n  // Create a new event of type eventType (like 'mousedown2'), and trigger\n  // it with the information stored in this.e.\n  function triggerEvent(\n    newEventType: string,\n    e: JQuery.DoubleClickEvent | JQuery.MouseDownEvent\n  ) {\n    // Extract important info from e and construct a new event with type\n    // eventType.\n    const e2 = $.Event(newEventType, {\n      which: e.which,\n      pageX: e.pageX,\n      pageY: e.pageY,\n    });\n\n    $el.trigger(e2);\n  }\n\n  function triggerPendingMousedown2() {\n    // It's possible that between the scheduling of a mousedown2 and the\n    // time this callback is executed, someone else triggers a\n    // mousedown2, so check for that.\n    if (pendingE) {\n      triggerEvent(\"mousedown2\", pendingE);\n      pendingE = null;\n    }\n  }\n\n  // Set a timer to trigger a mousedown2 event, using information from the\n  // last recorded mousdown event.\n  function scheduleMousedown2(e: JQuery.MouseDownEvent) {\n    pendingE = e;\n\n    clickTimer = window.setTimeout(function () {\n      triggerPendingMousedown2();\n    }, dblclickDelay);\n  }\n\n  function mousedown(e: JQuery.MouseDownEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    // If no dblclick listener, immediately trigger a mousedown2 event.\n    if (!dblclickId) {\n      triggerEvent(\"mousedown2\", e);\n      return;\n    }\n\n    // If there's a dblclick listener, make sure not to count this as a\n    // click on the first mousedown; we need to wait for the dblclick\n    // delay before we can be sure this click was a single-click.\n    if (pendingE === null) {\n      scheduleMousedown2(e);\n    } else {\n      clearTimeout(clickTimer);\n\n      // If second click is too far away, it doesn't count as a double\n      // click. Instead, immediately trigger a mousedown2 for the previous\n      // click, and set this click as a new first click.\n      if (\n        (pendingE && Math.abs(pendingE.pageX - e.pageX) > 2) ||\n        Math.abs(pendingE.pageY - e.pageY) > 2\n      ) {\n        triggerPendingMousedown2();\n        scheduleMousedown2(e);\n      } else {\n        // The second click was close to the first one. If it happened\n        // within specified delay, trigger our custom 'dblclick2' event.\n        pendingE = null;\n        triggerEvent(\"dblclick2\", e);\n      }\n    }\n  }\n\n  // IE8 needs a special hack because when you do a double-click it doesn't\n  // trigger the click event twice - it directly triggers dblclick.\n  function dblclickIE8(e: JQuery.DoubleClickEvent) {\n    e.which = 1; // In IE8, e.which is 0 instead of 1. ???\n    triggerEvent(\"dblclick2\", e);\n  }\n\n  return {\n    mousedown: mousedown,\n    dblclickIE8: dblclickIE8,\n  };\n}\n\nexport { createClickInfo };\n", "import $ from \"jquery\";\nimport { imageOutputBinding } from \"../bindings/output/image\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\nimport { Debouncer, Throttler } from \"../time\";\nimport { createBrush } from \"./createBrush\";\nimport type { BoundsCss, Bounds, BrushOpts } from \"./createBrush\";\nimport type { Offset } from \"./findbox\";\nimport type { Coordmap } from \"./initCoordmap\";\nimport type { Panel } from \"./initPanelScales\";\nimport type { InputRatePolicy } from \"../inputPolicies\";\n\n// ----------------------------------------------------------\n// Handler creators for click, hover, brush.\n// Each of these returns an object with a few public members. These public\n// members are callbacks that are meant to be bound to events on $el with\n// the same name (like 'mousedown').\n// ----------------------------------------------------------\n\ntype CreateHandler = {\n  mousemove?: (e: JQuery.MouseMoveEvent) => void;\n  mouseout?: (e: JQuery.MouseOutEvent) => void;\n  mousedown?: (e: JQuery.MouseDownEvent) => void;\n  onResetImg: () => void;\n  onResize: ((e: JQuery.ResizeEvent) => void) | null;\n};\n\ntype BrushInfo = {\n  xmin: number;\n  xmax: number;\n  ymin: number;\n  ymax: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_css?: BoundsCss;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  coords_img?: Bounds;\n  x?: number;\n  y?: number;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  img_css_ratio?: Offset;\n  mapping?: Panel[\"mapping\"];\n  domain?: Panel[\"domain\"];\n  range?: Panel[\"range\"];\n  log?: Panel[\"log\"];\n  direction?: BrushOpts[\"brushDirection\"];\n  brushId?: string;\n  outputId?: string;\n};\n\ntype InputId = Parameters<Coordmap[\"mouseCoordinateSender\"]>[0];\ntype Clip = Parameters<Coordmap[\"mouseCoordinateSender\"]>[1];\ntype NullOutside = Parameters<Coordmap[\"mouseCoordinateSender\"]>[2];\n\nfunction createClickHandler(\n  inputId: InputId,\n  clip: Clip,\n  coordmap: Coordmap\n): CreateHandler {\n  const clickInfoSender = coordmap.mouseCoordinateSender(inputId, clip);\n\n  // Send initial (null) value on creation.\n  clickInfoSender(null);\n\n  return {\n    mousedown: function (e) {\n      // Listen for left mouse button only\n      if (e.which !== 1) return;\n      clickInfoSender(e);\n    },\n    onResetImg: function () {\n      clickInfoSender(null);\n    },\n    onResize: null,\n  };\n}\n\nfunction createHoverHandler(\n  inputId: InputId,\n  delay: number,\n  delayType: string | \"throttle\",\n  clip: Clip,\n  nullOutside: NullOutside,\n  coordmap: Coordmap\n): CreateHandler {\n  const sendHoverInfo = coordmap.mouseCoordinateSender(\n    inputId,\n    clip,\n    nullOutside\n  );\n\n  let hoverInfoSender: InputRatePolicy<typeof sendHoverInfo>;\n\n  if (delayType === \"throttle\")\n    hoverInfoSender = new Throttler(null, sendHoverInfo, delay);\n  else hoverInfoSender = new Debouncer(null, sendHoverInfo, delay);\n\n  // Send initial (null) value on creation.\n  hoverInfoSender.immediateCall(null);\n\n  // What to do when mouse exits the image\n  let mouseout: () => void;\n\n  if (nullOutside)\n    mouseout = function () {\n      hoverInfoSender.normalCall(null);\n    };\n  else\n    mouseout = function () {\n      // do nothing\n    };\n\n  return {\n    mousemove: function (e) {\n      hoverInfoSender.normalCall(e);\n    },\n    mouseout: mouseout,\n    onResetImg: function () {\n      hoverInfoSender.immediateCall(null);\n    },\n    onResize: null,\n  };\n}\n\n// Returns a brush handler object. This has three public functions:\n// mousedown, mousemove, and onResetImg.\nfunction createBrushHandler(\n  inputId: InputId,\n  $el: JQuery<HTMLElement>,\n  opts: BrushOpts,\n  coordmap: Coordmap,\n  outputId: BrushInfo[\"outputId\"]\n): CreateHandler {\n  // Parameter: expand the area in which a brush can be started, by this\n  // many pixels in all directions. (This should probably be a brush option)\n  const expandPixels = 20;\n\n  // Represents the state of the brush\n  const brush = createBrush($el, opts, coordmap, expandPixels);\n\n  // Brush IDs can span multiple image/plot outputs. When an output is brushed,\n  // if a brush with the same ID is active on a different image/plot, it must\n  // be dismissed (but without sending any data to the server). We implement\n  // this by sending the shiny-internal:brushed event to all plots, and letting\n  // each plot decide for itself what to do.\n  //\n  // The decision to have the event sent to each plot (as opposed to a single\n  // event triggered on, say, the document) was made to make cleanup easier;\n  // listening on an event on the document would prevent garbage collection\n  // of plot outputs that are removed from the document.\n  $el.on(\"shiny-internal:brushed.image_output\", function (e, coords) {\n    // If the new brush shares our ID but not our output element ID, we\n    // need to clear our brush (if any).\n    if (coords.brushId === inputId && coords.outputId !== outputId) {\n      $el.data(\"mostRecentBrush\", false);\n      brush.reset();\n    }\n  });\n\n  // Set cursor to one of 7 styles. We need to set the cursor on the whole\n  // el instead of the brush div, because the brush div has\n  // 'pointer-events:none' so that it won't intercept pointer events.\n  // If `style` is null, don't add a cursor style.\n  function setCursorStyle(\n    style:\n      | \"crosshair\"\n      | \"ew-resize\"\n      | \"grabbable\"\n      | \"grabbing\"\n      | \"nesw-resize\"\n      | \"ns-resize\"\n      | \"nwse-resize\"\n      | null\n  ) {\n    $el.removeClass(\n      \"crosshair grabbable grabbing ns-resize ew-resize nesw-resize nwse-resize\"\n    );\n\n    if (style) $el.addClass(style);\n  }\n\n  function sendBrushInfo() {\n    const coords: BrushInfo = brush.boundsData();\n\n    // We're in a new or reset state\n    if (isNaN(coords.xmin)) {\n      shinySetInputValue(inputId, null);\n      // Must tell other brushes to clear.\n      imageOutputBinding\n        .find(document.documentElement)\n        .trigger(\"shiny-internal:brushed\", {\n          brushId: inputId,\n          outputId: null,\n        });\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const panel = brush.getPanel()!;\n\n    // Add the panel (facet) variables, if present\n    $.extend(coords, panel.panel_vars);\n\n    // eslint-disable-next-line camelcase\n    coords.coords_css = brush.boundsCss();\n    // eslint-disable-next-line camelcase\n    coords.coords_img = coordmap.scaleCssToImg(coords.coords_css);\n\n    // eslint-disable-next-line camelcase\n    coords.img_css_ratio = coordmap.cssToImgScalingRatio();\n\n    // Add variable name mappings\n    coords.mapping = panel.mapping;\n\n    // Add scaling information\n    coords.domain = panel.domain;\n    coords.range = panel.range;\n    coords.log = panel.log;\n\n    coords.direction = opts.brushDirection;\n\n    coords.brushId = inputId;\n    coords.outputId = outputId;\n\n    // Send data to server\n    shinySetInputValue(inputId, coords);\n\n    $el.data(\"mostRecentBrush\", true);\n    imageOutputBinding\n      .find(document.documentElement)\n      .trigger(\"shiny-internal:brushed\", coords);\n  }\n\n  let brushInfoSender:\n    | Debouncer<typeof sendBrushInfo>\n    | Throttler<typeof sendBrushInfo>;\n\n  if (opts.brushDelayType === \"throttle\") {\n    brushInfoSender = new Throttler(null, sendBrushInfo, opts.brushDelay);\n  } else {\n    brushInfoSender = new Debouncer(null, sendBrushInfo, opts.brushDelay);\n  }\n\n  // Send initial (null) value on creation.\n  if (!brush.hasOldBrush()) {\n    brushInfoSender.immediateCall();\n  }\n\n  function mousedown(e: JQuery.MouseDownEvent) {\n    // This can happen when mousedown inside the graphic, then mouseup\n    // outside, then mousedown inside. Just ignore the second\n    // mousedown.\n    if (brush.isBrushing() || brush.isDragging() || brush.isResizing()) return;\n\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    // In general, brush uses css pixels, and coordmap uses img pixels.\n    const offsetCss = coordmap.mouseOffsetCss(e);\n\n    // Ignore mousedown events outside of plotting region, expanded by\n    // a number of pixels specified in expandPixels.\n    if (opts.brushClip && !coordmap.isInPanelCss(offsetCss, expandPixels))\n      return;\n\n    brush.up({ x: NaN, y: NaN });\n    brush.down(offsetCss);\n\n    if (brush.isInResizeArea(offsetCss)) {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-expect-error; TODO-barret; Remove the variable? it is not used\n      brush.startResizing(offsetCss);\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveResizing)\n        .on(\"mouseup.image_brush\", mouseupResizing);\n    } else if (brush.isInsideBrush(offsetCss)) {\n      // @ts-expect-error; TODO-barret this variable is not respected\n      brush.startDragging(offsetCss);\n      setCursorStyle(\"grabbing\");\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveDragging)\n        .on(\"mouseup.image_brush\", mouseupDragging);\n    } else {\n      const panel = coordmap.getPanelCss(offsetCss, expandPixels);\n\n      // @ts-expect-error; TODO-barret start brushing does not take any args; Either change the function to ignore, or do not send to function;\n      brush.startBrushing(panel.clipImg(coordmap.scaleCssToImg(offsetCss)));\n\n      // Attach the move and up handlers to the window so that they respond\n      // even when the mouse is moved outside of the image.\n      $(document)\n        .on(\"mousemove.image_brush\", mousemoveBrushing)\n        .on(\"mouseup.image_brush\", mouseupBrushing);\n    }\n  }\n\n  // This sets the cursor style when it's in the el\n  function mousemove(e: JQuery.MouseMoveEvent) {\n    // In general, brush uses css pixels, and coordmap uses img pixels.\n    const offsetCss = coordmap.mouseOffsetCss(e);\n\n    if (!(brush.isBrushing() || brush.isDragging() || brush.isResizing())) {\n      // Set the cursor depending on where it is\n      if (brush.isInResizeArea(offsetCss)) {\n        const r = brush.whichResizeSides(offsetCss);\n\n        if ((r.left && r.top) || (r.right && r.bottom)) {\n          setCursorStyle(\"nwse-resize\");\n        } else if ((r.left && r.bottom) || (r.right && r.top)) {\n          setCursorStyle(\"nesw-resize\");\n        } else if (r.left || r.right) {\n          setCursorStyle(\"ew-resize\");\n        } else if (r.top || r.bottom) {\n          setCursorStyle(\"ns-resize\");\n        }\n      } else if (brush.isInsideBrush(offsetCss)) {\n        setCursorStyle(\"grabbable\");\n      } else if (coordmap.isInPanelCss(offsetCss, expandPixels)) {\n        setCursorStyle(\"crosshair\");\n      } else {\n        setCursorStyle(null);\n      }\n    }\n  }\n\n  // mousemove handlers while brushing or dragging\n  function mousemoveBrushing(e: JQuery.MouseMoveEvent) {\n    brush.brushTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  function mousemoveDragging(e: JQuery.MouseMoveEvent) {\n    brush.dragTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  function mousemoveResizing(e: JQuery.MouseMoveEvent) {\n    brush.resizeTo(coordmap.mouseOffsetCss(e));\n    brushInfoSender.normalCall();\n  }\n\n  // mouseup handlers while brushing or dragging\n  function mouseupBrushing(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n\n    brush.stopBrushing();\n    setCursorStyle(\"crosshair\");\n\n    // If the brush didn't go anywhere, hide the brush, clear value,\n    // and return.\n    if (brush.down().x === brush.up().x && brush.down().y === brush.up().y) {\n      brush.reset();\n      brushInfoSender.immediateCall();\n      return;\n    }\n\n    // Send info immediately on mouseup, but only if needed. If we don't\n    // do the pending check, we might send the same data twice (with\n    // with difference nonce).\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  function mouseupDragging(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n\n    brush.stopDragging();\n    setCursorStyle(\"grabbable\");\n\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  function mouseupResizing(e: JQuery.MouseUpEvent) {\n    // Listen for left mouse button only\n    if (e.which !== 1) return;\n\n    $(document).off(\"mousemove.image_brush\").off(\"mouseup.image_brush\");\n\n    brush.up(coordmap.mouseOffsetCss(e));\n    brush.stopResizing();\n\n    if (brushInfoSender.isPending()) brushInfoSender.immediateCall();\n  }\n\n  // Brush maintenance: When an image is re-rendered, the brush must either\n  // be removed (if brushResetOnNew) or imported (if !brushResetOnNew). The\n  // \"mostRecentBrush\" bit is to ensure that when multiple outputs share the\n  // same brush ID, inactive brushes don't send null values up to the server.\n\n  // This should be called when the img (not the el) is reset\n  function onResetImg() {\n    if (opts.brushResetOnNew) {\n      if ($el.data(\"mostRecentBrush\")) {\n        brush.reset();\n        brushInfoSender.immediateCall();\n      }\n    }\n  }\n\n  if (!opts.brushResetOnNew) {\n    if ($el.data(\"mostRecentBrush\")) {\n      // Importing an old brush must happen after the image data has loaded\n      // and the <img> DOM element has the updated size. If importOldBrush()\n      // is called before this happens, then the css-img coordinate mappings\n      // will give the wrong result, and the brush will have the wrong\n      // position.\n      //\n      // jcheng 09/26/2018: This used to happen in img.onLoad, but recently\n      // we moved to all brush initialization moving to img.onLoad so this\n      // logic can be executed inline.\n      brush.importOldBrush();\n      brushInfoSender.immediateCall();\n    }\n  }\n\n  function onResize() {\n    brush.onResize();\n    brushInfoSender.immediateCall();\n  }\n\n  return {\n    mousedown: mousedown,\n    mousemove: mousemove,\n    onResetImg: onResetImg,\n    onResize: onResize,\n  };\n}\n\nexport { createClickHandler, createHoverHandler, createBrushHandler };\nexport type { BrushInfo };\n", "function disableDrag(\n  $el: JQuery<HTMLElement>,\n  $img: JQuery<HTMLElement>\n): void {\n  // Make image non-draggable (Chrome, Safari)\n  $img.css(\"-webkit-user-drag\", \"none\");\n\n  // Firefox, IE<=10\n  // First remove existing handler so we don't keep adding handlers.\n  $img.off(\"dragstart.image_output\");\n  $img.on(\"dragstart.image_output\", function () {\n    return false;\n  });\n\n  // Disable selection of image and text when dragging in IE<=10\n  $el.off(\"selectstart.image_output\");\n  $el.on(\"selectstart.image_output\", function () {\n    return false;\n  });\n}\n\nexport { disableDrag };\n", "import { TextOutputBinding } from \"./text\";\nimport { BindingRegistry } from \"../registry\";\nimport { DownloadLinkOutputBinding } from \"./downloadlink\";\nimport { DatatableOutputBinding } from \"./datatable\";\nimport { HtmlOutputBinding } from \"./html\";\nimport { imageOutputBinding } from \"./image\";\n\nimport { OutputBinding } from \"./outputBinding\";\n\ntype InitOutputBindings = {\n  outputBindings: BindingRegistry<OutputBinding>;\n};\nfunction initOutputBindings(): InitOutputBindings {\n  const outputBindings = new BindingRegistry<OutputBinding>();\n\n  outputBindings.register(new TextOutputBinding(), \"shiny.textOutput\");\n  outputBindings.register(\n    new DownloadLinkOutputBinding(),\n    \"shiny.downloadLink\"\n  );\n  outputBindings.register(\n    new DatatableOutputBinding(),\n    \"shiny.datatableOutput\"\n  );\n  outputBindings.register(new HtmlOutputBinding(), \"shiny.htmlOutput\");\n  outputBindings.register(imageOutputBinding, \"shiny.imageOutput\");\n\n  return { outputBindings };\n}\n\nexport { OutputBinding, initOutputBindings };\n", "import { imageOutputBinding } from \"../bindings/output/image\";\nimport { shinySetInputValue } from \"../shiny/initedMethods\";\n\nfunction resetBrush(brushId: string): void {\n  shinySetInputValue(brushId, null);\n  imageOutputBinding\n    .find(document.documentElement)\n    .trigger(\"shiny-internal:brushed\", {\n      brushId: brushId,\n      outputId: null,\n    });\n}\n\nexport { resetBrush };\n", "import $ from \"jquery\";\n\nimport { $escape, randomId } from \"../utils\";\nimport { shinyUnbindAll } from \"./initedMethods\";\nimport type { HtmlDep } from \"./render\";\nimport { renderDependenciesAsync } from \"./render\";\nimport { renderContentAsync } from \"./render\";\n\n// Milliseconds to fade in or out\nconst fadeDuration = 250;\n\nasync function show({\n  html = \"\",\n  action = \"\",\n  deps = [],\n  duration = 5000,\n  id = null,\n  closeButton = true,\n  type = null,\n}: {\n  html?: string;\n  action?: string;\n  deps?: HtmlDep[];\n  duration?: number | null;\n  id?: string | null;\n  closeButton?: boolean;\n  type?: string | null;\n} = {}): Promise<ReturnType<typeof randomId>> {\n  if (!id) id = randomId();\n\n  // Normally we'd first create the notification's DOM elements, then call\n  // `renderContentAsync(x, {html: html, deps: deps})`, but that has a potential\n  // problem with async rendering. If we did that, then an empty notification\n  // (from this function) could show up and then sit there empty while the\n  // dependencies load (asynchronously), and only after all that get filled with\n  // content for the notification. So instead we'll render the deps here, then\n  // render the notification, then render the content in the notification.\n  await renderDependenciesAsync(deps);\n\n  // Create panel if necessary\n  createPanel();\n\n  // Get existing DOM element for this ID, or create if needed.\n  let $notificationInit = get(id);\n\n  if ($notificationInit?.length === 0) $notificationInit = create(id);\n  const $notification = $notificationInit as JQuery<HTMLElement>;\n\n  // Render html and dependencies\n  const newHtml =\n    `<div class=\"shiny-notification-content-text\">${html}</div>` +\n    `<div class=\"shiny-notification-content-action\">${action}</div>`;\n  const $content = $notification.find(\".shiny-notification-content\");\n\n  // Set/replace contents of wrapper with html.\n  await renderContentAsync($content, { html: newHtml });\n\n  // Remove any existing classes of the form 'shiny-notification-xxxx'.\n  // The xxxx would be strings like 'warning'.\n  const classes = $notification?.attr(\"class\");\n\n  if (classes) {\n    const classVal = classes\n      .split(/\\s+/)\n      .filter((cls: string) => cls.match(/^shiny-notification-/))\n      .join(\" \");\n\n    $notification.removeClass(classVal);\n  }\n\n  // Add class. 'default' means no additional CSS class.\n  if (type && type !== \"default\")\n    $notification.addClass(\"shiny-notification-\" + type);\n\n  // Make sure that the presence/absence of close button matches with value\n  // of `closeButton`.\n  const $close = $notification.find(\".shiny-notification-close\");\n\n  if (closeButton && $close.length === 0) {\n    $notification.append('<div class=\"shiny-notification-close\">&times;</div>');\n  } else if (!closeButton && $close.length !== 0) {\n    $close.remove();\n  }\n\n  // If duration was provided, schedule removal. If not, clear existing\n  // removal callback (this happens if a message was first added with\n  // a duration, and then updated with no duration).\n  if (duration) addRemovalCallback(id, duration);\n  else clearRemovalCallback(id);\n\n  return id;\n}\n\nfunction remove(id: string): void {\n  get(id)?.fadeOut(fadeDuration, function () {\n    shinyUnbindAll(this);\n    $(this).remove();\n\n    // If no more notifications, remove the panel from the DOM.\n    if (ids().length === 0) {\n      getPanel().remove();\n    }\n  });\n}\n\n// Returns an individual notification DOM object (wrapped in jQuery).\nfunction get(id: string | null | undefined) {\n  if (!id) return null;\n  return getPanel().find(\"#shiny-notification-\" + $escape(id));\n}\n\n// Return array of all notification IDs\nfunction ids() {\n  return getPanel()\n    .find(\".shiny-notification\")\n    .map(function () {\n      return this.id.replace(/shiny-notification-/, \"\");\n    })\n    .get();\n}\n\n// Returns the notification panel DOM object (wrapped in jQuery).\nfunction getPanel() {\n  return $(\"#shiny-notification-panel\");\n}\n\n// Create notifications panel and return the jQuery object. If the DOM\n// element already exists, just return it.\nfunction createPanel() {\n  const $panel = getPanel();\n\n  if ($panel.length > 0) return $panel;\n\n  $(document.body).append('<div id=\"shiny-notification-panel\">');\n\n  return $panel;\n}\n\n// Create a notification DOM element and return the jQuery object. If the\n// DOM element already exists for the ID, just return it without creating.\nfunction create(id: string): JQuery<HTMLElement> {\n  let $notification = get(id);\n\n  if ($notification?.length === 0) {\n    $notification = $(\n      `<div id=\"shiny-notification-${id}\" class=\"shiny-notification\">` +\n        '<div class=\"shiny-notification-close\">&times;</div>' +\n        '<div class=\"shiny-notification-content\"></div>' +\n        \"</div>\"\n    );\n\n    $notification.find(\".shiny-notification-close\").on(\"click\", (e) => {\n      e.preventDefault();\n      e.stopPropagation();\n      remove(id);\n    });\n\n    getPanel().append($notification);\n  }\n\n  return $notification as JQuery<HTMLElement>;\n}\n\n// Add a callback to remove a notification after a delay in ms.\nfunction addRemovalCallback(id: string, delay: number) {\n  // If there's an existing removalCallback, clear it before adding the new\n  // one.\n  clearRemovalCallback(id);\n\n  // Attach new removal callback\n  const removalCallback = setTimeout(function () {\n    remove(id);\n  }, delay);\n\n  get(id)?.data(\"removalCallback\", removalCallback);\n}\n\n// Clear a removal callback from a notification, if present.\nfunction clearRemovalCallback(id: string) {\n  const $notification = get(id);\n  const oldRemovalCallback: ReturnType<typeof setTimeout> =\n    $notification?.data(\"removalCallback\");\n\n  if (oldRemovalCallback) {\n    clearTimeout(oldRemovalCallback);\n  }\n}\n\nexport { show as showNotification, remove as removeNotification };\n", "import $ from \"jquery\";\nimport { shinyUnbindAll } from \"./initedMethods\";\nimport type { HtmlDep } from \"./render\";\nimport { renderContentAsync, renderDependenciesAsync } from \"./render\";\n\n// Show a modal dialog. This is meant to handle two types of cases: one is\n// that the content is a Bootstrap modal dialog, and the other is that the\n// content is non-Bootstrap. Bootstrap modals require some special handling,\n// which is coded in here.\nasync function show({\n  html = \"\",\n  deps = [],\n}: {\n  html?: string;\n  deps?: HtmlDep[];\n} = {}): Promise<void> {\n  // Normally we'd first create the modal's DOM elements, then call\n  // `renderContentAsync(x, {html: html, deps: deps})`, but that has a potential\n  // problem with async rendering. If we did that, then an empty modal (from\n  // this function) could show up and then sit there empty while the\n  // dependencies load (asynchronously), and only after all that get filled with\n  // content for the modal. So instead we'll render the deps here, then render\n  // the modal, then render the content in the modal.\n  await renderDependenciesAsync(deps);\n\n  // If there was an existing Bootstrap modal, then there will be a modal-\n  // backdrop div that was added outside of the modal wrapper, and it must be\n  // removed; otherwise there can be multiple of these divs.\n  $(\".modal-backdrop\").remove();\n\n  // Get existing wrapper DOM element, or create if needed.\n  let $modal = $(\"#shiny-modal-wrapper\");\n\n  if ($modal.length === 0) {\n    $modal = $('<div id=\"shiny-modal-wrapper\"></div>');\n    $(document.body).append($modal);\n\n    // If the wrapper's content is a Bootstrap modal, then when the inner\n    // modal is hidden, remove the entire thing, including wrapper.\n    $modal.on(\"hidden.bs.modal\", function (e) {\n      if (e.target === $(\"#shiny-modal\")[0]) {\n        shinyUnbindAll($modal);\n        $modal.remove();\n      }\n    });\n  }\n\n  $modal.on(\"keydown.shinymodal\", function (e) {\n    // If we're listening for Esc, don't let the event propagate. See\n    // https://github.com/rstudio/shiny/issues/1453. The value of\n    // data(\"keyboard\") needs to be checked inside the handler, because at\n    // the time that $modal.on() is called, the $(\"#shiny-modal\") div doesn't\n    // yet exist.\n    if ($(\"#shiny-modal\").data(\"keyboard\") === false) return;\n\n    if (e.keyCode === 27) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  });\n\n  // Set/replace contents of wrapper with html.\n  await renderContentAsync($modal, { html: html });\n}\n\nfunction remove(): void {\n  const $modal = $(\"#shiny-modal-wrapper\");\n\n  $modal.off(\"keydown.shinymodal\");\n\n  // Look for a Bootstrap modal and if present, trigger hide event. This will\n  // trigger the hidden.bs.modal callback that we set in show(), which unbinds\n  // and removes the element.\n  if ($modal.find(\".modal\").length > 0) {\n    $modal.find(\".modal\").modal(\"hide\");\n  } else {\n    // If not a Bootstrap modal dialog, simply unbind and remove it.\n    shinyUnbindAll($modal);\n    $modal.remove();\n  }\n}\n\nexport { show as showModal, remove as removeModal };\n", "import $ from \"jquery\";\n\nimport { showNotification, removeNotification } from \"./notifications\";\n\nfunction updateTime(reconnectTime: number): void {\n  const $time = $(\"#shiny-reconnect-time\");\n  // If the time has been removed, exit and don't reschedule this function.\n\n  if ($time.length === 0) return;\n\n  const seconds = Math.floor((reconnectTime - new Date().getTime()) / 1000);\n\n  if (seconds > 0) {\n    $time.text(\" in \" + seconds + \"s\");\n  } else {\n    $time.text(\"...\");\n  }\n\n  // Reschedule this function after 1 second\n  setTimeout(function () {\n    updateTime(reconnectTime);\n  }, 1000);\n}\n\nfunction showReconnectDialog(delay: number): void {\n  const reconnectTime = new Date().getTime() + delay;\n\n  // If there's already a reconnect dialog, don't add another\n  if ($(\"#shiny-reconnect-text\").length > 0) return;\n\n  const html =\n    '<span id=\"shiny-reconnect-text\">Attempting to reconnect</span>' +\n    '<span id=\"shiny-reconnect-time\"></span>';\n  const action =\n    '<a id=\"shiny-reconnect-now\" href=\"#\" onclick=\"Shiny.shinyapp.reconnect();\">Try now</a>';\n\n  showNotification({\n    id: \"reconnect\",\n    html: html,\n    action: action,\n    duration: null,\n    closeButton: false,\n    type: \"warning\",\n  });\n\n  updateTime(reconnectTime);\n}\n\nfunction hideReconnectDialog(): void {\n  removeNotification(\"reconnect\");\n}\n\nexport { showReconnectDialog, hideReconnectDialog };\n", "import $ from \"jquery\";\nimport type { Shiny } from \".\";\nimport {\n  InputBatchSender,\n  InputDeferDecorator,\n  InputEventDecorator,\n  InputNoResendDecorator,\n  InputRateDecorator,\n  InputValidateDecorator,\n} from \"../inputPolicies\";\nimport type { InputPolicy } from \"../inputPolicies\";\nimport { addDefaultInputOpts } from \"../inputPolicies/inputValidateDecorator\";\nimport { debounce, Debouncer } from \"../time\";\nimport {\n  getComputedLinkColor,\n  getStyle,\n  hasDefinedProperty,\n  mapValues,\n  pixelRatio,\n} from \"../utils\";\nimport { bindAll, unbindAll, _bindAll } from \"./bind\";\nimport type { BindInputsCtx, BindScope } from \"./bind\";\nimport { setShinyObj } from \"./initedMethods\";\nimport { registerDependency } from \"./render\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\nimport { ShinyApp } from \"./shinyapp\";\nimport { registerNames as singletonsRegisterNames } from \"./singletons\";\nimport type { InputPolicyOpts } from \"../inputPolicies/inputPolicy\";\n\n// \"init_shiny.js\"\nfunction initShiny(windowShiny: Shiny): void {\n  setShinyObj(windowShiny);\n  const shinyapp = (windowShiny.shinyapp = new ShinyApp());\n\n  windowShiny.progressHandlers = shinyapp.progressHandlers;\n\n  const inputBatchSender = new InputBatchSender(shinyapp);\n  const inputsNoResend = new InputNoResendDecorator(inputBatchSender);\n  const inputsEvent = new InputEventDecorator(inputsNoResend);\n  const inputsRate = new InputRateDecorator(inputsEvent);\n  const inputsDefer = new InputDeferDecorator(inputsEvent);\n\n  let target: InputPolicy;\n\n  if ($('input[type=\"submit\"], button[type=\"submit\"]').length > 0) {\n    // If there is a submit button on the page, use defer decorator\n    target = inputsDefer;\n\n    $('input[type=\"submit\"], button[type=\"submit\"]').each(function () {\n      $(this).click(function (event) {\n        event.preventDefault();\n        inputsDefer.submit();\n      });\n    });\n  } else {\n    // By default, use rate decorator\n    target = inputsRate;\n  }\n\n  const inputs = new InputValidateDecorator(target);\n\n  windowShiny.setInputValue = windowShiny.onInputChange = function (\n    name: string,\n    value: unknown,\n    opts: Partial<InputPolicyOpts> = {}\n  ): void {\n    const newOpts = addDefaultInputOpts(opts);\n\n    inputs.setInput(name, value, newOpts);\n  };\n\n  // By default, Shiny deduplicates input value changes; that is, if\n  // `setInputValue` is called with the same value as the input already\n  // has, the call is ignored (unless opts.priority = \"event\"). Calling\n  // `forgetLastInputValue` tells Shiny that the very next call to\n  // `setInputValue` for this input id shouldn't be ignored, even if it\n  // is a dupe of the existing value.\n  windowShiny.forgetLastInputValue = function (name) {\n    inputsNoResend.forget(name);\n  };\n\n  // MUST be called after `setShiny()`\n  const inputBindings = windowShiny.inputBindings;\n  const outputBindings = windowShiny.outputBindings;\n\n  function shinyBindCtx(): BindInputsCtx {\n    return {\n      inputs,\n      inputsRate,\n      sendOutputHiddenState,\n      maybeAddThemeObserver,\n      inputBindings,\n      outputBindings,\n      initDeferredIframes,\n    };\n  }\n\n  windowShiny.bindAll = function (scope: BindScope) {\n    bindAll(shinyBindCtx(), scope);\n  };\n  windowShiny.unbindAll = function (scope: BindScope, includeSelf = false) {\n    unbindAll(shinyBindCtx(), scope, includeSelf);\n  };\n\n  // Calls .initialize() for all of the input objects in all input bindings,\n  // in the given scope.\n  function initializeInputs(scope: BindScope = document.documentElement) {\n    const bindings = inputBindings.getBindings();\n\n    // Iterate over all bindings\n    for (let i = 0; i < bindings.length; i++) {\n      const binding = bindings[i].binding;\n      const inputObjects = binding.find(scope);\n\n      if (inputObjects) {\n        // Iterate over all input objects for this binding\n        for (let j = 0; j < inputObjects.length; j++) {\n          const $inputObjectJ = $(inputObjects[j]);\n\n          if (!$inputObjectJ.data(\"_shiny_initialized\")) {\n            $inputObjectJ.data(\"_shiny_initialized\", true);\n            binding.initialize(inputObjects[j]);\n          }\n        }\n      }\n    }\n  }\n  windowShiny.initializeInputs = initializeInputs;\n\n  function getIdFromEl(el: HTMLElement) {\n    const $el = $(el);\n    const bindingAdapter = $el.data(\"shiny-output-binding\");\n\n    if (!bindingAdapter) return null;\n    else return bindingAdapter.getId();\n  }\n\n  // Initialize all input objects in the document, before binding\n  initializeInputs(document.documentElement);\n\n  // The input values returned by _bindAll() each have a structure like this:\n  //   { value: 123, opts: { ... } }\n  // We want to only keep the value. This is because when the initialValues is\n  // passed to ShinyApp.connect(), the ShinyApp object stores the\n  // initialValues object for the duration of the session, and the opts may\n  // have a reference to the DOM element, which would prevent it from being\n  // GC'd.\n  const initialValues = mapValues(\n    _bindAll(shinyBindCtx(), document.documentElement),\n    (x) => x.value\n  );\n\n  // The server needs to know the size of each image and plot output element,\n  // in case it is auto-sizing\n  $(\".shiny-image-output, .shiny-plot-output, .shiny-report-size\").each(\n    function () {\n      const id = getIdFromEl(this),\n        rect = this.getBoundingClientRect();\n\n      if (rect.width !== 0 || rect.height !== 0) {\n        initialValues[\".clientdata_output_\" + id + \"_width\"] = rect.width;\n        initialValues[\".clientdata_output_\" + id + \"_height\"] = rect.height;\n      }\n    }\n  );\n\n  function getComputedBgColor(\n    el: HTMLElement | null\n  ): string | null | undefined {\n    if (!el) {\n      // Top of document, can't recurse further\n      return null;\n    }\n\n    const bgColor = getStyle(el, \"background-color\");\n\n    if (!bgColor) return bgColor;\n    const m = bgColor.match(\n      /^rgba\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*,\\s*([\\d.]+)\\s*\\)$/\n    );\n\n    if (bgColor === \"transparent\" || (m && parseFloat(m[4]) === 0)) {\n      // No background color on this element. See if it has a background image.\n      const bgImage = getStyle(el, \"background-image\");\n\n      if (bgImage && bgImage !== \"none\") {\n        // Failed to detect background color, since it has a background image\n        return null;\n      } else {\n        // Recurse\n        return getComputedBgColor(el.parentElement);\n      }\n    }\n    return bgColor;\n  }\n\n  function getComputedFont(el: HTMLElement) {\n    const fontFamily = getStyle(el, \"font-family\");\n    const fontSize = getStyle(el, \"font-size\");\n\n    return {\n      families: fontFamily?.replace(/\"/g, \"\").split(\", \"),\n      size: fontSize,\n    };\n  }\n\n  $(\".shiny-image-output, .shiny-plot-output, .shiny-report-theme\").each(\n    function () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      const el = this;\n      const id = getIdFromEl(el);\n\n      initialValues[\".clientdata_output_\" + id + \"_bg\"] =\n        getComputedBgColor(el);\n      initialValues[\".clientdata_output_\" + id + \"_fg\"] = getStyle(el, \"color\");\n      initialValues[\".clientdata_output_\" + id + \"_accent\"] =\n        getComputedLinkColor(el);\n      initialValues[\".clientdata_output_\" + id + \"_font\"] = getComputedFont(el);\n      maybeAddThemeObserver(el);\n    }\n  );\n\n  // Resend computed styles if *an output element's* class or style attribute changes.\n  // This gives us some level of confidence that getCurrentOutputInfo() will be\n  // properly invalidated if output container is mutated; but unfortunately,\n  // we don't have a reasonable way to detect change in *inherited* styles\n  // (other than session$setCurrentTheme())\n  // https://github.com/rstudio/shiny/issues/3196\n  // https://github.com/rstudio/shiny/issues/2998\n  function maybeAddThemeObserver(el: HTMLElement): void {\n    if (!window.MutationObserver) {\n      return; // IE10 and lower\n    }\n\n    const cl = el.classList;\n    const reportTheme =\n      cl.contains(\"shiny-image-output\") ||\n      cl.contains(\"shiny-plot-output\") ||\n      cl.contains(\"shiny-report-theme\");\n\n    if (!reportTheme) {\n      return;\n    }\n\n    const $el = $(el);\n\n    if ($el.data(\"shiny-theme-observer\")) {\n      return; // i.e., observer is already observing\n    }\n\n    const observerCallback = new Debouncer(null, () => doSendTheme(el), 100);\n    const observer = new MutationObserver(() => observerCallback.normalCall());\n    const config = { attributes: true, attributeFilter: [\"style\", \"class\"] };\n\n    observer.observe(el, config);\n    $el.data(\"shiny-theme-observer\", observer);\n  }\n\n  function doSendTheme(el: HTMLElement): void {\n    // Sending theme info on error isn't necessary (it'd add an unnecessary additional round-trip)\n    if (el.classList.contains(\"shiny-output-error\")) {\n      return;\n    }\n    const id = getIdFromEl(el);\n\n    inputs.setInput(\".clientdata_output_\" + id + \"_bg\", getComputedBgColor(el));\n    inputs.setInput(\".clientdata_output_\" + id + \"_fg\", getStyle(el, \"color\"));\n    inputs.setInput(\n      \".clientdata_output_\" + id + \"_accent\",\n      getComputedLinkColor(el)\n    );\n    inputs.setInput(\".clientdata_output_\" + id + \"_font\", getComputedFont(el));\n  }\n\n  function doSendImageSize() {\n    $(\".shiny-image-output, .shiny-plot-output, .shiny-report-size\").each(\n      function () {\n        const id = getIdFromEl(this),\n          rect = this.getBoundingClientRect();\n\n        if (rect.width !== 0 || rect.height !== 0) {\n          inputs.setInput(\".clientdata_output_\" + id + \"_width\", rect.width);\n          inputs.setInput(\".clientdata_output_\" + id + \"_height\", rect.height);\n        }\n      }\n    );\n\n    $(\".shiny-image-output, .shiny-plot-output, .shiny-report-theme\").each(\n      function () {\n        doSendTheme(this);\n      }\n    );\n\n    $(\".shiny-bound-output\").each(function () {\n      const $this = $(this),\n        binding = $this.data(\"shiny-output-binding\");\n\n      $this.trigger({\n        type: \"shiny:visualchange\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        visible: !isHidden(this),\n        binding: binding,\n      });\n      binding.onResize();\n    });\n  }\n\n  sendImageSizeFns.setImageSend(inputBatchSender, doSendImageSize);\n\n  // Return true if the object or one of its ancestors in the DOM tree has\n  // style='display:none'; otherwise return false.\n  function isHidden(obj: HTMLElement | null): boolean {\n    // null means we've hit the top of the tree. If width or height is\n    // non-zero, then we know that no ancestor has display:none.\n    if (obj === null || obj.offsetWidth !== 0 || obj.offsetHeight !== 0) {\n      return false;\n    } else if (getStyle(obj, \"display\") === \"none\") {\n      return true;\n    } else {\n      return isHidden(obj.parentNode as HTMLElement | null);\n    }\n  }\n  let lastKnownVisibleOutputs: { [key: string]: boolean } = {};\n  // Set initial state of outputs to hidden, if needed\n\n  $(\".shiny-bound-output\").each(function () {\n    const id = getIdFromEl(this);\n\n    if (isHidden(this)) {\n      initialValues[\".clientdata_output_\" + id + \"_hidden\"] = true;\n    } else {\n      lastKnownVisibleOutputs[id] = true;\n      initialValues[\".clientdata_output_\" + id + \"_hidden\"] = false;\n    }\n  });\n  // Send update when hidden state changes\n  function doSendOutputHiddenState() {\n    const visibleOutputs: { [key: string]: boolean } = {};\n\n    $(\".shiny-bound-output\").each(function () {\n      const id = getIdFromEl(this);\n\n      delete lastKnownVisibleOutputs[id];\n      // Assume that the object is hidden when width and height are 0\n      const hidden = isHidden(this),\n        evt = {\n          type: \"shiny:visualchange\",\n          visible: !hidden,\n        };\n\n      if (hidden) {\n        inputs.setInput(\".clientdata_output_\" + id + \"_hidden\", true);\n      } else {\n        visibleOutputs[id] = true;\n        inputs.setInput(\".clientdata_output_\" + id + \"_hidden\", false);\n      }\n      const $this = $(this);\n\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      evt.binding = $this.data(\"shiny-output-binding\");\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      $this.trigger(evt);\n    });\n    // Anything left in lastKnownVisibleOutputs is orphaned\n    for (const name in lastKnownVisibleOutputs) {\n      if (hasDefinedProperty(lastKnownVisibleOutputs, name))\n        inputs.setInput(\".clientdata_output_\" + name + \"_hidden\", true);\n    }\n    // Update the visible outputs for next time\n    lastKnownVisibleOutputs = visibleOutputs;\n  }\n  // sendOutputHiddenState gets called each time DOM elements are shown or\n  // hidden. This can be in the hundreds or thousands of times at startup.\n  // We'll debounce it, so that we do the actual work once per tick.\n  const sendOutputHiddenStateDebouncer = new Debouncer(\n    null,\n    doSendOutputHiddenState,\n    0\n  );\n\n  function sendOutputHiddenState() {\n    sendOutputHiddenStateDebouncer.normalCall();\n  }\n  // We need to make sure doSendOutputHiddenState actually gets called before\n  // the inputBatchSender sends data to the server. The lastChanceCallback\n  // here does that - if the debouncer has a pending call, flush it.\n  inputBatchSender.lastChanceCallback.push(function () {\n    if (sendOutputHiddenStateDebouncer.isPending())\n      sendOutputHiddenStateDebouncer.immediateCall();\n  });\n\n  // Given a namespace and a handler function, return a function that invokes\n  // the handler only when e's namespace matches. For example, if the\n  // namespace is \"bs\", it would match when e.namespace is \"bs\" or \"bs.tab\".\n  // If the namespace is \"bs.tab\", it would match for \"bs.tab\", but not \"bs\".\n  function filterEventsByNamespace(\n    namespace: string,\n    handler: (...handlerArgs: any[]) => void,\n    ...args: any[]\n  ) {\n    const namespaceArr = namespace.split(\".\");\n\n    return function (this: HTMLElement, e: JQuery.TriggeredEvent) {\n      const eventNamespace = e.namespace?.split(\".\") ?? [];\n\n      // If any of the namespace strings aren't present in this event, quit.\n      for (let i = 0; i < namespaceArr.length; i++) {\n        if (eventNamespace.indexOf(namespaceArr[i]) === -1) return;\n      }\n\n      handler.apply(this, [namespaceArr, handler, ...args]);\n    };\n  }\n\n  // The size of each image may change either because the browser window was\n  // resized, or because a tab was shown/hidden (hidden elements report size\n  // of 0x0). It's OK to over-report sizes because the input pipeline will\n  // filter out values that haven't changed.\n  $(window).resize(debounce(500, sendImageSizeFns.regular));\n  // Need to register callbacks for each Bootstrap 3 class.\n  const bs3classes = [\n    \"modal\",\n    \"dropdown\",\n    \"tab\",\n    \"tooltip\",\n    \"popover\",\n    \"collapse\",\n  ];\n\n  $.each(bs3classes, function (idx, classname) {\n    $(document.body).on(\n      \"shown.bs.\" + classname + \".sendImageSize\",\n      \"*\",\n      filterEventsByNamespace(\"bs\", sendImageSizeFns.regular)\n    );\n    $(document.body).on(\n      \"shown.bs.\" +\n        classname +\n        \".sendOutputHiddenState \" +\n        \"hidden.bs.\" +\n        classname +\n        \".sendOutputHiddenState\",\n      \"*\",\n      filterEventsByNamespace(\"bs\", sendOutputHiddenState)\n    );\n  });\n\n  // This is needed for Bootstrap 2 compatibility and for non-Bootstrap\n  // related shown/hidden events (like conditionalPanel)\n  $(document.body).on(\"shown.sendImageSize\", \"*\", sendImageSizeFns.regular);\n  $(document.body).on(\n    \"shown.sendOutputHiddenState hidden.sendOutputHiddenState\",\n    \"*\",\n    sendOutputHiddenState\n  );\n\n  // Send initial pixel ratio, and update it if it changes\n  initialValues[\".clientdata_pixelratio\"] = pixelRatio();\n  $(window).resize(function () {\n    inputs.setInput(\".clientdata_pixelratio\", pixelRatio());\n  });\n\n  // Send initial URL\n  initialValues[\".clientdata_url_protocol\"] = window.location.protocol;\n  initialValues[\".clientdata_url_hostname\"] = window.location.hostname;\n  initialValues[\".clientdata_url_port\"] = window.location.port;\n  initialValues[\".clientdata_url_pathname\"] = window.location.pathname;\n\n  // Send initial URL search (query string) and update it if it changes\n  initialValues[\".clientdata_url_search\"] = window.location.search;\n\n  $(window).on(\"pushstate\", function (e) {\n    inputs.setInput(\".clientdata_url_search\", window.location.search);\n    return;\n    e;\n  });\n\n  $(window).on(\"popstate\", function (e) {\n    inputs.setInput(\".clientdata_url_search\", window.location.search);\n    return;\n    e;\n  });\n\n  // This is only the initial value of the hash. The hash can change, but\n  // a reactive version of this isn't sent because watching for changes can\n  // require polling on some browsers. The JQuery hashchange plugin can be\n  // used if this capability is important.\n  initialValues[\".clientdata_url_hash_initial\"] = window.location.hash;\n  initialValues[\".clientdata_url_hash\"] = window.location.hash;\n\n  $(window).on(\"hashchange\", function (e) {\n    inputs.setInput(\".clientdata_url_hash\", window.location.hash);\n    return;\n    e;\n  });\n\n  // The server needs to know what singletons were rendered as part of\n  // the page loading\n  const singletonText = (initialValues[\".clientdata_singletons\"] = $(\n    'script[type=\"application/shiny-singletons\"]'\n  ).text());\n\n  singletonsRegisterNames(singletonText.split(/,/));\n\n  const dependencyText = $(\n    'script[type=\"application/html-dependencies\"]'\n  ).text();\n\n  $.each(dependencyText.split(/;/), function (i, depStr) {\n    const match = /\\s*^(.+)\\[(.+)\\]\\s*$/.exec(depStr);\n\n    if (match) {\n      registerDependency(match[1], match[2]);\n    }\n  });\n\n  // We've collected all the initial values--start the server process!\n  inputsNoResend.reset(initialValues);\n  shinyapp.connect(initialValues);\n  $(document).one(\"shiny:connected\", function () {\n    initDeferredIframes();\n  });\n\n  // window.console.log(\"Shiny version: \", windowShiny.version);\n} // function initShiny()\n\n// Give any deferred iframes a chance to load.\nfunction initDeferredIframes(): void {\n  // TODO-barret; This method uses `window.Shiny`. Could be replaced with `fullShinyObj_.shinyapp?.isConnected()`,\n  // but that would not use `window.Shiny`. Is it a problem???\n  if (\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny ||\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny.shinyapp ||\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore; Do not want to define `window.Shiny` as a type to discourage usage of `window.Shiny`;\n    // Can not expect error when combining with window available Shiny definition\n    !window.Shiny.shinyapp.isConnected()\n  ) {\n    // If somehow we accidentally call this before the server connection is\n    // established, just ignore the call. At the time of this writing it\n    // doesn't happen, but it's easy to imagine a later refactoring putting\n    // us in this situation and it'd be hard to notice with either manual\n    // testing or automated tests, because the only effect is on HTTP request\n    // timing. (Update: Actually Aron saw this being called without even\n    // window.Shiny being defined, but it was hard to repro.)\n    return;\n  }\n\n  $(\".shiny-frame-deferred\").each(function (i, el) {\n    const $el = $(el);\n\n    $el.removeClass(\"shiny-frame-deferred\");\n    // @ts-expect-error; If it is undefined, set using the undefined value\n    $el.attr(\"src\", $el.attr(\"data-deferred-src\"));\n    $el.attr(\"data-deferred-src\", null);\n  });\n}\n\nexport { initShiny };\n", "import type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport type { ShinyApp } from \"../shiny/shinyapp\";\n\n// Schedules data to be sent to shinyapp at the next setTimeout(0).\n// Batches multiple input calls into one websocket message.\nclass InputBatchSender implements InputPolicy {\n  target!: InputPolicy; // We need this field to satisfy the InputPolicy interface\n  shinyapp: ShinyApp;\n  pendingData: { [key: string]: unknown } = {};\n  reentrant = false;\n  sendIsEnqueued = false;\n  lastChanceCallback: Array<() => void> = [];\n\n  constructor(shinyapp: ShinyApp) {\n    this.shinyapp = shinyapp;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    this.pendingData[nameType] = value;\n\n    if (!this.reentrant) {\n      if (opts.priority === \"event\") {\n        this._sendNow();\n      } else if (!this.sendIsEnqueued) {\n        this.shinyapp.taskQueue.enqueue(() => {\n          this.sendIsEnqueued = false;\n          this._sendNow();\n        });\n      }\n    }\n  }\n\n  private _sendNow(): void {\n    if (this.reentrant) {\n      console.trace(\"Unexpected reentrancy in InputBatchSender!\");\n    }\n\n    this.reentrant = true;\n    try {\n      this.lastChanceCallback.forEach((callback) => callback());\n      const currentData = this.pendingData;\n\n      this.pendingData = {};\n      this.shinyapp.sendInput(currentData);\n    } finally {\n      this.reentrant = false;\n    }\n  }\n}\n\nexport { InputBatchSender };\n", "function splitInputNameType(nameType: string): {\n  name: string;\n  inputType: string | \"\";\n} {\n  const name2 = nameType.split(\":\");\n\n  return {\n    name: name2[0],\n    inputType: name2.length > 1 ? name2[1] : \"\",\n  };\n}\n\nexport { splitInputNameType };\n", "import type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport { hasDefinedProperty } from \"../utils\";\nimport { splitInputNameType } from \"./splitInputNameType\";\n\ntype LastSentValues = { [key: string]: { [key: string]: string } };\n\nclass InputNoResendDecorator implements InputPolicy {\n  target: InputPolicy;\n  lastSentValues: LastSentValues = {};\n\n  constructor(target: InputPolicy, initialValues: LastSentValues = {}) {\n    this.target = target;\n    this.reset(initialValues);\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const { name: inputName, inputType: inputType } =\n      splitInputNameType(nameType);\n    const jsonValue = JSON.stringify(value);\n\n    if (\n      opts.priority !== \"event\" &&\n      this.lastSentValues[inputName] &&\n      this.lastSentValues[inputName].jsonValue === jsonValue &&\n      this.lastSentValues[inputName].inputType === inputType\n    ) {\n      return;\n    }\n    this.lastSentValues[inputName] = { jsonValue, inputType };\n    this.target.setInput(nameType, value, opts);\n  }\n  reset(values: LastSentValues = {}): void {\n    // Given an object with flat name-value format:\n    //   { x: \"abc\", \"y.shiny.number\": 123 }\n    // Create an object in cache format and save it:\n    //   { x: { jsonValue: '\"abc\"', inputType: \"\" },\n    //     y: { jsonValue: \"123\", inputType: \"shiny.number\" } }\n    const cacheValues: {\n      [key: string]: { jsonValue: string; inputType: string };\n    } = {};\n\n    for (const inputName in values) {\n      if (hasDefinedProperty(values, inputName)) {\n        const { name, inputType } = splitInputNameType(inputName);\n\n        cacheValues[name] = {\n          jsonValue: JSON.stringify(values[inputName]),\n          inputType: inputType,\n        };\n      }\n    }\n\n    this.lastSentValues = cacheValues;\n  }\n  forget(name: string): void {\n    delete this.lastSentValues[name];\n  }\n}\n\nexport { InputNoResendDecorator };\n", "import $ from \"jquery\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport type { ShinyEventInputChanged } from \"../events/shinyEvents\";\nimport { splitInputNameType } from \"./splitInputNameType\";\n\nclass InputEventDecorator implements InputPolicy {\n  target: InputPolicy;\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const evt = $.Event(\"shiny:inputchanged\") as ShinyEventInputChanged;\n\n    const input = splitInputNameType(nameType);\n\n    evt.name = input.name;\n    evt.inputType = input.inputType;\n    evt.value = value;\n    evt.binding = opts.binding || null;\n    evt.el = opts.el || null;\n    evt.priority = opts.priority;\n\n    // The `shiny:inputchanged` JavaScript event now triggers on the related\n    // input element instead of `document`. Existing event listeners bound to\n    // `document` will still detect the event due to event bubbling. #2446\n    // If no `el` exists, use `document` instead. #3584\n    $(opts.el || window.document).trigger(evt);\n\n    if (!evt.isDefaultPrevented()) {\n      let name = evt.name;\n\n      if (evt.inputType !== \"\") name += \":\" + evt.inputType;\n\n      // Most opts aren't passed along to lower levels in the input decorator\n      // stack.\n      this.target.setInput(name, evt.value, { priority: opts.priority });\n    }\n  }\n}\n\nexport { InputEventDecorator };\n", "import type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport { Debouncer, Invoker, Throttler } from \"../time\";\nimport { splitInputNameType } from \"./splitInputNameType\";\nimport type { InputRatePolicy } from \"./inputRatePolicy\";\n\ntype RatePolicyModes = \"debounce\" | \"direct\" | \"throttle\";\n\nclass InputRateDecorator implements InputPolicy {\n  target: InputPolicy;\n  inputRatePolicies: {\n    [key: string]: InputRatePolicy<InputRateDecorator[\"_doSetInput\"]>;\n  } = {};\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  // Note that the first argument of setInput() and setRatePolicy()\n  // are passed both the input name (i.e., inputId) and type.\n  // https://github.com/rstudio/shiny/blob/67d3a/srcjs/init_shiny.js#L111-L126\n  // However, $ensureInit() and $doSetInput() are meant to be passed just\n  // the input name (i.e., inputId), which is why we distinguish between\n  // nameType and name.\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    const { name: inputName } = splitInputNameType(nameType);\n\n    this._ensureInit(inputName);\n\n    if (opts.priority !== \"deferred\")\n      this.inputRatePolicies[inputName].immediateCall(nameType, value, opts);\n    else this.inputRatePolicies[inputName].normalCall(nameType, value, opts);\n  }\n  setRatePolicy(\n    nameType: string,\n    mode: RatePolicyModes,\n    millis?: number\n  ): void {\n    const { name: inputName } = splitInputNameType(nameType);\n\n    if (mode === \"direct\") {\n      this.inputRatePolicies[inputName] = new Invoker(this, this._doSetInput);\n    } else if (mode === \"debounce\") {\n      this.inputRatePolicies[inputName] = new Debouncer(\n        this,\n        this._doSetInput,\n        millis\n      );\n    } else if (mode === \"throttle\") {\n      this.inputRatePolicies[inputName] = new Throttler(\n        this,\n        this._doSetInput,\n        millis\n      );\n    }\n  }\n  private _ensureInit(name: string): void {\n    if (!(name in this.inputRatePolicies)) this.setRatePolicy(name, \"direct\");\n  }\n  private _doSetInput(\n    nameType: string,\n    value: unknown,\n    opts: InputPolicyOpts\n  ): void {\n    this.target.setInput(nameType, value, opts);\n  }\n}\n\nexport { InputRateDecorator };\n\nexport type { RatePolicyModes };\n", "import type { EventPriority } from \"./inputPolicy\";\nimport type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\nimport { hasDefinedProperty } from \"../utils\";\n\nclass InputDeferDecorator implements InputPolicy {\n  pendingInput: {\n    [key: string]: { value: unknown; opts: { priority: EventPriority } };\n  } = {};\n  target: InputPolicy;\n\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(nameType: string, value: unknown, opts: InputPolicyOpts): void {\n    if (/^\\./.test(nameType)) this.target.setInput(nameType, value, opts);\n    else this.pendingInput[nameType] = { value, opts };\n  }\n  submit(): void {\n    for (const nameType in this.pendingInput) {\n      if (hasDefinedProperty(this.pendingInput, nameType)) {\n        const { value, opts } = this.pendingInput[nameType];\n\n        this.target.setInput(nameType, value, opts);\n      }\n    }\n  }\n}\n\nexport { InputDeferDecorator };\n", "import type { InputPolicy, InputPolicyOpts } from \"./inputPolicy\";\n\n// Merge opts with defaults, and return a new object.\nfunction addDefaultInputOpts(opts: Partial<InputPolicyOpts>): InputPolicyOpts {\n  const newOpts: InputPolicyOpts = {\n    priority: \"immediate\",\n    ...opts,\n  };\n\n  switch (newOpts.priority) {\n    case \"deferred\":\n    case \"immediate\":\n    case \"event\":\n      break;\n    default:\n      throw new Error(\n        \"Unexpected input value mode: '\" + newOpts.priority + \"'\"\n      );\n  }\n\n  return newOpts;\n}\n\nclass InputValidateDecorator implements InputPolicy {\n  target: InputPolicy;\n  constructor(target: InputPolicy) {\n    this.target = target;\n  }\n\n  setInput(\n    nameType: string,\n    value: unknown,\n    opts: Partial<InputPolicyOpts> = {}\n  ): void {\n    if (!nameType) throw \"Can't set input with empty name.\";\n\n    const newOpts = addDefaultInputOpts(opts);\n\n    this.target.setInput(nameType, value, newOpts);\n  }\n}\n\nexport { InputValidateDecorator, addDefaultInputOpts };\n", "import $ from \"jquery\";\nimport type { InputBinding, OutputBinding } from \"../bindings\";\nimport { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport type { BindingRegistry } from \"../bindings/registry\";\nimport type {\n  InputRateDecorator,\n  InputValidateDecorator,\n} from \"../inputPolicies\";\nimport { shinyAppBindOutput, shinyAppUnbindOutput } from \"./initedMethods\";\nimport { sendImageSizeFns } from \"./sendImageSize\";\n\nconst boundInputs: {\n  [key: string]: { binding: InputBinding; node: HTMLElement };\n} = {};\n\ntype BindScope = HTMLElement | JQuery<HTMLElement>;\n\n// todo make sure allowDeferred can NOT be supplied and still work\nfunction valueChangeCallback(\n  inputs: InputValidateDecorator,\n  binding: InputBinding,\n  el: HTMLElement,\n  allowDeferred: boolean\n) {\n  let id = binding.getId(el);\n\n  if (id) {\n    const value = binding.getValue(el);\n    const type = binding.getType(el);\n\n    if (type) id = id + \":\" + type;\n\n    const opts: {\n      priority: \"deferred\" | \"immediate\";\n      binding: typeof binding;\n      el: typeof el;\n    } = {\n      priority: allowDeferred ? \"deferred\" : \"immediate\",\n      binding: binding,\n      el: el,\n    };\n\n    inputs.setInput(id, value, opts);\n  }\n}\n\ntype BindInputsCtx = {\n  inputs: InputValidateDecorator;\n  inputsRate: InputRateDecorator;\n  inputBindings: BindingRegistry<InputBinding>;\n  outputBindings: BindingRegistry<OutputBinding>;\n  sendOutputHiddenState: () => void;\n  maybeAddThemeObserver: (el: HTMLElement) => void;\n  initDeferredIframes: () => void;\n};\nfunction bindInputs(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope = document.documentElement\n): {\n  [key: string]: {\n    value: ReturnType<InputBinding[\"getValue\"]>;\n    opts: { immediate: boolean; binding: InputBinding; el: HTMLElement };\n  };\n} {\n  const { inputs, inputsRate, inputBindings } = shinyCtx;\n  const bindings = inputBindings.getBindings();\n\n  const inputItems: {\n    [key: string]: {\n      value: any;\n      opts: {\n        immediate: true;\n        binding: InputBinding;\n        el: HTMLElement;\n      };\n    };\n  } = {};\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i].binding;\n    const matches = binding.find(scope) || [];\n\n    for (let j = 0; j < matches.length; j++) {\n      const el = matches[j];\n      if (el.hasAttribute(\"data-shiny-no-bind-input\")) continue;\n      const id = binding.getId(el);\n\n      // Check if ID is falsy, or if already bound\n      if (!id || boundInputs[id]) continue;\n\n      const type = binding.getType(el);\n      const effectiveId = type ? id + \":\" + type : id;\n\n      inputItems[effectiveId] = {\n        value: binding.getValue(el),\n        opts: {\n          immediate: true,\n          binding: binding,\n          el: el,\n        },\n      };\n\n      /*jshint loopfunc:true*/\n      const thisCallback = (function () {\n        const thisBinding = binding;\n        const thisEl = el;\n\n        return function (allowDeferred: boolean) {\n          valueChangeCallback(inputs, thisBinding, thisEl, allowDeferred);\n        };\n      })();\n\n      binding.subscribe(el, thisCallback);\n      $(el).data(\"shiny-input-binding\", binding);\n      $(el).addClass(\"shiny-bound-input\");\n      const ratePolicy = binding.getRatePolicy(el);\n\n      if (ratePolicy !== null) {\n        inputsRate.setRatePolicy(\n          effectiveId,\n          ratePolicy.policy,\n          ratePolicy.delay\n        );\n      }\n\n      boundInputs[id] = {\n        binding: binding,\n        node: el,\n      };\n\n      $(el).trigger({\n        type: \"shiny:bound\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        binding: binding,\n        bindingType: \"input\",\n      });\n    }\n  }\n\n  return inputItems;\n}\n\nfunction bindOutputs(\n  {\n    sendOutputHiddenState,\n    maybeAddThemeObserver,\n    outputBindings,\n  }: BindInputsCtx,\n  scope: BindScope = document.documentElement\n): void {\n  const $scope = $(scope);\n\n  const bindings = outputBindings.getBindings();\n\n  for (let i = 0; i < bindings.length; i++) {\n    const binding = bindings[i].binding;\n    const matches = binding.find($scope) || [];\n\n    for (let j = 0; j < matches.length; j++) {\n      const el = matches[j];\n      const id = binding.getId(el);\n\n      // Check if ID is falsy\n      if (!id) continue;\n\n      // In some uncommon cases, elements that are later in the\n      // matches array can be removed from the document by earlier\n      // iterations. See https://github.com/rstudio/shiny/issues/1399\n      if (!$.contains(document.documentElement, el)) continue;\n\n      const $el = $(el);\n\n      if ($el.hasClass(\"shiny-bound-output\")) {\n        // Already bound; can happen with nested uiOutput (bindAll\n        // gets called on two ancestors)\n        continue;\n      }\n\n      // If this element reports its CSS styles to getCurrentOutputInfo()\n      // then it should have a MutationObserver() to resend CSS if its\n      // style/class attributes change. This observer should already exist\n      // for _static_ UI, but not yet for _dynamic_ UI\n      maybeAddThemeObserver(el);\n\n      const bindingAdapter = new OutputBindingAdapter(el, binding);\n\n      shinyAppBindOutput(id, bindingAdapter);\n      $el.data(\"shiny-output-binding\", bindingAdapter);\n      $el.addClass(\"shiny-bound-output\");\n      if (!$el.attr(\"aria-live\")) $el.attr(\"aria-live\", \"polite\");\n      $el.trigger({\n        type: \"shiny:bound\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        binding: binding,\n        bindingType: \"output\",\n      });\n    }\n  }\n\n  // Send later in case DOM layout isn't final yet.\n  setTimeout(sendImageSizeFns.regular, 0);\n  setTimeout(sendOutputHiddenState, 0);\n}\n\nfunction unbindInputs(\n  scope: BindScope = document.documentElement,\n  includeSelf = false\n) {\n  const inputs: Array<HTMLElement | JQuery<HTMLElement>> = $(scope)\n    .find(\".shiny-bound-input\")\n    .toArray();\n\n  if (includeSelf && $(scope).hasClass(\"shiny-bound-input\")) {\n    inputs.push(scope);\n  }\n\n  for (let i = 0; i < inputs.length; i++) {\n    const el = inputs[i];\n    const binding = $(el).data(\"shiny-input-binding\");\n\n    if (!binding) continue;\n    const id = binding.getId(el);\n\n    $(el).removeClass(\"shiny-bound-input\");\n    delete boundInputs[id];\n    binding.unsubscribe(el);\n    $(el).trigger({\n      type: \"shiny:unbound\",\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      binding: binding,\n      bindingType: \"input\",\n    });\n  }\n}\nfunction unbindOutputs(\n  { sendOutputHiddenState }: BindInputsCtx,\n  scope: BindScope = document.documentElement,\n  includeSelf = false\n) {\n  const outputs: Array<HTMLElement | JQuery<HTMLElement>> = $(scope)\n    .find(\".shiny-bound-output\")\n    .toArray();\n\n  if (includeSelf && $(scope).hasClass(\"shiny-bound-output\")) {\n    outputs.push(scope);\n  }\n\n  for (let i = 0; i < outputs.length; i++) {\n    const $el = $(outputs[i]);\n    const bindingAdapter = $el.data(\"shiny-output-binding\");\n\n    if (!bindingAdapter) continue;\n    const id = bindingAdapter.binding.getId(outputs[i]);\n\n    shinyAppUnbindOutput(id, bindingAdapter);\n    $el.removeClass(\"shiny-bound-output\");\n    $el.removeData(\"shiny-output-binding\");\n    $el.trigger({\n      type: \"shiny:unbound\",\n      // @ts-expect-error; Can not remove info on a established, malformed Event object\n      binding: bindingAdapter.binding,\n      bindingType: \"output\",\n    });\n  }\n\n  // Send later in case DOM layout isn't final yet.\n  setTimeout(sendImageSizeFns.regular, 0);\n  setTimeout(sendOutputHiddenState, 0);\n}\n\n// (Named used before TS conversion)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nfunction _bindAll(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope\n): ReturnType<typeof bindInputs> {\n  bindOutputs(shinyCtx, scope);\n  return bindInputs(shinyCtx, scope);\n}\nfunction unbindAll(\n  shinyCtx: BindInputsCtx,\n  scope: BindScope,\n  includeSelf = false\n): void {\n  unbindInputs(scope, includeSelf);\n  unbindOutputs(shinyCtx, scope, includeSelf);\n}\nfunction bindAll(shinyCtx: BindInputsCtx, scope: BindScope): void {\n  // _bindAll returns input values; it doesn't send them to the server.\n  // Shiny.bindAll needs to send the values to the server.\n  const currentInputItems = _bindAll(shinyCtx, scope);\n\n  const inputs = shinyCtx.inputs;\n\n  $.each(currentInputItems, function (name: string, item) {\n    inputs.setInput(name, item.value, item.opts);\n  });\n\n  // Not sure if the iframe stuff is an intrinsic part of bindAll, but bindAll\n  // is a convenient place to hang it. bindAll will be called anytime new HTML\n  // appears that might contain inputs/outputs; it's reasonable to assume that\n  // any such HTML may contain iframes as well.\n  shinyCtx.initDeferredIframes();\n}\n\nexport { unbindAll, bindAll, _bindAll };\n\nexport type { BindScope, BindInputsCtx };\n", "import type { ErrorsMessageValue } from \"../shiny/shinyapp\";\nimport { makeResizeFilter } from \"../utils\";\nimport type { OutputBinding } from \"./output\";\n\ninterface OutpuBindingWithResize extends OutputBinding {\n  resize?: (\n    el: HTMLElement,\n    width: number | string,\n    height: number | string\n  ) => void;\n}\n\nclass OutputBindingAdapter {\n  el: HTMLElement;\n  binding: OutputBinding;\n\n  constructor(el: HTMLElement, binding: OutpuBindingWithResize) {\n    this.el = el;\n    this.binding = binding;\n\n    // If the binding actually has a resize method, override the prototype of\n    // onResize with a version that does a makeResizeFilter on the element.\n    if (binding.resize) {\n      this.onResize = makeResizeFilter(el, function (width, height) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        binding.resize!(el, width, height);\n      });\n    }\n  }\n\n  getId(): string {\n    return this.binding.getId(this.el);\n  }\n  async onValueChange(data: unknown): Promise<void> {\n    await this.binding.onValueChange(this.el, data);\n  }\n  onValueError(err: ErrorsMessageValue): void {\n    this.binding.onValueError(this.el, err);\n  }\n  showProgress(show: boolean): void {\n    this.binding.showProgress(this.el, show);\n  }\n  onResize(): void {\n    // Intentionally left blank; see constructor\n  }\n}\n\nexport { OutputBindingAdapter };\n", "import $ from \"jquery\";\nimport { $escape, hasOwnProperty, randomId, scopeExprToFunc } from \"../utils\";\nimport {\n  getShinyCreateWebsocket,\n  getShinyOnCustomMessage,\n  setShinyUser,\n  shinyForgetLastInputValue,\n  shinyUnbindAll,\n} from \"./initedMethods\";\nimport { isQt } from \"../utils/browser\";\nimport { showNotification, removeNotification } from \"./notifications\";\nimport { showModal, removeModal } from \"./modal\";\nimport { renderContentAsync, renderHtmlAsync } from \"./render\";\nimport type { HtmlDep } from \"./render\";\nimport { hideReconnectDialog, showReconnectDialog } from \"./reconnectDialog\";\nimport { resetBrush } from \"../imageutils/resetBrush\";\nimport type { OutputBindingAdapter } from \"../bindings/outputAdapter\";\nimport type {\n  ShinyEventError,\n  ShinyEventMessage,\n  ShinyEventValue,\n  ShinyEventUpdateInput,\n} from \"../events/shinyEvents\";\nimport type { InputBinding } from \"../bindings\";\nimport { indirectEval } from \"../utils/eval\";\nimport type { WherePosition } from \"./singletons\";\nimport type { UploadInitValue, UploadEndValue } from \"../file/fileProcessor\";\nimport { AsyncQueue } from \"../utils/asyncQueue\";\n\ntype ResponseValue = UploadEndValue | UploadInitValue;\ntype Handler = (message: any) => Promise<void> | void;\n\ntype ShinyWebSocket = WebSocket & {\n  allowReconnect?: boolean;\n};\n\ntype ErrorsMessageValue = {\n  message: string;\n  call: string[];\n  type?: string[];\n};\n\ntype OnSuccessRequest = (value: ResponseValue) => void;\ntype OnErrorRequest = (err: string) => void;\ntype InputValues = { [key: string]: unknown };\n\ntype MessageValue = Parameters<WebSocket[\"send\"]>[0];\n\n//// 2021/03 - TypeScript conversion note:\n// These four variables were moved from being internally defined to being defined globally within the file.\n// Before the TypeScript conversion, the values where attached to `window.Shiny.addCustomMessageHandler()`.\n// This prevents multiple instances of `ShinyApp` from existing independently. :-/\n// This behavior is also exhibited on `Shiny.progressHandlers`, however there are no instances of use on GitHub. So moving the assignment to within `initShiny()`.\n\n// Records insertion order of handlers. Maps number to name. This is so\n// we can dispatch messages to handlers in the order that handlers were\n// added.\nconst messageHandlerOrder: string[] = [];\n// Keep track of handlers by name. Maps name to handler function.\nconst messageHandlers: { [key: string]: Handler } = {};\n\n// Two categories of message handlers: those that are from Shiny, and those\n// that are added by the user. The Shiny ones handle messages in\n// msgObj.values, msgObj.errors, and so on. The user ones handle messages\n// in msgObj.custom.foo and msgObj.custom.bar.\nconst customMessageHandlerOrder: string[] = [];\nconst customMessageHandlers: { [key: string]: Handler } = {};\n\n// Adds Shiny (internal) message handler\nfunction addMessageHandler(type: string, handler: Handler) {\n  if (messageHandlers[type]) {\n    throw 'handler for message of type \"' + type + '\" already added.';\n  }\n  if (typeof handler !== \"function\") {\n    throw \"handler must be a function.\";\n  }\n  if (handler.length !== 1) {\n    throw \"handler must be a function that takes one argument.\";\n  }\n  messageHandlerOrder.push(type);\n  messageHandlers[type] = handler;\n}\n\n// Adds custom message handler - this one is exposed to the user\nfunction addCustomMessageHandler(type: string, handler: Handler): void {\n  // Remove any previously defined handlers so that only the most recent one\n  // will be called\n  if (customMessageHandlers[type]) {\n    const typeIdx = customMessageHandlerOrder.indexOf(type);\n\n    if (typeIdx !== -1) {\n      customMessageHandlerOrder.splice(typeIdx, 1);\n      delete customMessageHandlers[type];\n    }\n  }\n  if (typeof handler !== \"function\") {\n    throw \"handler must be a function.\";\n  }\n  if (handler.length !== 1) {\n    throw \"handler must be a function that takes one argument.\";\n  }\n\n  customMessageHandlerOrder.push(type);\n  customMessageHandlers[type] = handler;\n}\n\n//// End message handler variables\n\nclass ShinyApp {\n  $socket: ShinyWebSocket | null = null;\n\n  // An asynchronous queue of functions. This is sort of like an event loop for\n  // Shiny, to allow scheduling async callbacks so that they can run in order\n  // without overlapping. This is used for handling incoming messages from the\n  // server and scheduling outgoing messages to the server, and can be used for\n  // other things tasks as well.\n  taskQueue = new AsyncQueue<() => Promise<void> | void>();\n\n  config: {\n    workerId: string;\n    sessionId: string;\n  } | null = null;\n\n  // Cached input values\n  $inputValues: InputValues = {};\n\n  // Input values at initialization (and reconnect)\n  $initialInput: InputValues | null = null;\n\n  // Output bindings\n  $bindings: { [key: string]: OutputBindingAdapter } = {};\n\n  // Cached values/errors\n  $values: { [key: string]: any } = {};\n  $errors: { [key: string]: ErrorsMessageValue } = {};\n\n  // Conditional bindings (show/hide element based on expression)\n  $conditionals = {};\n\n  $pendingMessages: MessageValue[] = [];\n  $activeRequests: {\n    [key: number]: { onSuccess: OnSuccessRequest; onError: OnErrorRequest };\n  } = {};\n  $nextRequestId = 0;\n\n  $allowReconnect: boolean | \"force\" = false;\n\n  constructor() {\n    this._init();\n  }\n\n  connect(initialInput: InputValues): void {\n    if (this.$socket)\n      throw \"Connect was already called on this application object\";\n\n    this.$socket = this.createSocket();\n    this.$initialInput = initialInput;\n    $.extend(this.$inputValues, initialInput);\n\n    this.$updateConditionals();\n  }\n\n  isConnected(): boolean {\n    return !!this.$socket;\n  }\n\n  private scheduledReconnect: number | undefined = undefined;\n\n  reconnect(): void {\n    // This function can be invoked directly even if there's a scheduled\n    // reconnect, so be sure to clear any such scheduled reconnects.\n    clearTimeout(this.scheduledReconnect);\n\n    if (this.isConnected())\n      throw \"Attempted to reconnect, but already connected.\";\n\n    this.$socket = this.createSocket();\n    this.$initialInput = $.extend({}, this.$inputValues);\n    this.$updateConditionals();\n  }\n\n  createSocket(): ShinyWebSocket {\n    const createSocketFunc: () => ShinyWebSocket =\n      getShinyCreateWebsocket() ||\n      (() => {\n        let protocol = \"ws:\";\n\n        if (window.location.protocol === \"https:\") protocol = \"wss:\";\n\n        let defaultPath = window.location.pathname;\n        // some older WebKit browsers return the pathname already decoded;\n        // if we find invalid URL characters in the path, encode them\n\n        if (!/^([$#!&-;=?-[\\]_a-z~]|%[0-9a-fA-F]{2})+$/.test(defaultPath)) {\n          defaultPath = encodeURI(defaultPath);\n          // Bizarrely, QtWebKit requires us to encode these characters *twice*\n          if (isQt()) {\n            defaultPath = encodeURI(defaultPath);\n          }\n        }\n        if (!/\\/$/.test(defaultPath)) defaultPath += \"/\";\n        defaultPath += \"websocket/\";\n\n        const ws: ShinyWebSocket = new WebSocket(\n          protocol + \"//\" + window.location.host + defaultPath\n        );\n\n        ws.binaryType = \"arraybuffer\";\n\n        return ws;\n      });\n\n    const socket = createSocketFunc();\n    let hasOpened = false;\n\n    socket.onopen = () => {\n      hasOpened = true;\n\n      $(document).trigger({\n        type: \"shiny:connected\",\n        // @ts-expect-error; Can not remove info on a established, malformed Event object\n        socket: socket,\n      });\n\n      this.onConnected();\n\n      socket.send(\n        JSON.stringify({\n          method: \"init\",\n          data: this.$initialInput,\n        })\n      );\n\n      while (this.$pendingMessages.length) {\n        const msg = this.$pendingMessages.shift();\n\n        socket.send(msg as string);\n      }\n\n      this.startActionQueueLoop();\n    };\n    socket.onmessage = (e) => {\n      this.taskQueue.enqueue(async () => await this.dispatchMessage(e.data));\n    };\n    // Called when a successfully-opened websocket is closed, or when an\n    // attempt to open a connection fails.\n    socket.onclose = () => {\n      // These things are needed only if we've successfully opened the\n      // websocket.\n      if (hasOpened) {\n        $(document).trigger({\n          type: \"shiny:disconnected\",\n          // @ts-expect-error; Can not remove info on a established, malformed Event object\n          socket: socket,\n        });\n\n        this.$notifyDisconnected();\n      }\n\n      this.onDisconnected(); // Must be run before this.$removeSocket()\n      this.$removeSocket();\n    };\n    return socket;\n  }\n\n  async startActionQueueLoop(): Promise<void> {\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n      const action = await this.taskQueue.dequeue();\n\n      try {\n        await action();\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n  sendInput(values: InputValues): void {\n    const msg = JSON.stringify({\n      method: \"update\",\n      data: values,\n    });\n\n    this.$sendMsg(msg);\n\n    $.extend(this.$inputValues, values);\n    this.$updateConditionals();\n  }\n\n  $notifyDisconnected(): void {\n    if (window.parent) {\n      window.parent.postMessage(\"disconnected\", \"*\");\n    }\n  }\n\n  $removeSocket(): void {\n    this.$socket = null;\n  }\n\n  $scheduleReconnect(delay: Parameters<typeof setTimeout>[1]): void {\n    this.scheduledReconnect = window.setTimeout(() => {\n      this.reconnect();\n    }, delay);\n  }\n\n  // How long should we wait before trying the next reconnection?\n  // The delay will increase with subsequent attempts.\n  // .next: Return the time to wait for next connection, and increment counter.\n  // .reset: Reset the attempt counter.\n  reconnectDelay = (function () {\n    let attempts = 0;\n    // Time to wait before each reconnection attempt. If we go through all of\n    // these values, repeated use the last one. Add 500ms to each one so that\n    // in the last 0.5s, it shows \"...\"\n    const delays = [1500, 1500, 2500, 2500, 5500, 5500, 10500];\n\n    return {\n      next: function () {\n        let i = attempts;\n        // Instead of going off the end, use the last one\n\n        if (i >= delays.length) {\n          i = delays.length - 1;\n        }\n\n        attempts++;\n        return delays[i];\n      },\n      reset: function () {\n        attempts = 0;\n      },\n    };\n  })();\n\n  onDisconnected(): void {\n    // Add gray-out overlay, if not already present\n    const $overlay = $(\"#shiny-disconnected-overlay\");\n\n    if ($overlay.length === 0) {\n      $(document.body).append('<div id=\"shiny-disconnected-overlay\"></div>');\n    }\n\n    // To try a reconnect, both the app (this.$allowReconnect) and the\n    // server (this.$socket.allowReconnect) must allow reconnections, or\n    // session$allowReconnect(\"force\") was called. The \"force\" option should\n    // only be used for testing.\n    if (\n      (this.$allowReconnect === true &&\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        this.$socket!.allowReconnect === true) ||\n      this.$allowReconnect === \"force\"\n    ) {\n      const delay = this.reconnectDelay.next();\n\n      showReconnectDialog(delay);\n      this.$scheduleReconnect(delay);\n    }\n  }\n\n  onConnected(): void {\n    $(\"#shiny-disconnected-overlay\").remove();\n    hideReconnectDialog();\n    this.reconnectDelay.reset();\n  }\n\n  // NB: Including blobs will cause IE to break!\n  // TODO: Make blobs work with Internet Explorer\n  //\n  // Websocket messages are normally one-way--i.e. the client passes a\n  // message to the server but there is no way for the server to provide\n  // a response to that specific message. makeRequest provides a way to\n  // do asynchronous RPC over websocket. Each request has a method name\n  // and arguments, plus optionally one or more binary blobs can be\n  // included as well. The request is tagged with a unique number that\n  // the server will use to label the corresponding response.\n  //\n  // @param method A string that tells the server what logic to run.\n  // @param args An array of objects that should also be passed to the\n  //   server in JSON-ified form.\n  // @param onSuccess A function that will be called back if the server\n  //   responds with success. If the server provides a value in the\n  //   response, the function will be called with it as the only argument.\n  // @param onError A function that will be called back if the server\n  //   responds with error, or if the request fails for any other reason.\n  //   The parameter to onError will be a string describing the error.\n  // @param blobs Optionally, an array of Blob, ArrayBuffer, or string\n  //   objects that will be made available to the server as part of the\n  //   request. Strings will be encoded using UTF-8.\n  makeRequest(\n    method: string,\n    args: unknown[],\n    onSuccess: OnSuccessRequest,\n    onError: OnErrorRequest,\n    blobs: Array<ArrayBuffer | Blob | string> | undefined\n  ): void {\n    let requestId = this.$nextRequestId;\n\n    while (this.$activeRequests[requestId]) {\n      requestId = (requestId + 1) % 1000000000;\n    }\n    this.$nextRequestId = requestId + 1;\n\n    this.$activeRequests[requestId] = {\n      onSuccess: onSuccess,\n      onError: onError,\n    };\n\n    let msg: Blob | string = JSON.stringify({\n      method: method,\n      args: args,\n      tag: requestId,\n    });\n\n    if (blobs) {\n      // We have binary data to transfer; form a different kind of packet.\n      // Start with a 4-byte signature, then for each blob, emit 4 bytes for\n      // the length followed by the blob. The json payload is UTF-8 encoded\n      // and used as the first blob.\n\n      const uint32ToBuf = function (val: number) {\n        const buffer = new ArrayBuffer(4);\n        const view = new DataView(buffer);\n\n        view.setUint32(0, val, true); // little-endian\n        return buffer;\n      };\n\n      const payload = [];\n\n      payload.push(uint32ToBuf(0x01020202)); // signature\n\n      const jsonBuf: Blob = new Blob([msg]);\n\n      payload.push(uint32ToBuf(jsonBuf.size));\n      payload.push(jsonBuf);\n\n      for (let i = 0; i < blobs.length; i++) {\n        const blob = blobs[i];\n\n        payload.push(\n          uint32ToBuf(\n            (blob as ArrayBuffer).byteLength || (blob as Blob).size || 0\n          )\n        );\n        payload.push(blob);\n      }\n\n      const blob: Blob = new Blob(payload);\n\n      msg = blob;\n    }\n\n    this.$sendMsg(msg);\n  }\n\n  $sendMsg(msg: MessageValue): void {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    if (!this.$socket!.readyState) {\n      this.$pendingMessages.push(msg);\n    } else {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      this.$socket!.send(msg);\n    }\n  }\n\n  receiveError(name: string, error: ErrorsMessageValue): void {\n    if (this.$errors[name] === error) return;\n\n    this.$errors[name] = error;\n    delete this.$values[name];\n\n    const binding = this.$bindings[name];\n    const evt: ShinyEventError = $.Event(\"shiny:error\");\n\n    evt.name = name;\n    evt.error = error;\n    evt.binding = binding;\n    $(binding ? binding.el : document).trigger(evt);\n    if (!evt.isDefaultPrevented() && binding && binding.onValueError) {\n      binding.onValueError(evt.error);\n    }\n  }\n\n  async receiveOutput<T>(name: string, value: T): Promise<T | undefined> {\n    const binding = this.$bindings[name];\n    const evt: ShinyEventValue = $.Event(\"shiny:value\");\n\n    evt.name = name;\n    evt.value = value;\n    evt.binding = binding;\n\n    if (this.$values[name] === value) {\n      $(binding ? binding.el : document).trigger(evt);\n      return undefined;\n    }\n\n    this.$values[name] = value;\n    delete this.$errors[name];\n\n    $(binding ? binding.el : document).trigger(evt);\n\n    if (!evt.isDefaultPrevented() && binding) {\n      await binding.onValueChange(evt.value);\n    }\n\n    return value;\n  }\n\n  bindOutput(id: string, binding: OutputBindingAdapter): OutputBindingAdapter {\n    if (!id) throw \"Can't bind an element with no ID\";\n    if (this.$bindings[id]) throw \"Duplicate binding for ID \" + id;\n    this.$bindings[id] = binding;\n\n    if (this.$values[id] !== undefined) binding.onValueChange(this.$values[id]);\n    else if (this.$errors[id] !== undefined)\n      binding.onValueError(this.$errors[id]);\n\n    return binding;\n  }\n\n  unbindOutput(id: string, binding: OutputBindingAdapter): boolean {\n    if (this.$bindings[id] === binding) {\n      delete this.$bindings[id];\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  // Narrows a scopeComponent -- an input or output object -- to one constrained\n  // by nsPrefix. Returns a new object with keys removed and renamed as\n  // necessary.\n  private _narrowScopeComponent<T>(\n    scopeComponent: { [key: string]: T },\n    nsPrefix: string\n  ) {\n    return Object.keys(scopeComponent)\n      .filter((k) => k.indexOf(nsPrefix) === 0)\n      .map((k) => ({ [k.substring(nsPrefix.length)]: scopeComponent[k] }))\n      .reduce((obj, pair) => $.extend(obj, pair), {});\n  }\n\n  // Narrows a scope -- an object with input and output \"subComponents\" -- to\n  // one constrained by the nsPrefix string.\n  //\n  // If nsPrefix is null or empty, returns scope without modification.\n  //\n  // Otherwise, returns a new object with keys in subComponents removed and\n  // renamed as necessary.\n  private _narrowScope(\n    scope: {\n      input: InputValues;\n      output: { [key: string]: any };\n    },\n    nsPrefix: string\n  ) {\n    if (nsPrefix) {\n      return {\n        input: this._narrowScopeComponent(scope.input, nsPrefix),\n        output: this._narrowScopeComponent(scope.output, nsPrefix),\n      };\n    }\n    return scope;\n  }\n\n  $updateConditionals(): void {\n    // @ts-expect-error; TODO-barret; Could this be transformed into `.trigger(TYPE)`?\n    $(document).trigger({\n      type: \"shiny:conditional\",\n    });\n\n    const inputs: InputValues = {};\n\n    // Input keys use \"name:type\" format; we don't want the user to\n    // have to know about the type suffix when referring to inputs.\n    for (const name in this.$inputValues) {\n      if (hasOwnProperty(this.$inputValues, name)) {\n        const shortName = name.replace(/:.*/, \"\");\n\n        inputs[shortName] = this.$inputValues[name];\n      }\n    }\n\n    const scope = { input: inputs, output: this.$values };\n\n    const conditionals = $(document).find(\"[data-display-if]\");\n\n    for (let i = 0; i < conditionals.length; i++) {\n      const el = $(conditionals[i]);\n      let condFunc = el.data(\"data-display-if-func\");\n\n      if (!condFunc) {\n        const condExpr = el.attr(\"data-display-if\") as string;\n\n        condFunc = scopeExprToFunc(condExpr);\n        el.data(\"data-display-if-func\", condFunc);\n      }\n\n      const nsPrefix = el.attr(\"data-ns-prefix\") as string;\n      const nsScope = this._narrowScope(scope, nsPrefix);\n      const show = condFunc(nsScope);\n      const showing = el.css(\"display\") !== \"none\";\n\n      if (show !== showing) {\n        if (show) {\n          el.trigger(\"show\");\n          el.show();\n          el.trigger(\"shown\");\n        } else {\n          el.trigger(\"hide\");\n          el.hide();\n          el.trigger(\"hidden\");\n        }\n      }\n    }\n  }\n\n  // Message handler management functions =================================\n\n  // // Added in shiny init method\n  // Shiny.addCustomMessageHandler = addCustomMessageHandler;\n\n  async dispatchMessage(data: ArrayBufferLike | string): Promise<void> {\n    let msgObj: ShinyEventMessage[\"message\"] = {};\n\n    if (typeof data === \"string\") {\n      msgObj = JSON.parse(data);\n    } else {\n      // data is arraybuffer\n      const len = new DataView(data, 0, 1).getUint8(0);\n      const typedv = new DataView(data, 1, len);\n      const typebuf = [];\n\n      for (let i = 0; i < len; i++) {\n        typebuf.push(String.fromCharCode(typedv.getUint8(i)));\n      }\n      const type = typebuf.join(\"\");\n\n      data = data.slice(len + 1);\n      msgObj.custom = {};\n      // @ts-expect-error; `custom` value is of unknown type. So setting within it is not allowed\n      msgObj.custom[type] = data;\n    }\n\n    const evt: ShinyEventMessage = $.Event(\"shiny:message\");\n\n    evt.message = msgObj;\n    $(document).trigger(evt);\n    if (evt.isDefaultPrevented()) return;\n\n    // Send msgObj.foo and msgObj.bar to appropriate handlers\n    await this._sendMessagesToHandlers(\n      evt.message,\n      messageHandlers,\n      messageHandlerOrder\n    );\n\n    this.$updateConditionals();\n  }\n\n  // Message handlers =====================================================\n\n  // A function for sending messages to the appropriate handlers.\n  // - msgObj: the object containing messages, with format {msgObj.foo, msObj.bar\n  private async _sendMessagesToHandlers(\n    msgObj: { [key: string]: unknown },\n    handlers: { [key: string]: Handler },\n    handlerOrder: string[]\n  ): Promise<void> {\n    // Dispatch messages to handlers, if handler is present\n    for (let i = 0; i < handlerOrder.length; i++) {\n      const msgType = handlerOrder[i];\n\n      if (hasOwnProperty(msgObj, msgType)) {\n        // Execute each handler with 'this' referring to the present value of\n        // 'this'\n        await handlers[msgType].call(this, msgObj[msgType]);\n      }\n    }\n  }\n\n  private _init() {\n    // Dev note:\n    // * Use arrow functions to allow the Types to propagate.\n    // * However, `_sendMessagesToHandlers()` will adjust the `this` context to the same _`this`_.\n\n    addMessageHandler(\"values\", async (message: { [key: string]: any }) => {\n      for (const name in this.$bindings) {\n        if (hasOwnProperty(this.$bindings, name))\n          this.$bindings[name].showProgress(false);\n      }\n\n      for (const key in message) {\n        if (hasOwnProperty(message, key)) {\n          await this.receiveOutput(key, message[key]);\n        }\n      }\n    });\n\n    addMessageHandler(\n      \"errors\",\n      (message: { [key: string]: ErrorsMessageValue }) => {\n        for (const key in message) {\n          if (hasOwnProperty(message, key))\n            this.receiveError(key, message[key]);\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"inputMessages\",\n      (message: Array<{ id: string; message: unknown }>) => {\n        // inputMessages should be an array\n        for (let i = 0; i < message.length; i++) {\n          const $obj = $(\".shiny-bound-input#\" + $escape(message[i].id));\n          const inputBinding: InputBinding = $obj.data(\"shiny-input-binding\");\n\n          // Dispatch the message to the appropriate input object\n          if ($obj.length > 0) {\n            if (!$obj.attr(\"aria-live\")) $obj.attr(\"aria-live\", \"polite\");\n            const el = $obj[0];\n            const evt: ShinyEventUpdateInput = $.Event(\"shiny:updateinput\");\n\n            evt.message = message[i].message;\n            evt.binding = inputBinding;\n            $(el).trigger(evt);\n            if (!evt.isDefaultPrevented()) {\n              try {\n                inputBinding.receiveMessage(el, evt.message);\n              } catch (error) {\n                console.error(\n                  \"[shiny] Error in inputBinding.receiveMessage()\",\n                  { error, binding: inputBinding, message: evt.message }\n                );\n              }\n            }\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\"javascript\", (message: string) => {\n      /*jshint evil: true */\n      indirectEval(message);\n    });\n\n    addMessageHandler(\"console\", (message: unknown[]) => {\n      for (let i = 0; i < message.length; i++) {\n        if (console.log) console.log(message[i]);\n      }\n    });\n\n    addMessageHandler(\n      \"progress\",\n      async (message: { type: string; message: { id: string } }) => {\n        if (message.type && message.message) {\n          // @ts-expect-error; Unknown values handled with followup if statement\n          const handler = await this.progressHandlers[message.type];\n\n          if (handler) handler.call(this, message.message);\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"notification\",\n      async (\n        message:\n          | { type: \"remove\"; message: string }\n          | { type: \"show\"; message: Parameters<typeof showNotification>[0] }\n          | { type: void }\n      ) => {\n        if (message.type === \"show\") await showNotification(message.message);\n        else if (message.type === \"remove\") removeNotification(message.message);\n        else throw \"Unkown notification type: \" + message.type;\n      }\n    );\n\n    addMessageHandler(\n      \"modal\",\n      async (\n        message:\n          | { type: \"remove\"; message: string }\n          | { type: \"show\"; message: Parameters<typeof showModal>[0] }\n          | { type: void }\n      ) => {\n        if (message.type === \"show\") await showModal(message.message);\n        // For 'remove', message content isn't used\n        else if (message.type === \"remove\") removeModal();\n        else throw \"Unkown modal type: \" + message.type;\n      }\n    );\n\n    addMessageHandler(\n      \"response\",\n      (message: { tag: number; value?: ResponseValue; error?: string }) => {\n        const requestId = message.tag;\n        const request = this.$activeRequests[requestId];\n\n        if (request) {\n          delete this.$activeRequests[requestId];\n          if (\"value\" in message)\n            request.onSuccess(message.value as UploadInitValue);\n          else request.onError(message.error as string);\n        }\n      }\n    );\n\n    addMessageHandler(\"allowReconnect\", (message: \"force\" | false | true) => {\n      switch (message) {\n        case true:\n        case false:\n        case \"force\":\n          this.$allowReconnect = message;\n          break;\n        default:\n          throw \"Invalid value for allowReconnect: \" + message;\n      }\n    });\n\n    addMessageHandler(\"custom\", (message: { [key: string]: unknown }) => {\n      // For old-style custom messages - should deprecate and migrate to new\n      // method\n      const shinyOnCustomMessage = getShinyOnCustomMessage();\n\n      if (shinyOnCustomMessage) shinyOnCustomMessage(message);\n\n      // Send messages.foo and messages.bar to appropriate handlers\n      this._sendMessagesToHandlers(\n        message,\n        customMessageHandlers,\n        customMessageHandlerOrder\n      );\n    });\n\n    addMessageHandler(\n      \"config\",\n      (message: { workerId: string; sessionId: string; user?: string }) => {\n        this.config = {\n          workerId: message.workerId,\n          sessionId: message.sessionId,\n        };\n        if (message.user) setShinyUser(message.user);\n        $(document).trigger(\"shiny:sessioninitialized\");\n      }\n    );\n\n    addMessageHandler(\"busy\", (message: \"busy\" | \"idle\") => {\n      if (message === \"busy\") {\n        $(document.documentElement).addClass(\"shiny-busy\");\n        $(document).trigger(\"shiny:busy\");\n      } else if (message === \"idle\") {\n        $(document.documentElement).removeClass(\"shiny-busy\");\n        $(document).trigger(\"shiny:idle\");\n      }\n    });\n\n    addMessageHandler(\n      \"recalculating\",\n      (message: {\n        name?: string;\n        status?: \"recalculated\" | \"recalculating\";\n      }) => {\n        if (\n          hasOwnProperty(message, \"name\") &&\n          hasOwnProperty(message, \"status\")\n        ) {\n          const binding = this.$bindings[message.name as string];\n\n          if (binding) {\n            $(binding.el).trigger(\"shiny:\" + message.status);\n          } else {\n            $().trigger(\"shiny:\" + message.status);\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\"reload\", (message: true) => {\n      window.location.reload();\n      return;\n      message;\n    });\n\n    addMessageHandler(\n      \"shiny-insert-ui\",\n      async (message: {\n        selector: string;\n        content: { html: string; deps: HtmlDep[] };\n        multiple: boolean;\n        where: WherePosition;\n      }): Promise<void> => {\n        const targets = $(message.selector);\n\n        if (targets.length === 0) {\n          // render the HTML and deps to a null target, so\n          // the side-effect of rendering the deps, singletons,\n          // and <head> still occur\n          console.warn(\n            'The selector you chose (\"' +\n              message.selector +\n              '\") could not be found in the DOM.'\n          );\n          await renderHtmlAsync(\n            message.content.html,\n            $([]),\n            message.content.deps\n          );\n        } else {\n          for (const target of targets) {\n            await renderContentAsync(target, message.content, message.where);\n            // If multiple is false, only render to the first target.\n            if (message.multiple === false) break;\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"shiny-remove-ui\",\n      (message: { selector: string; multiple: boolean }) => {\n        const els = $(message.selector);\n\n        els.each(function (i, el) {\n          shinyUnbindAll(el, true);\n          $(el).remove();\n          // If `multiple` is false, returning false terminates the function\n          // and no other elements are removed; if `multiple` is true,\n          // returning nothing continues removing all remaining elements.\n          return message.multiple === false ? false : undefined;\n        });\n      }\n    );\n\n    addMessageHandler(\"frozen\", (message: { ids: string[] }) => {\n      for (let i = 0; i < message.ids.length; i++) {\n        shinyForgetLastInputValue(message.ids[i]);\n      }\n    });\n\n    function getTabset(id: string) {\n      const $tabset = $(\"#\" + $escape(id));\n\n      if ($tabset.length === 0)\n        throw (\n          \"There is no tabsetPanel (or navbarPage or navlistPanel) \" +\n          \"with id equal to '\" +\n          id +\n          \"'\"\n        );\n      return $tabset;\n    }\n\n    function getTabContent($tabset: JQuery<HTMLElement>) {\n      const tabsetId = $tabset.attr(\"data-tabsetid\") as string;\n      const $tabContent = $(\n        \"div.tab-content[data-tabsetid='\" + $escape(tabsetId) + \"']\"\n      );\n\n      return $tabContent;\n    }\n\n    function getTargetTabs(\n      $tabset: JQuery<HTMLElement>,\n      $tabContent: JQuery<HTMLElement>,\n      target: string\n    ) {\n      const dataValue = \"[data-value='\" + $escape(target) + \"']\";\n      const $aTag = $tabset.find(\"a\" + dataValue);\n      const $liTag = $aTag.parent();\n\n      if ($liTag.length === 0) {\n        throw (\n          \"There is no tabPanel (or navbarMenu) with value\" +\n          \" (or menuName) equal to '\" +\n          target +\n          \"'\"\n        );\n      }\n      const $liTags: Array<JQuery<HTMLElement>> = [];\n      const $divTags: Array<JQuery<HTMLElement>> = [];\n\n      if ($aTag.attr(\"data-toggle\") === \"dropdown\") {\n        // dropdown\n        const $dropdownTabset = $aTag.find(\"+ ul.dropdown-menu\");\n        const dropdownId = $dropdownTabset.attr(\"data-tabsetid\") as string;\n\n        const $dropdownLiTags = $dropdownTabset\n          .find(\"a[data-toggle='tab']\")\n          .parent(\"li\");\n\n        $dropdownLiTags.each(function (i, el) {\n          $liTags.push($(el));\n        });\n        const selector = \"div.tab-pane[id^='tab-\" + $escape(dropdownId) + \"']\";\n        const $dropdownDivs = $tabContent.find(selector);\n\n        $dropdownDivs.each(function (i, el) {\n          $divTags.push($(el));\n        });\n      } else {\n        // regular tab\n        $divTags.push($tabContent.find(\"div\" + dataValue));\n      }\n      return { $liTag: $liTag, $liTags: $liTags, $divTags: $divTags };\n    }\n\n    addMessageHandler(\n      \"shiny-insert-tab\",\n      async (message: {\n        inputId: string;\n        divTag: { html: string; deps: HtmlDep[] };\n        liTag: { html: string; deps: HtmlDep[] };\n        target?: string;\n        position: \"after\" | \"before\" | void;\n        select: boolean;\n        menuName: string;\n      }): Promise<void> => {\n        const $parentTabset = getTabset(message.inputId);\n        let $tabset = $parentTabset;\n        const $tabContent = getTabContent($tabset);\n        let tabsetId = $parentTabset.attr(\"data-tabsetid\");\n\n        const $divTag = $(message.divTag.html);\n        const $liTag = $(message.liTag.html);\n        const $aTag = $liTag.find(\"> a\");\n\n        // Unless the item is being prepended/appended, the target tab\n        // must be provided\n        let $targetLiTag: JQuery<HTMLElement> | null = null;\n\n        if (message.target !== null) {\n          const targetInfo = getTargetTabs(\n            $tabset,\n            $tabContent,\n            message.target as string\n          );\n\n          $targetLiTag = targetInfo.$liTag;\n        }\n\n        // If the item is to be placed inside a navbarMenu (dropdown),\n        // change the value of $tabset from the parent's ul tag to the\n        // dropdown's ul tag\n        const dropdown = getDropdown();\n\n        if (dropdown !== null) {\n          if ($aTag.attr(\"data-toggle\") === \"dropdown\")\n            throw \"Cannot insert a navbarMenu inside another one\";\n          $tabset = dropdown.$tabset;\n          tabsetId = dropdown.id;\n          // In the BS4+ case, the server will be generating \"top-level\" nav markup\n          // (i.e., `li.nav-item a.nav-link`), but when inserting inside a dropdown we\n          // need `li a.dropdown-item` for correct styling\n          // https://getbootstrap.com/docs/5.0/components/navs-tabs/#tabs-with-dropdowns\n          $liTag\n            .removeClass(\"nav-item\")\n            .find(\".nav-link\")\n            .removeClass(\"nav-link\")\n            .addClass(\"dropdown-item\");\n        }\n\n        // For regular tab items, fix the href (of the li > a tag)\n        // and the id (of the div tag). This does not apply to plain\n        // text items (which function as dividers and headers inside\n        // navbarMenus) and whole navbarMenus (since those get\n        // constructed from scratch on the R side and therefore\n        // there are no ids that need matching)\n        if ($aTag.attr(\"data-toggle\") === \"tab\") {\n          const index = getTabIndex($tabset, tabsetId);\n          const tabId = \"tab-\" + tabsetId + \"-\" + index;\n\n          $liTag.find(\"> a\").attr(\"href\", \"#\" + tabId);\n          $divTag.attr(\"id\", tabId);\n        }\n\n        // actually insert the item into the right place\n        if (message.position === \"before\") {\n          if ($targetLiTag) {\n            $targetLiTag.before($liTag);\n          } else {\n            $tabset.prepend($liTag);\n          }\n        } else if (message.position === \"after\") {\n          if ($targetLiTag) {\n            $targetLiTag.after($liTag);\n          } else {\n            $tabset.append($liTag);\n          }\n        }\n\n        await renderContentAsync($liTag[0], {\n          html: $liTag.html(),\n          deps: message.liTag.deps,\n        });\n        // jcheng 2017-07-28: This next part might look a little insane versus the\n        // more obvious `$tabContent.append($divTag);`, but there's a method to the\n        // madness.\n        //\n        // 1) We need to load the dependencies, and this needs to happen before\n        //    any scripts in $divTag get a chance to run.\n        // 2) The scripts in $divTag need to run only once.\n        // 3) The contents of $divTag need to be sent through renderContent so that\n        //    singletons may be registered and/or obeyed, and so that inputs/outputs\n        //    may be bound.\n        //\n        // Add to these constraints these facts:\n        //\n        // A) The (non-jQuery) DOM manipulation functions don't cause scripts to\n        //    run, but the jQuery functions all do.\n        // B) renderContent must be called on an element that's attached to the\n        //    document.\n        // C) $divTag may be of length > 1 (e.g. navbarMenu). I also noticed text\n        //    elements consisting of just \"\\n\" being included in the nodeset of\n        //    $divTag.\n        // D) renderContent has a bug where only position \"replace\" (the default)\n        //    uses the jQuery functions, so other positions like \"beforeend\" will\n        //    prevent child script tags from running.\n        //\n        // In theory the same problem exists for $liTag but since that content is\n        // much less likely to include arbitrary scripts, we're skipping it.\n        //\n        // This code could be nicer if we didn't use renderContent, but rather the\n        // lower-level functions that renderContent uses. Like if we pre-process\n        // the value of message.divTag.html for singletons, we could do that, then\n        // render dependencies, then do $tabContent.append($divTag).\n        await renderContentAsync(\n          $tabContent[0],\n          { html: \"\", deps: message.divTag.deps },\n          // @ts-expect-error; TODO-barret; There is no usage of beforeend\n          \"beforeend\"\n        );\n        for (const el of $divTag.get()) {\n          // Must not use jQuery for appending el to the doc, we don't want any\n          // scripts to run (since they will run when renderContent takes a crack).\n          $tabContent[0].appendChild(el);\n          // If `el` itself is a script tag, this approach won't work (the script\n          // won't be run), since we're only sending innerHTML through renderContent\n          // and not the whole tag. That's fine in this case because we control the\n          // R code that generates this HTML, and we know that the element is not\n          // a script tag.\n          await renderContentAsync(el, el.innerHTML || el.textContent);\n        }\n\n        if (message.select) {\n          $liTag.find(\"a\").tab(\"show\");\n        }\n        /* Barbara -- August 2017\n  Note: until now, the number of tabs in a tabsetPanel (or navbarPage\n  or navlistPanel) was always fixed. So, an easy way to give an id to\n  a tab was simply incrementing a counter. (Just like it was easy to\n  give a random 4-digit number to identify the tabsetPanel). Now that\n  we're introducing dynamic tabs, we must retrieve these numbers and\n  fix the dummy id given to the tab in the R side -- there, we always\n  set the tab id (counter dummy) to \"id\" and the tabset id to \"tsid\")\n  */\n        function getTabIndex(\n          $tabset: JQuery<HTMLElement>,\n          tabsetId: string | undefined\n        ) {\n          // The 0 is to ensure this works for empty tabsetPanels as well\n          const existingTabIds = [0];\n          // loop through all existing tabs, find the one with highest id\n          // (since this is based on a numeric counter), and increment\n\n          $tabset.find(\"> li\").each(function () {\n            const $tab = $(this).find(\"> a[data-toggle='tab']\");\n\n            if ($tab.length > 0) {\n              // remove leading url if it exists. (copy of bootstrap url stripper)\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const href = $tab.attr(\"href\")!.replace(/.*(?=#[^\\s]+$)/, \"\");\n              // remove tab id to get the index\n              // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n              const index = href!.replace(\"#tab-\" + tabsetId + \"-\", \"\");\n\n              existingTabIds.push(Number(index));\n            }\n          });\n          return Math.max.apply(null, existingTabIds) + 1;\n        }\n\n        // Finds out if the item will be placed inside a navbarMenu\n        // (dropdown). If so, returns the dropdown tabset (ul tag)\n        // and the dropdown tabsetid (to be used to fix the tab ID)\n        function getDropdown() {\n          if (message.menuName !== null) {\n            // menuName is only provided if the user wants to prepend\n            // or append an item inside a navbarMenu (dropdown)\n            const $dropdownATag = $(\n              \"a.dropdown-toggle[data-value='\" +\n                $escape(message.menuName) +\n                \"']\"\n            );\n\n            if ($dropdownATag.length === 0) {\n              throw (\n                \"There is no navbarMenu with menuName equal to '\" +\n                message.menuName +\n                \"'\"\n              );\n            }\n            const $dropdownTabset = $dropdownATag.find(\"+ ul.dropdown-menu\");\n            const dropdownId = $dropdownTabset.attr(\"data-tabsetid\");\n\n            return { $tabset: $dropdownTabset, id: dropdownId };\n          } else if (message.target !== null && $targetLiTag !== null) {\n            // if our item is to be placed next to a tab that is inside\n            // a navbarMenu, our item will also be inside\n            const $uncleTabset = $targetLiTag.parent(\"ul\");\n\n            if ($uncleTabset.hasClass(\"dropdown-menu\")) {\n              const uncleId = $uncleTabset.attr(\"data-tabsetid\");\n\n              return { $tabset: $uncleTabset, id: uncleId };\n            }\n          }\n          return null;\n        }\n      }\n    );\n\n    // If the given tabset has no active tabs, select the first one\n    function ensureTabsetHasVisibleTab($tabset: JQuery<HTMLElement>) {\n      const inputBinding = $tabset.data(\"shiny-input-binding\");\n\n      // Use the getValue() method to avoid duplicating the CSS selector\n      // for querying the DOM for the currently active tab\n      if (!inputBinding.getValue($tabset)) {\n        // Note: destTabValue may be null. We still want to proceed\n        // through the below logic and setValue so that the input\n        // value for the tabset gets updated (i.e. input$tabsetId\n        // should be null if there are no tabs).\n        const destTabValue = getFirstTab($tabset);\n        const evt: ShinyEventUpdateInput = $.Event(\"shiny:updateinput\");\n\n        evt.binding = inputBinding;\n        $tabset.trigger(evt);\n        inputBinding.setValue($tabset[0], destTabValue);\n      }\n    }\n\n    // Given a tabset ul jquery object, return the value of the first tab\n    // (in document order) that's visible and able to be selected.\n    function getFirstTab($ul: JQuery<HTMLElement>) {\n      return (\n        $ul\n          .find(\"li:visible a[data-toggle='tab']\")\n          .first()\n          .attr(\"data-value\") || null\n      );\n    }\n\n    function tabApplyFunction(\n      target: ReturnType<typeof getTargetTabs>,\n      func: ($el: JQuery<HTMLElement>) => void,\n      liTags = false\n    ) {\n      $.each(target, function (key, el) {\n        if (key === \"$liTag\") {\n          // $liTag is always just one jQuery element\n          func(el as ReturnType<typeof getTargetTabs>[\"$liTag\"]);\n        } else if (key === \"$divTags\") {\n          // $divTags is always an array (even if length = 1)\n          $.each(\n            el as ReturnType<typeof getTargetTabs>[\"$divTags\"],\n            function (i, div) {\n              func(div);\n            }\n          );\n        } else if (liTags && key === \"$liTags\") {\n          // $liTags is always an array (even if length = 0)\n          $.each(\n            el as ReturnType<typeof getTargetTabs>[\"$liTags\"],\n            function (i, div) {\n              func(div);\n            }\n          );\n        }\n      });\n    }\n\n    addMessageHandler(\n      \"shiny-remove-tab\",\n      (message: { inputId: string; target: string; type: never }) => {\n        const $tabset = getTabset(message.inputId);\n        const $tabContent = getTabContent($tabset);\n        const target = getTargetTabs($tabset, $tabContent, message.target);\n\n        tabApplyFunction(target, removeEl);\n\n        ensureTabsetHasVisibleTab($tabset);\n\n        function removeEl($el: JQuery<HTMLElement>) {\n          shinyUnbindAll($el, true);\n          $el.remove();\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"shiny-change-tab-visibility\",\n      (message: {\n        inputId: string;\n        target: string;\n        type: \"hide\" | \"show\" | null;\n      }) => {\n        const $tabset = getTabset(message.inputId);\n        const $tabContent = getTabContent($tabset);\n        const target = getTargetTabs($tabset, $tabContent, message.target);\n\n        tabApplyFunction(target, changeVisibility, true);\n\n        ensureTabsetHasVisibleTab($tabset);\n\n        function changeVisibility($el: JQuery<HTMLElement>) {\n          if (message.type === \"show\") $el.css(\"display\", \"\");\n          else if (message.type === \"hide\") {\n            $el.hide();\n            $el.removeClass(\"active\");\n          }\n        }\n      }\n    );\n\n    addMessageHandler(\n      \"updateQueryString\",\n      (message: { mode: unknown | \"replace\"; queryString: string }) => {\n        // leave the bookmarking code intact\n        if (message.mode === \"replace\") {\n          // @ts-expect-error; No title value being supplied\n          window.history.replaceState(null, null, message.queryString);\n          return;\n        }\n\n        let what = null;\n\n        if (message.queryString.charAt(0) === \"#\") what = \"hash\";\n        else if (message.queryString.charAt(0) === \"?\") what = \"query\";\n        else\n          throw (\n            \"The 'query' string must start with either '?' \" +\n            \"(to update the query string) or with '#' (to \" +\n            \"update the hash).\"\n          );\n\n        const path = window.location.pathname;\n        const oldQS = window.location.search;\n        const oldHash = window.location.hash;\n\n        /* Barbara -- December 2016\n  Note: we could check if the new QS and/or hash are different\n  from the old one(s) and, if not, we could choose not to push\n  a new state (whether or not we would replace it is moot/\n  inconsequential). However, I think that it is better to\n  interpret each call to `updateQueryString` as representing\n  new state (even if the message.queryString is the same), so\n  that check isn't even performed as of right now.\n  */\n\n        let relURL = path;\n\n        if (what === \"query\") relURL += message.queryString;\n        else relURL += oldQS + message.queryString; // leave old QS if it exists\n        // @ts-expect-error; No title value being supplied\n        window.history.pushState(null, null, relURL);\n\n        // for the case when message.queryString has both a query string\n        // and a hash (`what = \"hash\"` allows us to trigger the\n        // hashchange event)\n        if (message.queryString.indexOf(\"#\") !== -1) what = \"hash\";\n\n        // for the case when there was a hash before, but there isn't\n        // any hash now (e.g. for when only the query string is updated)\n        if (window.location.hash !== oldHash) what = \"hash\";\n\n        // This event needs to be triggered manually because pushState() never\n        // causes a hashchange event to be fired,\n        if (what === \"hash\") $(document).trigger(\"hashchange\");\n      }\n    );\n\n    addMessageHandler(\n      \"resetBrush\",\n      (message: { brushId: Parameters<typeof resetBrush>[0] }) => {\n        resetBrush(message.brushId);\n      }\n    );\n  }\n\n  // Progress reporting ====================================================\n\n  progressHandlers = {\n    // Progress for a particular object\n    binding: function (this: ShinyApp, message: { id: string }): void {\n      const key = message.id;\n      const binding = this.$bindings[key];\n\n      if (binding) {\n        $(binding.el).trigger({\n          type: \"shiny:outputinvalidated\",\n          // @ts-expect-error; Can not remove info on a established, malformed Event object\n          binding: binding,\n          name: key,\n        });\n        if (binding.showProgress) binding.showProgress(true);\n      }\n    },\n\n    // Open a page-level progress bar\n    open: async function (message: {\n      style: \"notification\" | \"old\";\n      id: string;\n    }): Promise<void> {\n      if (message.style === \"notification\") {\n        // For new-style (starting in Shiny 0.14) progress indicators that use\n        // the notification API.\n\n        // Progress bar starts hidden; will be made visible if a value is provided\n        // during updates.\n        await showNotification({\n          html:\n            `<div id=\"shiny-progress-${message.id}\" class=\"shiny-progress-notification\">` +\n            '<div class=\"progress active\" style=\"display: none;\"><div class=\"progress-bar\"></div></div>' +\n            '<div class=\"progress-text\">' +\n            '<span class=\"progress-message\">message</span> ' +\n            '<span class=\"progress-detail\"></span>' +\n            \"</div>\" +\n            \"</div>\",\n          id: message.id,\n          duration: null,\n        });\n      } else if (message.style === \"old\") {\n        // For old-style (Shiny <=0.13.2) progress indicators.\n\n        // Add progress container (for all progress items) if not already present\n        let $container = $(\".shiny-progress-container\");\n\n        if ($container.length === 0) {\n          $container = $('<div class=\"shiny-progress-container\"></div>');\n          $(document.body).append($container);\n        }\n\n        // Add div for just this progress ID\n        const depth = $(\".shiny-progress.open\").length;\n        // The 'bar' class is needed for backward compatibility with Bootstrap 2.\n        const $progress = $(\n          '<div class=\"shiny-progress open\">' +\n            '<div class=\"progress active\"><div class=\"progress-bar bar\"></div></div>' +\n            '<div class=\"progress-text\">' +\n            '<span class=\"progress-message\">message</span>' +\n            '<span class=\"progress-detail\"></span>' +\n            \"</div>\" +\n            \"</div>\"\n        );\n\n        $progress.attr(\"id\", message.id);\n        $container.append($progress);\n\n        // Stack bars\n        const $progressBar = $progress.find(\".progress\");\n\n        if ($progressBar) {\n          $progressBar.css(\n            \"top\",\n            depth * ($progressBar.height() as number) + \"px\"\n          );\n\n          // Stack text objects\n          const $progressText = $progress.find(\".progress-text\");\n\n          $progressText.css(\n            \"top\",\n            3 * ($progressBar.height() as number) +\n              depth * ($progressText.outerHeight() as number) +\n              \"px\"\n          );\n\n          $progress.hide();\n        }\n      }\n    },\n\n    // Update page-level progress bar\n    update: function (message: {\n      style: \"notification\" | \"old\";\n      id: string;\n      message?: string;\n      detail?: string;\n      value?: number;\n    }): void {\n      if (message.style === \"notification\") {\n        // For new-style (starting in Shiny 0.14) progress indicators that use\n        // the notification API.\n        const $progress = $(\"#shiny-progress-\" + message.id);\n\n        if ($progress.length === 0) return;\n\n        if (typeof message.message !== \"undefined\") {\n          $progress.find(\".progress-message\").text(message.message);\n        }\n        if (typeof message.detail !== \"undefined\") {\n          $progress.find(\".progress-detail\").text(message.detail);\n        }\n        if (typeof message.value !== \"undefined\" && message.value !== null) {\n          $progress.find(\".progress\").show();\n          $progress.find(\".progress-bar\").width(message.value * 100 + \"%\");\n        }\n      } else if (message.style === \"old\") {\n        // For old-style (Shiny <=0.13.2) progress indicators.\n\n        const $progress = $(\"#\" + message.id + \".shiny-progress\");\n\n        if (typeof message.message !== \"undefined\") {\n          $progress.find(\".progress-message\").text(message.message);\n        }\n        if (typeof message.detail !== \"undefined\") {\n          $progress.find(\".progress-detail\").text(message.detail);\n        }\n        if (typeof message.value !== \"undefined\" && message.value !== null) {\n          $progress.find(\".progress\").show();\n          $progress.find(\".bar\").width(message.value * 100 + \"%\");\n        }\n\n        $progress.fadeIn();\n      }\n    },\n\n    // Close page-level progress bar\n    close: function (message: { style: \"notification\"; id: string }): void {\n      if (message.style === \"notification\") {\n        removeNotification(message.id);\n      } else if (message.style === \"old\") {\n        const $progress = $(\"#\" + message.id + \".shiny-progress\");\n\n        $progress.removeClass(\"open\");\n\n        $progress.fadeOut({\n          complete: function () {\n            $progress.remove();\n\n            // If this was the last shiny-progress, remove container\n            if ($(\".shiny-progress\").length === 0)\n              $(\".shiny-progress-container\").remove();\n          },\n        });\n      }\n    },\n  };\n\n  //// 2021/03: TypeScript Conversion\n  // Added in `./shiny/init.ts` as there are no instances of progressHandlers being used right away on GitHub\n  // Shiny.progressHandlers = this.progressHandlers;\n\n  // Returns a URL which can be queried to get values from inside the server\n  // function. This is enabled with `options(shiny.testmode=TRUE)`.\n  getTestSnapshotBaseUrl({ fullUrl = true } = {}): string {\n    const loc = window.location;\n    let url = \"\";\n\n    if (fullUrl) {\n      // Strip off everything after last slash in path, like dirname() in R\n      url = loc.origin + loc.pathname.replace(/\\/[^/]*$/, \"\");\n    }\n    url +=\n      \"/session/\" +\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      encodeURIComponent(this.config!.sessionId) +\n      \"/dataobj/shinytest?w=\" +\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      encodeURIComponent(this.config!.workerId) +\n      \"&nonce=\" +\n      randomId();\n\n    return url;\n  }\n}\n\nexport { ShinyApp, addCustomMessageHandler };\nexport type { Handler, ErrorsMessageValue };\n", "// Adapted from https://stackoverflow.com/a/47157945/412655\n\nexport class AsyncQueue<T> {\n  private $promises: Array<Promise<T>> = [];\n  private $resolvers: Array<(x: T) => void> = [];\n\n  private _add() {\n    const p: Promise<T> = new Promise((resolve) => {\n      this.$resolvers.push(resolve);\n    });\n\n    this.$promises.push(p);\n  }\n\n  enqueue(x: T): void {\n    if (!this.$resolvers.length) this._add();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const resolve = this.$resolvers.shift()!;\n\n    resolve(x);\n  }\n\n  async dequeue(): Promise<T> {\n    if (!this.$promises.length) this._add();\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const promise = this.$promises.shift()!;\n\n    return promise;\n  }\n\n  isEmpty(): boolean {\n    return !this.$promises.length;\n  }\n\n  isBlocked(): boolean {\n    return !!this.$resolvers.length;\n  }\n\n  get length(): number {\n    return this.$promises.length - this.$resolvers.length;\n  }\n}\n", "import type { UserAgent } from \"../utils/userAgent\";\n\nfunction windowUserAgent(): UserAgent {\n  return window.navigator.userAgent;\n}\n\nexport { windowUserAgent };\n", "import $ from \"jquery\";\nimport { shinyShinyApp } from \"./initedMethods\";\nimport { showNotification } from \"./notifications\";\nimport type { ShinyApp } from \"./shinyapp\";\n\n// We can use this method as `shinyShinyApp()` will throw if not initialized\nfunction shinyAppConfig() {\n  return shinyShinyApp().config as NonNullable<ShinyApp[\"config\"]>;\n}\n\nfunction initReactlog(): void {\n  $(document).on(\"keydown\", function (e) {\n    if (e.which !== 114 || (!e.ctrlKey && !e.metaKey) || e.shiftKey || e.altKey)\n      return;\n    const url =\n      \"reactlog?w=\" +\n      window.escape(shinyAppConfig().workerId) +\n      \"&s=\" +\n      window.escape(shinyAppConfig().sessionId);\n\n    window.open(url);\n    e.preventDefault();\n  });\n\n  $(document).on(\"keydown\", function (e) {\n    if (\n      // if not one of the key combos below\n      !(\n        // cmd/ctrl + fn + f4\n        (\n          (e.which === 115 &&\n            (e.ctrlKey || e.metaKey) &&\n            !e.shiftKey &&\n            !e.altKey) ||\n          // cmd/ctrl + shift + fn + f3\n          (e.which === 114 &&\n            (e.ctrlKey || e.metaKey) &&\n            e.shiftKey &&\n            !e.altKey)\n        )\n      )\n    ) {\n      return;\n    }\n\n    const url =\n      \"reactlog/mark?w=\" +\n      window.escape(shinyAppConfig().workerId) +\n      \"&s=\" +\n      window.escape(shinyAppConfig().sessionId);\n\n    // send notification\n    $.get(url, function (result: \"marked\" | void) {\n      if (result !== \"marked\") return;\n\n      const html =\n        '<span id=\"shiny-reactlog-mark-text\">Marked time point in reactlog</span>';\n\n      showNotification({\n        html: html,\n        closeButton: true,\n      });\n    }).fail(function () {\n      // found returned error while marking, should open webpage\n      window.open(url);\n    });\n\n    e.preventDefault();\n  });\n}\n\nexport { initReactlog };\n", "import { disableFormSubmission } from \"./disableForm\";\nimport { trackHistory } from \"./history\";\nimport { determineBrowserInfo } from \"./browser\";\n\nimport { windowShiny } from \"../window/libraries\";\nimport { setShiny } from \"../shiny\";\nimport { setUserAgent } from \"../utils/userAgent\";\nimport { windowUserAgent } from \"../window/userAgent\";\n\nimport { initReactlog } from \"../shiny/reactlog\";\n\nfunction init(): void {\n  setShiny(windowShiny());\n  setUserAgent(windowUserAgent()); // before determineBrowserInfo()\n\n  determineBrowserInfo();\n  trackHistory();\n\n  disableFormSubmission();\n\n  initReactlog();\n}\n\nexport { init };\n", "import { init } from \"./initialize\";\n\ninit();\n"],
  "mappings": "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",
  "names": ["$", "import_jquery", "$", "import_jquery", "isQt", "isIE", "$", "import_jquery", "import_jquery", "$", "a", "b", "import_jquery", "$", "import_jquery", "$", "$", "import_jquery", "import_jquery", "getLabelNode", "$", "getLabelNode", "$", "import_jquery", "$", "import_jquery", "$", "import_jquery", "getLabelNode", "$", "getLabel", "$", "getLabel", "getLabelNode", "import_jquery", "$", "import_jquery", "getLabelNode", "$", "import_jquery", "getLabelNode", "$", "import_jquery", "getLabelNode", "$", "import_jquery", "$", "import_jquery", "$", "import_jquery", "import_jquery", "import_jquery", "$", "$", "$", "fileInputBinding", "import_jquery", "import_jquery", "$", "show", "$", "import_jquery", "$", "import_jquery", "$", "import_jquery", "import_jquery", "import_jquery", "$", "$", "renderHtml", "$", "import_jquery", "import_jquery", "import_jquery", "coords", "$", "getPanel", "$", "import_jquery", "$", "import_jquery", "$", "$", "import_jquery", "$", "import_jquery", "show", "$", "remove", "import_jquery", "$", "import_jquery", "import_jquery", "$", "import_jquery", "show", "$", "import_jquery", "$", "blob", "show", "remove", "$tabset", "tabsetId", "windowShiny", "$", "windowShiny", "fileInputBinding", "show", "remove", "renderHtml", "$", "import_jquery", "$"]
}
